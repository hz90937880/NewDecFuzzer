;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:22
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 f0 d0 ff ff               	lea eax, [ebx - 0x2f10]
0x804835c:   50                              	push eax
0x804835d:   8d 83 90 d0 ff ff               	lea eax, [ebx - 0x2f70]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 40 ad 04 08               	mov eax, 0x804ad40
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483a5:   3d 6c e0 04 08                  	cmp eax, 0x804e06c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 6c e0 04 08                  	push 0x804e06c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483e5:   2d 6c e0 04 08                  	sub eax, 0x804e06c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 6c e0 04 08                  	push 0x804e06c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 22 2c 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 0e 2c 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 10 d1 ff ff               	lea edx, [eax - 0x2ef0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 e1 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 c3 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 9b 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 71 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 48 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 05 2b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 c3 2a 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 6b 2a 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 1a 2a 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 dd 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 a6 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 87 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 5d 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 31 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 06 29 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 bd 28 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 75 28 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 1b 28 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 c8 27 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 89 27 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 53 27 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 31 27 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 e3 26 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 a7 26 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 1e 26 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 ec 25 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 bc 25 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 77 25 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 38 25 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 06 25 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 d7 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 b9 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 91 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 6c 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 47 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 10 24 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 db 23 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 89 23 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 3e 23 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 07 23 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 d6 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 b7 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 8d 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 65 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 3c 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 00 22 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 c5 21 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 72 21 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 26 21 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 ee 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 bf 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 ab 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 94 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 7f 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 69 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 42 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 1d 20 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 de 1f 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 a5 1f 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 79 1f 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 53 1f 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 f0 d1 ff ff               	fld dword ptr [eax - 0x2e10]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 11 1f 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 f0 d1 ff ff               	fld dword ptr [eax - 0x2e10]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 cf 1e 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 f4 d1 ff ff               	fld dword ptr [eax - 0x2e0c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 f8 d1 ff ff               	fld dword ptr [eax - 0x2e08]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 8d 1e 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 04 d2 ff ff               	fld dword ptr [eax - 0x2dfc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 08 d2 ff ff               	fld dword ptr [eax - 0x2df8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 15 1e 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 10 d2 ff ff               	fld qword ptr [eax - 0x2df0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 10 d2 ff ff               	fld qword ptr [eax - 0x2df0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 18 d2 ff ff               	fld qword ptr [eax - 0x2de8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 b8 1d 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 10 d2 ff ff               	fld qword ptr [eax - 0x2df0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 10 d2 ff ff               	fld qword ptr [eax - 0x2df0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 18 d2 ff ff               	fld qword ptr [eax - 0x2de8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 5b 1d 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 30 d2 ff ff               	fld qword ptr [eax - 0x2dd0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 fe 1c 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 6e 1c 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 50 d2 ff ff               	fld dword ptr [eax - 0x2db0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 54 d2 ff ff               	fld dword ptr [eax - 0x2dac]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 0a 1c 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 99 1b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 56 1b 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 20 d1 ff ff               	lea eax, [ebx - 0x2ee0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 44 d1 ff ff               	lea eax, [ebx - 0x2ebc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497bd
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 50 1a 00 00                  	call 0x804b084 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049640:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049643:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049646:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x8049649:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964c:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x804964f:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049652:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049655:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049658:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x804965b:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965e:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049661:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049664:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049667:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804966a:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x804966d:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x8049670:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049673:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049676:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x8049679:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804967d:   89 c8                           	mov eax, ecx
0x804967f:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049682:   89 d8                           	mov eax, ebx
0x8049684:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049688:   89 f0                           	mov eax, esi
0x804968a:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804968e:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049692:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049695:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049699:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x804969c:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a0:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496a3:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a7:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496aa:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496ae:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496b2:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b6:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ba:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496be:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496c1:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c5:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496c8:   89 f8                           	mov eax, edi
0x80496ca:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496d1:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496d7:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496db:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x80496e2:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496e5:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496eb:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496ef:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x80496f5:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496f8:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496fe:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049702:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049709:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804970d:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x8049714:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049717:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804971d:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049720:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049726:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049729:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804972f:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049732:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049738:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804973c:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x8049742:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049746:   88 82 4d 00 00 00               	mov byte ptr [edx + 0x4d], al
0x804974c:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804974f:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049755:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049759:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x804975f:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049763:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x8049769:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804976d:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049774:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049778:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x804977f:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049782:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049788:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x804978c:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x8049792:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049796:   88 82 61 00 00 00               	mov byte ptr [edx + 0x61], al
0x804979c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804979f:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497a5:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497a9:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x80497b0:   b8 00 00 00 00                  	mov eax, 0
0x80497b5:   83 c4 54                        	add esp, 0x54
0x80497b8:   5b                              	pop ebx
0x80497b9:   5e                              	pop esi
0x80497ba:   5f                              	pop edi
0x80497bb:   5d                              	pop ebp
0x80497bc:   c3                              	ret 
; function: func_1 at 0x80497bd -- 0x804ad40
0x80497bd:   55                              	push ebp
0x80497be:   89 e5                           	mov ebp, esp
0x80497c0:   57                              	push edi
0x80497c1:   56                              	push esi
0x80497c2:   53                              	push ebx
0x80497c3:   81 ec 8c 01 00 00               	sub esp, 0x18c
0x80497c9:   e8 b2 18 00 00                  	call 0x804b080 <__x86.get_pc_thunk.ax>
0x80497ce:   05 32 48 00 00                  	add eax, 0x4832
0x80497d3:   c7 85 7c ff ff ff b4 4a 83 0e   	mov dword ptr [ebp - 0x84], 0xe834ab4
0x80497dd:   66 c7 45 ea 93 f7               	mov word ptr [ebp - 0x16], 0xf793
0x80497e3:   c7 45 e4 08 00 00 00            	mov dword ptr [ebp - 0x1c], 8
0x80497ea:   c6 45 e3 f8                     	mov byte ptr [ebp - 0x1d], 0xf8
0x80497ee:   c7 45 dc 1c eb ae 89            	mov dword ptr [ebp - 0x24], 0x89aeeb1c
0x80497f5:   66 c7 45 f2 2e 3a               	mov word ptr [ebp - 0xe], 0x3a2e
0x80497fb:   66 c7 45 f0 ff ff               	mov word ptr [ebp - 0x10], 0xffff
0x8049801:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x8049808:   c7 45 d8 83 8a 3e 13            	mov dword ptr [ebp - 0x28], 0x133e8a83
0x804980f:   c7 45 d4 a2 1f ce 27            	mov dword ptr [ebp - 0x2c], 0x27ce1fa2
0x8049816:   c7 45 d0 02 00 00 00            	mov dword ptr [ebp - 0x30], 2
0x804981d:   c6 45 cf ec                     	mov byte ptr [ebp - 0x31], 0xec
0x8049821:   c6 45 ce c3                     	mov byte ptr [ebp - 0x32], 0xc3
0x8049825:   c7 45 c8 08 ef f9 86            	mov dword ptr [ebp - 0x38], 0x86f9ef08
0x804982c:   c6 45 c7 e5                     	mov byte ptr [ebp - 0x39], 0xe5
0x8049830:   c6 85 7b ff ff ff 00            	mov byte ptr [ebp - 0x85], 0
0x8049837:   66 c7 45 c4 ef f2               	mov word ptr [ebp - 0x3c], 0xf2ef
0x804983d:   66 c7 85 78 ff ff ff 08 ef      	mov word ptr [ebp - 0x88], 0xef08
0x8049846:   c7 45 c0 de 6c ff f7            	mov dword ptr [ebp - 0x40], 0xf7ff6cde
0x804984d:   c6 45 bf 6c                     	mov byte ptr [ebp - 0x41], 0x6c
0x8049851:   c6 45 be ca                     	mov byte ptr [ebp - 0x42], 0xca
0x8049855:   c7 85 74 ff ff ff b6 8a ba 7c   	mov dword ptr [ebp - 0x8c], 0x7cba8ab6
0x804985f:   66 c7 45 bc 00 af               	mov word ptr [ebp - 0x44], 0xaf00
0x8049865:   c6 85 73 ff ff ff 90            	mov byte ptr [ebp - 0x8d], 0x90
0x804986c:   c7 45 b8 1a cd 31 56            	mov dword ptr [ebp - 0x48], 0x5631cd1a
0x8049873:   66 c7 45 b6 08 00               	mov word ptr [ebp - 0x4a], 8
0x8049879:   c7 45 b0 04 4d 09 57            	mov dword ptr [ebp - 0x50], 0x57094d04
0x8049880:   c7 45 ac 46 2a cd 5d            	mov dword ptr [ebp - 0x54], 0x5dcd2a46
0x8049887:   c6 45 ab 06                     	mov byte ptr [ebp - 0x55], 6
0x804988b:   66 c7 85 70 ff ff ff 01 00      	mov word ptr [ebp - 0x90], 1
0x8049894:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x804989b:   66 c7 85 6e ff ff ff 03 87      	mov word ptr [ebp - 0x92], 0x8703
0x80498a4:   c7 85 68 ff ff ff c3 5e f1 6e   	mov dword ptr [ebp - 0x98], 0x6ef15ec3
0x80498ae:   c7 85 64 ff ff ff bb a8 40 d2   	mov dword ptr [ebp - 0x9c], 0xd240a8bb
0x80498b8:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x80498c2:   66 c7 85 5e ff ff ff 13 94      	mov word ptr [ebp - 0xa2], 0x9413
0x80498cb:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x80498d5:   66 c7 85 56 ff ff ff 68 e7      	mov word ptr [ebp - 0xaa], 0xe768
0x80498de:   66 c7 85 54 ff ff ff ff ff      	mov word ptr [ebp - 0xac], 0xffff
0x80498e7:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x80498ee:   83 e0 01                        	and eax, 1
0x80498f1:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x80498f4:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x80498f7:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x80498fa:   66 c7 45 b6 01 00               	mov word ptr [ebp - 0x4a], 1
0x8049900:   b8 01 00 00 00                  	mov eax, 1
0x8049905:   0f b7 d0                        	movzx edx, ax
0x8049908:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804990c:   0f b7 c0                        	movzx eax, ax
0x804990f:   0f af c2                        	imul eax, edx
0x8049912:   3d 96 d9 00 00                  	cmp eax, 0xd996
0x8049917:   7f 09                           	jg 0x8049922 <func_1+0x165>
0x8049919:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x8049920:   74 07                           	je 0x8049929 <func_1+0x16c>
0x8049922:   b8 01 00 00 00                  	mov eax, 1
0x8049927:   eb 05                           	jmp 0x804992e <func_1+0x171>
0x8049929:   b8 00 00 00 00                  	mov eax, 0
0x804992e:   0f b7 c0                        	movzx eax, ax
0x8049931:   f7 d8                           	neg eax
0x8049933:   89 c2                           	mov edx, eax
0x8049935:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804993c:   39 c2                           	cmp edx, eax
0x804993e:   ba fc b9 ff ff                  	mov edx, 0xffffb9fc
0x8049943:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804994a:   39 c2                           	cmp edx, eax
0x804994c:   0f 9e c0                        	setle al
0x804994f:   0f b6 d0                        	movzx edx, al
0x8049952:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049956:   39 c2                           	cmp edx, eax
0x8049958:   0f 84 b6 0f 00 00               	je 0x804a914 <func_1+0x1157>
0x804995e:   c6 85 3f ff ff ff ff            	mov byte ptr [ebp - 0xc1], 0xff
0x8049965:   c7 85 38 ff ff ff a1 a8 f3 83   	mov dword ptr [ebp - 0xc8], 0x83f3a8a1
0x804996f:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x8049979:   c6 45 a3 6d                     	mov byte ptr [ebp - 0x5d], 0x6d
0x804997d:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x8049987:   c7 85 2c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xd4], 0xfffffffa
0x8049991:   c6 85 2b ff ff ff f3            	mov byte ptr [ebp - 0xd5], 0xf3
0x8049998:   c6 85 2a ff ff ff 7c            	mov byte ptr [ebp - 0xd6], 0x7c
0x804999f:   c7 85 24 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xdc], 0xffffffff
0x80499a9:   c7 45 9c f7 e8 1e f4            	mov dword ptr [ebp - 0x64], 0xf41ee8f7
0x80499b0:   0f be 95 3f ff ff ff            	movsx edx, byte ptr [ebp - 0xc1]
0x80499b7:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x80499bb:   0c cd                           	or al, 0xcd
0x80499bd:   0f bf c8                        	movsx ecx, ax
0x80499c0:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x80499c6:   98                              	cwde 
0x80499c7:   0f af c1                        	imul eax, ecx
0x80499ca:   83 f8 ff                        	cmp eax, -1
0x80499cd:   0f 93 c0                        	setae al
0x80499d0:   0f b6 c0                        	movzx eax, al
0x80499d3:   39 c2                           	cmp edx, eax
0x80499d5:   76 07                           	jbe 0x80499de <func_1+0x221>
0x80499d7:   b8 d6 34 4b 22                  	mov eax, 0x224b34d6
0x80499dc:   eb 05                           	jmp 0x80499e3 <func_1+0x226>
0x80499de:   b8 d7 34 4b 22                  	mov eax, 0x224b34d7
0x80499e3:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x80499e9:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x80499ed:   0f 84 59 05 00 00               	je 0x8049f4c <func_1+0x78f>
0x80499f3:   c6 85 03 ff ff ff 26            	mov byte ptr [ebp - 0xfd], 0x26
0x80499fa:   c7 85 fc fe ff ff 03 31 99 62   	mov dword ptr [ebp - 0x104], 0x62993103
0x8049a04:   66 c7 85 fa fe ff ff 01 00      	mov word ptr [ebp - 0x106], 1
0x8049a0d:   c6 45 9b ff                     	mov byte ptr [ebp - 0x65], 0xff
0x8049a11:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049a1b:   66 c7 85 f2 fe ff ff a5 2e      	mov word ptr [ebp - 0x10e], 0x2ea5
0x8049a24:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x8049a2b:   0f 84 2e 03 00 00               	je 0x8049d5f <func_1+0x5a2>
0x8049a31:   c7 85 e0 fe ff ff fc 76 9b bd   	mov dword ptr [ebp - 0x120], 0xbd9b76fc
0x8049a3b:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x8049a45:   c7 85 d8 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x128], 0xfffffff7
0x8049a4f:   66 c7 85 d6 fe ff ff ba 47      	mov word ptr [ebp - 0x12a], 0x47ba
0x8049a58:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049a5c:   0f b6 95 03 ff ff ff            	movzx edx, byte ptr [ebp - 0xfd]
0x8049a63:   83 ea 01                        	sub edx, 1
0x8049a66:   39 d0                           	cmp eax, edx
0x8049a68:   0f 97 c0                        	seta al
0x8049a6b:   0f b6 c0                        	movzx eax, al
0x8049a6e:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049a71:   0f 9f c0                        	setg al
0x8049a74:   0f b6 c0                        	movzx eax, al
0x8049a77:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x8049a7d:   75 10                           	jne 0x8049a8f <func_1+0x2d2>
0x8049a7f:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049a86:   74 07                           	je 0x8049a8f <func_1+0x2d2>
0x8049a88:   b8 01 00 00 00                  	mov eax, 1
0x8049a8d:   eb 05                           	jmp 0x8049a94 <func_1+0x2d7>
0x8049a8f:   b8 00 00 00 00                  	mov eax, 0
0x8049a94:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049a97:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049a9b:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049a9e:   75 0d                           	jne 0x8049aad <func_1+0x2f0>
0x8049aa0:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049aa7:   0f 84 a0 00 00 00               	je 0x8049b4d <func_1+0x390>
0x8049aad:   c7 85 c4 fe ff ff 72 7b c7 70   	mov dword ptr [ebp - 0x13c], 0x70c77b72
0x8049ab7:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049abb:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049abf:   0f 95 c0                        	setne al
0x8049ac2:   0f b6 c0                        	movzx eax, al
0x8049ac5:   c7 85 c4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x13c], 1
0x8049acf:   0b 85 c4 fe ff ff               	or eax, dword ptr [ebp - 0x13c]
0x8049ad5:   89 c2                           	mov edx, eax
0x8049ad7:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049ada:   31 d0                           	xor eax, edx
0x8049adc:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049adf:   90                              	nop 
0x8049ae0:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049ae6:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049aec:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049af2:   0f bf d0                        	movsx edx, ax
0x8049af5:   69 d2 99 b0 ff ff               	imul edx, edx, 0xffffb099
0x8049afb:   c1 ea 10                        	shr edx, 0x10
0x8049afe:   01 c2                           	add edx, eax
0x8049b00:   89 d1                           	mov ecx, edx
0x8049b02:   66 c1 f9 0e                     	sar cx, 0xe
0x8049b06:   89 c2                           	mov edx, eax
0x8049b08:   66 c1 fa 0f                     	sar dx, 0xf
0x8049b0c:   29 d1                           	sub ecx, edx
0x8049b0e:   89 ca                           	mov edx, ecx
0x8049b10:   66 69 d2 c7 5c                  	imul dx, dx, 0x5cc7
0x8049b15:   29 d0                           	sub eax, edx
0x8049b17:   89 c2                           	mov edx, eax
0x8049b19:   0f bf ca                        	movsx ecx, dx
0x8049b1c:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049b1f:   3b 85 e0 fe ff ff               	cmp eax, dword ptr [ebp - 0x120]
0x8049b25:   0f 92 c0                        	setb al
0x8049b28:   0f b6 d0                        	movzx edx, al
0x8049b2b:   89 c8                           	mov eax, ecx
0x8049b2d:   66 09 45 f0                     	or word ptr [ebp - 0x10], ax
0x8049b31:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x8049b35:   39 c2                           	cmp edx, eax
0x8049b37:   0f be 85 3f ff ff ff            	movsx eax, byte ptr [ebp - 0xc1]
0x8049b3e:   83 e8 01                        	sub eax, 1
0x8049b41:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049b44:   80 6d 9b 01                     	sub byte ptr [ebp - 0x65], 1
0x8049b48:   e9 77 06 00 00                  	jmp 0x804a1c4 <func_1+0xa07>
0x8049b4d:   c7 85 d0 fe ff ff 78 31 af 54   	mov dword ptr [ebp - 0x130], 0x54af3178
0x8049b57:   c7 85 cc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x134], 0xffffffff
0x8049b61:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b64:   25 f9 00 00 00                  	and eax, 0xf9
0x8049b69:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049b6c:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049b6f:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049b72:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x8049b76:   0f 89 cb 00 00 00               	jns 0x8049c47 <func_1+0x48a>
0x8049b7c:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049b80:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x8049b84:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x8049b88:   0f bf bd 78 ff ff ff            	movsx edi, word ptr [ebp - 0x88]
0x8049b8f:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049b95:   0f b7 5d c4                     	movzx ebx, word ptr [ebp - 0x3c]
0x8049b99:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049b9f:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x8049ba6:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x8049bac:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049bb0:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049bb6:   0f be 5d ce                     	movsx ebx, byte ptr [ebp - 0x32]
0x8049bba:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x8049bc0:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x8049bc4:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x8049bca:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x8049bce:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049bd4:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049bd8:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x8049bdc:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049be0:   50                              	push eax
0x8049be1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049be7:   51                              	push ecx
0x8049be8:   56                              	push esi
0x8049be9:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049bec:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049bf2:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049bf8:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049bfe:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049c04:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c07:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049c0d:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049c13:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c16:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c19:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c1c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c1f:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049c25:   57                              	push edi
0x8049c26:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049c29:   53                              	push ebx
0x8049c2a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c2d:   52                              	push edx
0x8049c2e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049c34:   e8 ed f9 ff ff                  	call 0x8049626 <set_var>
0x8049c39:   83 c4 5c                        	add esp, 0x5c
0x8049c3c:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x8049c42:   e9 f1 10 00 00                  	jmp 0x804ad38 <func_1+0x157b>
0x8049c47:   c7 85 c8 fe ff ff c5 d6 a6 09   	mov dword ptr [ebp - 0x138], 0x9a6d6c5
0x8049c51:   c7 85 cc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x134], 0
0x8049c5b:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049c61:   0f b6 c8                        	movzx ecx, al
0x8049c64:   b8 05 00 00 00                  	mov eax, 5
0x8049c69:   99                              	cdq 
0x8049c6a:   f7 f9                           	idiv ecx
0x8049c6c:   89 d0                           	mov eax, edx
0x8049c6e:   25 00 00 5b b6                  	and eax, 0xb65b0000
0x8049c73:   0d fa ff 00 00                  	or eax, 0xfffa
0x8049c78:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049c7b:   76 0d                           	jbe 0x8049c8a <func_1+0x4cd>
0x8049c7d:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049c81:   74 07                           	je 0x8049c8a <func_1+0x4cd>
0x8049c83:   b8 01 00 00 00                  	mov eax, 1
0x8049c88:   eb 05                           	jmp 0x8049c8f <func_1+0x4d2>
0x8049c8a:   b8 00 00 00 00                  	mov eax, 0
0x8049c8f:   66 21 45 f2                     	and word ptr [ebp - 0xe], ax
0x8049c93:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049c97:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x8049c9b:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x8049c9f:   0f bf bd 78 ff ff ff            	movsx edi, word ptr [ebp - 0x88]
0x8049ca6:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049cac:   0f b7 5d c4                     	movzx ebx, word ptr [ebp - 0x3c]
0x8049cb0:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049cb6:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x8049cbd:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x8049cc3:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049cc7:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049ccd:   0f be 5d ce                     	movsx ebx, byte ptr [ebp - 0x32]
0x8049cd1:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x8049cd7:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x8049cdb:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x8049ce1:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x8049ce5:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049ceb:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049cef:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x8049cf3:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049cf7:   50                              	push eax
0x8049cf8:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049cfe:   51                              	push ecx
0x8049cff:   56                              	push esi
0x8049d00:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d03:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049d09:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049d0f:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049d15:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049d1b:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049d1e:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049d24:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049d2a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d2d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049d30:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049d33:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d36:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049d3c:   57                              	push edi
0x8049d3d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d40:   53                              	push ebx
0x8049d41:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049d44:   52                              	push edx
0x8049d45:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049d4b:   e8 d6 f8 ff ff                  	call 0x8049626 <set_var>
0x8049d50:   83 c4 5c                        	add esp, 0x5c
0x8049d53:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x8049d5a:   e9 d9 0f 00 00                  	jmp 0x804ad38 <func_1+0x157b>
0x8049d5f:   66 c7 45 98 48 4c               	mov word ptr [ebp - 0x68], 0x4c48
0x8049d65:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049d69:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049d6c:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049d70:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d73:   c6 45 9b 00                     	mov byte ptr [ebp - 0x65], 0
0x8049d77:   e9 b7 00 00 00                  	jmp 0x8049e33 <func_1+0x676>
0x8049d7c:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x8049d86:   0f be 55 e3                     	movsx edx, byte ptr [ebp - 0x1d]
0x8049d8a:   66 0f be 8d 3f ff ff ff         	movsx cx, byte ptr [ebp - 0xc1]
0x8049d92:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049d96:   0f af c8                        	imul ecx, eax
0x8049d99:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049d9d:   0f af c1                        	imul eax, ecx
0x8049da0:   66 c1 e8 0e                     	shr ax, 0xe
0x8049da4:   0f b7 c0                        	movzx eax, ax
0x8049da7:   39 c2                           	cmp edx, eax
0x8049da9:   0f 9f c0                        	setg al
0x8049dac:   0f b6 c0                        	movzx eax, al
0x8049daf:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049db5:   76 09                           	jbe 0x8049dc0 <func_1+0x603>
0x8049db7:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x8049dbe:   74 07                           	je 0x8049dc7 <func_1+0x60a>
0x8049dc0:   b8 01 00 00 00                  	mov eax, 1
0x8049dc5:   eb 05                           	jmp 0x8049dcc <func_1+0x60f>
0x8049dc7:   b8 00 00 00 00                  	mov eax, 0
0x8049dcc:   83 f8 3b                        	cmp eax, 0x3b
0x8049dcf:   0f 9f c0                        	setg al
0x8049dd2:   0f b6 c0                        	movzx eax, al
0x8049dd5:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049dd9:   0f be ca                        	movsx ecx, dl
0x8049ddc:   99                              	cdq 
0x8049ddd:   f7 f9                           	idiv ecx
0x8049ddf:   89 d0                           	mov eax, edx
0x8049de1:   3d 3d c8 00 00                  	cmp eax, 0xc83d
0x8049de6:   0f 9e c0                        	setle al
0x8049de9:   0f b6 c0                        	movzx eax, al
0x8049dec:   99                              	cdq 
0x8049ded:   f7 bd e4 fe ff ff               	idiv dword ptr [ebp - 0x11c]
0x8049df3:   89 c2                           	mov edx, eax
0x8049df5:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049df9:   21 c2                           	and edx, eax
0x8049dfb:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049dff:   39 c2                           	cmp edx, eax
0x8049e01:   0f 9e c0                        	setle al
0x8049e04:   0f b6 c0                        	movzx eax, al
0x8049e07:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049e0d:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049e13:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049e16:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e19:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049e1c:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049e22:   83 c0 01                        	add eax, 1
0x8049e25:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049e28:   0f b6 45 9b                     	movzx eax, byte ptr [ebp - 0x65]
0x8049e2c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049e2f:   80 45 9b 04                     	add byte ptr [ebp - 0x65], 4
0x8049e33:   80 7d 9b 28                     	cmp byte ptr [ebp - 0x65], 0x28
0x8049e37:   0f 85 3f ff ff ff               	jne 0x8049d7c <func_1+0x5bf>
0x8049e3d:   0f b7 75 98                     	movzx esi, word ptr [ebp - 0x68]
0x8049e41:   b8 03 d3 00 00                  	mov eax, 0xd303
0x8049e46:   99                              	cdq 
0x8049e47:   f7 fe                           	idiv esi
0x8049e49:   85 c0                           	test eax, eax
0x8049e4b:   74 5c                           	je 0x8049ea9 <func_1+0x6ec>
0x8049e4d:   c6 85 eb fe ff ff f8            	mov byte ptr [ebp - 0x115], 0xf8
0x8049e54:   c6 45 97 55                     	mov byte ptr [ebp - 0x69], 0x55
0x8049e58:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049e5c:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049e5f:   c6 85 ea fe ff ff 00            	mov byte ptr [ebp - 0x116], 0
0x8049e66:   c6 85 ea fe ff ff 04            	mov byte ptr [ebp - 0x116], 4
0x8049e6d:   c7 45 ec 03 00 00 00            	mov dword ptr [ebp - 0x14], 3
0x8049e74:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049e78:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x8049e7b:   66 c7 45 98 00 00               	mov word ptr [ebp - 0x68], 0
0x8049e81:   eb 1a                           	jmp 0x8049e9d <func_1+0x6e0>
0x8049e83:   c7 45 ec fe ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffe
0x8049e8a:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x8049e8e:   88 85 eb fe ff ff               	mov byte ptr [ebp - 0x115], al
0x8049e94:   80 6d 97 01                     	sub byte ptr [ebp - 0x69], 1
0x8049e98:   66 83 45 98 01                  	add word ptr [ebp - 0x68], 1
0x8049e9d:   66 83 7d 98 0d                  	cmp word ptr [ebp - 0x68], 0xd
0x8049ea2:   75 df                           	jne 0x8049e83 <func_1+0x6c6>
0x8049ea4:   e9 1b 03 00 00                  	jmp 0x804a1c4 <func_1+0xa07>
0x8049ea9:   c7 85 ec fe ff ff 0c 68 2c fc   	mov dword ptr [ebp - 0x114], 0xfc2c680c
0x8049eb3:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x8049eb7:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049eba:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049ebd:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x8049ec0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ec3:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x8049ec6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ec9:   83 7d dc 01                     	cmp dword ptr [ebp - 0x24], 1
0x8049ecd:   0f 94 c0                        	sete al
0x8049ed0:   0f b6 c0                        	movzx eax, al
0x8049ed3:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049ed6:   29 c2                           	sub edx, eax
0x8049ed8:   89 d0                           	mov eax, edx
0x8049eda:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x8049edd:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049ee1:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049ee5:   21 d0                           	and eax, edx
0x8049ee7:   f7 d0                           	not eax
0x8049ee9:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049eec:   0f 97 c0                        	seta al
0x8049eef:   0f b6 d0                        	movzx edx, al
0x8049ef2:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ef5:   0f b7 c0                        	movzx eax, ax
0x8049ef8:   0f af c2                        	imul eax, edx
0x8049efb:   0b 85 38 ff ff ff               	or eax, dword ptr [ebp - 0xc8]
0x8049f01:   89 c1                           	mov ecx, eax
0x8049f03:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049f06:   99                              	cdq 
0x8049f07:   f7 f9                           	idiv ecx
0x8049f09:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x8049f0d:   39 c2                           	cmp edx, eax
0x8049f0f:   0f 94 c0                        	sete al
0x8049f12:   0f b6 d0                        	movzx edx, al
0x8049f15:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x8049f19:   0f be c0                        	movsx eax, al
0x8049f1c:   01 d0                           	add eax, edx
0x8049f1e:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049f21:   0f 9d c0                        	setge al
0x8049f24:   0f b6 c0                        	movzx eax, al
0x8049f27:   66 89 85 f2 fe ff ff            	mov word ptr [ebp - 0x10e], ax
0x8049f2e:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x8049f35:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f38:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049f3e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049f41:   31 85 ec fe ff ff               	xor dword ptr [ebp - 0x114], eax
0x8049f47:   e9 78 02 00 00                  	jmp 0x804a1c4 <func_1+0xa07>
0x8049f4c:   c7 85 20 ff ff ff ac d8 65 76   	mov dword ptr [ebp - 0xe0], 0x7665d8ac
0x8049f56:   c7 85 1c ff ff ff e7 24 52 f2   	mov dword ptr [ebp - 0xe4], 0xf25224e7
0x8049f60:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f63:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f66:   c7 45 ac e6 ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffe6
0x8049f6d:   e9 43 02 00 00                  	jmp 0x804a1b5 <func_1+0x9f8>
0x8049f72:   c7 85 18 ff ff ff ee 4c 86 9e   	mov dword ptr [ebp - 0xe8], 0x9e864cee
0x8049f7c:   c7 85 14 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xec], 2
0x8049f86:   c7 45 d0 ff 00 00 00            	mov dword ptr [ebp - 0x30], 0xff
0x8049f8d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f90:   08 45 cf                        	or byte ptr [ebp - 0x31], al
0x8049f93:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049f97:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x8049f9a:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x8049f9e:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x8049fa2:   0f b6 c0                        	movzx eax, al
0x8049fa5:   f6 f2                           	div dl
0x8049fa7:   0f b6 c4                        	movzx eax, ah
0x8049faa:   0f b6 c0                        	movzx eax, al
0x8049fad:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x8049fb3:   c7 45 c8 04 00 00 00            	mov dword ptr [ebp - 0x38], 4
0x8049fba:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x8049fc4:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049fc7:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049fca:   0f 92 c0                        	setb al
0x8049fcd:   0f b6 d0                        	movzx edx, al
0x8049fd0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fd3:   0f be c0                        	movsx eax, al
0x8049fd6:   89 c1                           	mov ecx, eax
0x8049fd8:   d3 fa                           	sar edx, cl
0x8049fda:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x8049fde:   31 d0                           	xor eax, edx
0x8049fe0:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x8049fe6:   0f 94 c0                        	sete al
0x8049fe9:   0f b6 d0                        	movzx edx, al
0x8049fec:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049ff2:   98                              	cwde 
0x8049ff3:   39 c2                           	cmp edx, eax
0x8049ff5:   75 04                           	jne 0x8049ffb <func_1+0x83e>
0x8049ff7:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x8049ffb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049ffe:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x804a001:   0f 9f c0                        	setg al
0x804a004:   0f b6 c0                        	movzx eax, al
0x804a007:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a00a:   0f b7 f2                        	movzx esi, dx
0x804a00d:   99                              	cdq 
0x804a00e:   f7 fe                           	idiv esi
0x804a010:   85 c0                           	test eax, eax
0x804a012:   75 09                           	jne 0x804a01d <func_1+0x860>
0x804a014:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804a01b:   74 07                           	je 0x804a024 <func_1+0x867>
0x804a01d:   b8 01 00 00 00                  	mov eax, 1
0x804a022:   eb 05                           	jmp 0x804a029 <func_1+0x86c>
0x804a024:   b8 00 00 00 00                  	mov eax, 0
0x804a029:   3c 08                           	cmp al, 8
0x804a02b:   0f 86 76 01 00 00               	jbe 0x804a1a7 <func_1+0x9ea>
0x804a031:   c6 85 13 ff ff ff 01            	mov byte ptr [ebp - 0xed], 1
0x804a038:   66 c7 45 f2 0d 00               	mov word ptr [ebp - 0xe], 0xd
0x804a03e:   e9 13 01 00 00                  	jmp 0x804a156 <func_1+0x999>
0x804a043:   c7 85 0c ff ff ff 61 8e 66 4b   	mov dword ptr [ebp - 0xf4], 0x4b668e61
0x804a04d:   c7 85 08 ff ff ff 3f d7 0d 82   	mov dword ptr [ebp - 0xf8], 0x820dd73f
0x804a057:   c7 85 04 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xfc], 1
0x804a061:   0f b6 95 13 ff ff ff            	movzx edx, byte ptr [ebp - 0xed]
0x804a068:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a06b:   3d f7 ff 00 00                  	cmp eax, 0xfff7
0x804a070:   0f 97 c0                        	seta al
0x804a073:   0f b6 c8                        	movzx ecx, al
0x804a076:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a07a:   39 c1                           	cmp ecx, eax
0x804a07c:   0f 95 c0                        	setne al
0x804a07f:   0f b6 c8                        	movzx ecx, al
0x804a082:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a086:   39 c1                           	cmp ecx, eax
0x804a088:   0f 9d c0                        	setge al
0x804a08b:   0f b6 c8                        	movzx ecx, al
0x804a08e:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a095:   0f b6 c0                        	movzx eax, al
0x804a098:   0f af c1                        	imul eax, ecx
0x804a09b:   3d c4 00 00 00                  	cmp eax, 0xc4
0x804a0a0:   0f 9f c0                        	setg al
0x804a0a3:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a0a6:   80 bd 73 ff ff ff 00            	cmp byte ptr [ebp - 0x8d], 0
0x804a0ad:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a0b3:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a0b6:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a0b9:   39 c2                           	cmp edx, eax
0x804a0bb:   0f b6 b5 13 ff ff ff            	movzx esi, byte ptr [ebp - 0xed]
0x804a0c2:   b8 45 00 00 00                  	mov eax, 0x45
0x804a0c7:   99                              	cdq 
0x804a0c8:   f7 fe                           	idiv esi
0x804a0ca:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a0cd:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0d0:   3b 85 0c ff ff ff               	cmp eax, dword ptr [ebp - 0xf4]
0x804a0d6:   0f 9c c0                        	setl al
0x804a0d9:   0f b6 d0                        	movzx edx, al
0x804a0dc:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x804a0e3:   0f be c0                        	movsx eax, al
0x804a0e6:   0f af c2                        	imul eax, edx
0x804a0e9:   85 c0                           	test eax, eax
0x804a0eb:   74 06                           	je 0x804a0f3 <func_1+0x936>
0x804a0ed:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a0f1:   74 07                           	je 0x804a0fa <func_1+0x93d>
0x804a0f3:   b8 01 00 00 00                  	mov eax, 1
0x804a0f8:   eb 05                           	jmp 0x804a0ff <func_1+0x942>
0x804a0fa:   b8 00 00 00 00                  	mov eax, 0
0x804a0ff:   31 85 08 ff ff ff               	xor dword ptr [ebp - 0xf8], eax
0x804a105:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a10b:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a10e:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x804a115:   75 0d                           	jne 0x804a124 <func_1+0x967>
0x804a117:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a11b:   74 07                           	je 0x804a124 <func_1+0x967>
0x804a11d:   b8 01 00 00 00                  	mov eax, 1
0x804a122:   eb 05                           	jmp 0x804a129 <func_1+0x96c>
0x804a124:   b8 00 00 00 00                  	mov eax, 0
0x804a129:   33 85 18 ff ff ff               	xor eax, dword ptr [ebp - 0xe8]
0x804a12f:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a135:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a139:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a13f:   0f 95 c0                        	setne al
0x804a142:   0f b6 c0                        	movzx eax, al
0x804a145:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x804a14b:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a14f:   83 c0 04                        	add eax, 4
0x804a152:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a156:   66 83 7d f2 17                  	cmp word ptr [ebp - 0xe], 0x17
0x804a15b:   0f 8f e2 fe ff ff               	jg 0x804a043 <func_1+0x886>
0x804a161:   c7 85 14 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xec], 2
0x804a16b:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a16e:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a171:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a174:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x804a17a:   0f 94 c0                        	sete al
0x804a17d:   0f b6 c0                        	movzx eax, al
0x804a180:   89 c2                           	mov edx, eax
0x804a182:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a186:   0f b6 c0                        	movzx eax, al
0x804a189:   0f af c2                        	imul eax, edx
0x804a18c:   98                              	cwde 
0x804a18d:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a190:   0f bf ca                        	movsx ecx, dx
0x804a193:   99                              	cdq 
0x804a194:   f7 f9                           	idiv ecx
0x804a196:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a19a:   09 d0                           	or eax, edx
0x804a19c:   0b 85 18 ff ff ff               	or eax, dword ptr [ebp - 0xe8]
0x804a1a2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a1a5:   eb 06                           	jmp 0x804a1ad <func_1+0x9f0>
0x804a1a7:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a1aa:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a1ad:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a1b1:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a1b5:   83 7d ac 02                     	cmp dword ptr [ebp - 0x54], 2
0x804a1b9:   0f 86 b3 fd ff ff               	jbe 0x8049f72 <func_1+0x7b5>
0x804a1bf:   66 83 6d c4 01                  	sub word ptr [ebp - 0x3c], 1
0x804a1c4:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x804a1cb:   b8 01 00 00 00                  	mov eax, 1
0x804a1d0:   99                              	cdq 
0x804a1d1:   f7 f9                           	idiv ecx
0x804a1d3:   89 d0                           	mov eax, edx
0x804a1d5:   89 c2                           	mov edx, eax
0x804a1d7:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a1da:   09 d0                           	or eax, edx
0x804a1dc:   66 69 c0 3a cf                  	imul ax, ax, 0xcf3a
0x804a1e1:   89 c2                           	mov edx, eax
0x804a1e3:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a1e6:   09 d0                           	or eax, edx
0x804a1e8:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a1ec:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x804a1f0:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804a1f7:   39 c2                           	cmp edx, eax
0x804a1f9:   0f 9d c0                        	setge al
0x804a1fc:   0f b6 d0                        	movzx edx, al
0x804a1ff:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a203:   39 c2                           	cmp edx, eax
0x804a205:   74 2f                           	je 0x804a236 <func_1+0xa79>
0x804a207:   66 c7 85 84 fe ff ff 01 00      	mov word ptr [ebp - 0x17c], 1
0x804a210:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a214:   0f be c0                        	movsx eax, al
0x804a217:   c1 e0 06                        	shl eax, 6
0x804a21a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a21d:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a221:   08 45 cf                        	or byte ptr [ebp - 0x31], al
0x804a224:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a228:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a22b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a22e:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a231:   e9 4e 06 00 00                  	jmp 0x804a884 <func_1+0x10c7>
0x804a236:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a23d:   66 c7 85 c2 fe ff ff b3 10      	mov word ptr [ebp - 0x13e], 0x10b3
0x804a246:   c7 85 bc fe ff ff b1 8d 09 37   	mov dword ptr [ebp - 0x144], 0x37098db1
0x804a250:   80 6d bf 01                     	sub byte ptr [ebp - 0x41], 1
0x804a254:   c6 45 ab 0c                     	mov byte ptr [ebp - 0x55], 0xc
0x804a258:   eb 45                           	jmp 0x804a29f <func_1+0xae2>
0x804a25a:   c6 85 87 fe ff ff 37            	mov byte ptr [ebp - 0x179], 0x37
0x804a261:   0f b6 85 87 fe ff ff            	movzx eax, byte ptr [ebp - 0x179]
0x804a268:   83 e8 01                        	sub eax, 1
0x804a26b:   88 85 87 fe ff ff               	mov byte ptr [ebp - 0x179], al
0x804a271:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a275:   f7 d0                           	not eax
0x804a277:   c0 e8 07                        	shr al, 7
0x804a27a:   0f b6 c0                        	movzx eax, al
0x804a27d:   8b 95 34 ff ff ff               	mov edx, dword ptr [ebp - 0xcc]
0x804a283:   29 d0                           	sub eax, edx
0x804a285:   0f b7 d0                        	movzx edx, ax
0x804a288:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a28f:   0f b7 c0                        	movzx eax, ax
0x804a292:   89 c1                           	mov ecx, eax
0x804a294:   d3 fa                           	sar edx, cl
0x804a296:   89 d0                           	mov eax, edx
0x804a298:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a29b:   80 6d ab 01                     	sub byte ptr [ebp - 0x55], 1
0x804a29f:   80 7d ab 0a                     	cmp byte ptr [ebp - 0x55], 0xa
0x804a2a3:   76 b5                           	jbe 0x804a25a <func_1+0xa9d>
0x804a2a5:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a2ac:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804a2b0:   74 26                           	je 0x804a2d8 <func_1+0xb1b>
0x804a2b2:   0f bf 85 c2 fe ff ff            	movsx eax, word ptr [ebp - 0x13e]
0x804a2b9:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a2bc:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a2bf:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a2c5:   81 bd 68 ff ff ff da 2a cc 04   	cmp dword ptr [ebp - 0x98], 0x4cc2ada
0x804a2cf:   74 07                           	je 0x804a2d8 <func_1+0xb1b>
0x804a2d1:   b8 01 00 00 00                  	mov eax, 1
0x804a2d6:   eb 05                           	jmp 0x804a2dd <func_1+0xb20>
0x804a2d8:   b8 00 00 00 00                  	mov eax, 0
0x804a2dd:   3d e5 ed d8 40                  	cmp eax, 0x40d8ede5
0x804a2e2:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x804a2e9:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a2ec:   7f 07                           	jg 0x804a2f5 <func_1+0xb38>
0x804a2ee:   ba fa ff 00 00                  	mov edx, 0xfffa
0x804a2f3:   eb 05                           	jmp 0x804a2fa <func_1+0xb3d>
0x804a2f5:   ba f9 ff 00 00                  	mov edx, 0xfff9
0x804a2fa:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a2fe:   39 c2                           	cmp edx, eax
0x804a300:   0f 84 9b 04 00 00               	je 0x804a7a1 <func_1+0xfe4>
0x804a306:   66 c7 85 a6 fe ff ff 05 00      	mov word ptr [ebp - 0x15a], 5
0x804a30f:   c7 85 a0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x160], 1
0x804a319:   c7 45 8c 70 ac 37 ed            	mov dword ptr [ebp - 0x74], 0xed37ac70
0x804a320:   c7 45 88 a9 3c fb f7            	mov dword ptr [ebp - 0x78], 0xf7fb3ca9
0x804a327:   66 c7 85 a6 fe ff ff dd 50      	mov word ptr [ebp - 0x15a], 0x50dd
0x804a330:   b8 01 00 00 00                  	mov eax, 1
0x804a335:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x804a338:   0f 9c c0                        	setl al
0x804a33b:   0f b6 c0                        	movzx eax, al
0x804a33e:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a341:   0f 9c c0                        	setl al
0x804a344:   0f b6 c0                        	movzx eax, al
0x804a347:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a34a:   0f b6 ca                        	movzx ecx, dl
0x804a34d:   99                              	cdq 
0x804a34e:   f7 f9                           	idiv ecx
0x804a350:   89 d0                           	mov eax, edx
0x804a352:   3d 9b 92 42 da                  	cmp eax, 0xda42929b
0x804a357:   0f 84 a0 01 00 00               	je 0x804a4fd <func_1+0xd40>
0x804a35d:   66 c7 85 98 fe ff ff b0 63      	mov word ptr [ebp - 0x168], 0x63b0
0x804a366:   66 83 bd a6 fe ff ff 00         	cmp word ptr [ebp - 0x15a], 0
0x804a36e:   75 22                           	jne 0x804a392 <func_1+0xbd5>
0x804a370:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a373:   89 c2                           	mov edx, eax
0x804a375:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a379:   09 d0                           	or eax, edx
0x804a37b:   0f bf d0                        	movsx edx, ax
0x804a37e:   0f b7 85 98 fe ff ff            	movzx eax, word ptr [ebp - 0x168]
0x804a385:   98                              	cwde 
0x804a386:   01 d0                           	add eax, edx
0x804a388:   85 c0                           	test eax, eax
0x804a38a:   75 06                           	jne 0x804a392 <func_1+0xbd5>
0x804a38c:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a390:   74 07                           	je 0x804a399 <func_1+0xbdc>
0x804a392:   b8 01 00 00 00                  	mov eax, 1
0x804a397:   eb 05                           	jmp 0x804a39e <func_1+0xbe1>
0x804a399:   b8 00 00 00 00                  	mov eax, 0
0x804a39e:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a3a1:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a3a5:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x804a3a9:   0f be d2                        	movsx edx, dl
0x804a3ac:   20 45 be                        	and byte ptr [ebp - 0x42], al
0x804a3af:   0f b6 45 be                     	movzx eax, byte ptr [ebp - 0x42]
0x804a3b3:   0f be c0                        	movsx eax, al
0x804a3b6:   0f af c2                        	imul eax, edx
0x804a3b9:   85 c0                           	test eax, eax
0x804a3bb:   80 bd 2a ff ff ff 00            	cmp byte ptr [ebp - 0xd6], 0
0x804a3c2:   7e 07                           	jle 0x804a3cb <func_1+0xc0e>
0x804a3c4:   b8 18 27 00 00                  	mov eax, 0x2718
0x804a3c9:   eb 05                           	jmp 0x804a3d0 <func_1+0xc13>
0x804a3cb:   b8 00 00 00 00                  	mov eax, 0
0x804a3d0:   3b 85 7c ff ff ff               	cmp eax, dword ptr [ebp - 0x84]
0x804a3d6:   0f 92 c0                        	setb al
0x804a3d9:   0f b6 c0                        	movzx eax, al
0x804a3dc:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a3df:   66 c7 45 b6 00 00               	mov word ptr [ebp - 0x4a], 0
0x804a3e5:   e9 03 01 00 00                  	jmp 0x804a4ed <func_1+0xd30>
0x804a3ea:   66 c7 85 8c fe ff ff ff ff      	mov word ptr [ebp - 0x174], 0xffff
0x804a3f3:   c7 85 88 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x178], 1
0x804a3fd:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x804a404:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x804a407:   83 f8 01                        	cmp eax, 1
0x804a40a:   0f 95 c0                        	setne al
0x804a40d:   0f b6 c0                        	movzx eax, al
0x804a410:   66 31 45 ea                     	xor word ptr [ebp - 0x16], ax
0x804a414:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a418:   25 4a 44 00 00                  	and eax, 0x444a
0x804a41d:   35 7b ec f0 5d                  	xor eax, 0x5df0ec7b
0x804a422:   89 c2                           	mov edx, eax
0x804a424:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a428:   39 c2                           	cmp edx, eax
0x804a42a:   74 07                           	je 0x804a433 <func_1+0xc76>
0x804a42c:   b8 97 00 00 00                  	mov eax, 0x97
0x804a431:   eb 05                           	jmp 0x804a438 <func_1+0xc7b>
0x804a433:   b8 fb 00 00 00                  	mov eax, 0xfb
0x804a438:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a43b:   0f b6 ca                        	movzx ecx, dl
0x804a43e:   99                              	cdq 
0x804a43f:   f7 f9                           	idiv ecx
0x804a441:   89 d0                           	mov eax, edx
0x804a443:   89 c2                           	mov edx, eax
0x804a445:   0f b7 85 8c fe ff ff            	movzx eax, word ptr [ebp - 0x174]
0x804a44c:   09 d0                           	or eax, edx
0x804a44e:   66 89 85 8c fe ff ff            	mov word ptr [ebp - 0x174], ax
0x804a455:   0f b7 85 8c fe ff ff            	movzx eax, word ptr [ebp - 0x174]
0x804a45c:   89 c1                           	mov ecx, eax
0x804a45e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a461:   89 c2                           	mov edx, eax
0x804a463:   89 c8                           	mov eax, ecx
0x804a465:   0f af c2                        	imul eax, edx
0x804a468:   83 f0 a2                        	xor eax, 0xffffffa2
0x804a46b:   0f be d0                        	movsx edx, al
0x804a46e:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x804a474:   0f be c0                        	movsx eax, al
0x804a477:   0f af c2                        	imul eax, edx
0x804a47a:   3d ff ff 00 00                  	cmp eax, 0xffff
0x804a47f:   0f 95 c0                        	setne al
0x804a482:   0f b6 c0                        	movzx eax, al
0x804a485:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a488:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a48b:   0f b7 c0                        	movzx eax, ax
0x804a48e:   c1 e0 07                        	shl eax, 7
0x804a491:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a497:   8b 8d a0 fe ff ff               	mov ecx, dword ptr [ebp - 0x160]
0x804a49d:   ba 91 67 f2 32                  	mov edx, 0x32f26791
0x804a4a2:   89 c8                           	mov eax, ecx
0x804a4a4:   f7 e2                           	mul edx
0x804a4a6:   89 d0                           	mov eax, edx
0x804a4a8:   c1 e8 1c                        	shr eax, 0x1c
0x804a4ab:   69 c0 f1 be 65 50               	imul eax, eax, 0x5065bef1
0x804a4b1:   29 c1                           	sub ecx, eax
0x804a4b3:   89 c8                           	mov eax, ecx
0x804a4b5:   0f b7 d0                        	movzx edx, ax
0x804a4b8:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x804a4be:   0f b7 c0                        	movzx eax, ax
0x804a4c1:   89 c1                           	mov ecx, eax
0x804a4c3:   d3 e2                           	shl edx, cl
0x804a4c5:   89 d0                           	mov eax, edx
0x804a4c7:   98                              	cwde 
0x804a4c8:   83 c0 01                        	add eax, 1
0x804a4cb:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a4d1:   0f 94 c0                        	sete al
0x804a4d4:   0f b6 c0                        	movzx eax, al
0x804a4d7:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a4da:   b8 00 00 00 00                  	mov eax, 0
0x804a4df:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x804a4e2:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a4e6:   83 e8 01                        	sub eax, 1
0x804a4e9:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x804a4ed:   66 83 7d b6 e6                  	cmp word ptr [ebp - 0x4a], -0x1a
0x804a4f2:   0f 85 f2 fe ff ff               	jne 0x804a3ea <func_1+0xc2d>
0x804a4f8:   e9 65 01 00 00                  	jmp 0x804a662 <func_1+0xea5>
0x804a4fd:   c7 85 9c fe ff ff 3f fd a6 42   	mov dword ptr [ebp - 0x164], 0x42a6fd3f
0x804a507:   c7 45 c0 e5 ef 87 56            	mov dword ptr [ebp - 0x40], 0x5687efe5
0x804a50e:   c6 85 9b fe ff ff 04            	mov byte ptr [ebp - 0x165], 4
0x804a515:   66 83 6d c4 01                  	sub word ptr [ebp - 0x3c], 1
0x804a51a:   c7 45 ec da ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffda
0x804a521:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804a527:   89 c2                           	mov edx, eax
0x804a529:   0f b6 85 9b fe ff ff            	movzx eax, byte ptr [ebp - 0x165]
0x804a530:   21 d0                           	and eax, edx
0x804a532:   88 85 9b fe ff ff               	mov byte ptr [ebp - 0x165], al
0x804a538:   0f b6 85 9b fe ff ff            	movzx eax, byte ptr [ebp - 0x165]
0x804a53f:   0f b6 55 be                     	movzx edx, byte ptr [ebp - 0x42]
0x804a543:   89 d1                           	mov ecx, edx
0x804a545:   c1 e1 07                        	shl ecx, 7
0x804a548:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804a54f:   0f b6 c0                        	movzx eax, al
0x804a552:   31 85 64 ff ff ff               	xor dword ptr [ebp - 0x9c], eax
0x804a558:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a55b:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a561:   0f 93 c0                        	setae al
0x804a564:   0f b6 c0                        	movzx eax, al
0x804a567:   31 d0                           	xor eax, edx
0x804a569:   83 f8 09                        	cmp eax, 9
0x804a56c:   0f 9f c0                        	setg al
0x804a56f:   0f b6 c0                        	movzx eax, al
0x804a572:   39 c1                           	cmp ecx, eax
0x804a574:   0f 9f c0                        	setg al
0x804a577:   0f b6 c0                        	movzx eax, al
0x804a57a:   0b 45 88                        	or eax, dword ptr [ebp - 0x78]
0x804a57d:   85 c0                           	test eax, eax
0x804a57f:   74 10                           	je 0x804a591 <func_1+0xdd4>
0x804a581:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a588:   74 07                           	je 0x804a591 <func_1+0xdd4>
0x804a58a:   b8 01 00 00 00                  	mov eax, 1
0x804a58f:   eb 05                           	jmp 0x804a596 <func_1+0xdd9>
0x804a591:   b8 00 00 00 00                  	mov eax, 0
0x804a596:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a599:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a59d:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x804a5a1:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x804a5a5:   0f bf bd 78 ff ff ff            	movsx edi, word ptr [ebp - 0x88]
0x804a5ac:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a5b2:   0f b7 5d c4                     	movzx ebx, word ptr [ebp - 0x3c]
0x804a5b6:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a5bc:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804a5c3:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x804a5c9:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a5cd:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a5d3:   0f be 5d ce                     	movsx ebx, byte ptr [ebp - 0x32]
0x804a5d7:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x804a5dd:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x804a5e1:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x804a5e7:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804a5eb:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a5f1:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a5f5:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x804a5f9:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804a5fd:   50                              	push eax
0x804a5fe:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a604:   51                              	push ecx
0x804a605:   56                              	push esi
0x804a606:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a609:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a60f:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a615:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a61b:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a621:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a624:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a62a:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a630:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a633:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a636:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a639:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a63c:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a642:   57                              	push edi
0x804a643:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a646:   53                              	push ebx
0x804a647:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a64a:   52                              	push edx
0x804a64b:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a651:   e8 d0 ef ff ff                  	call 0x8049626 <set_var>
0x804a656:   83 c4 5c                        	add esp, 0x5c
0x804a659:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a65d:   e9 d6 06 00 00                  	jmp 0x804ad38 <func_1+0x157b>
0x804a662:   c6 45 a3 00                     	mov byte ptr [ebp - 0x5d], 0
0x804a666:   e9 90 00 00 00                  	jmp 0x804a6fb <func_1+0xf3e>
0x804a66b:   c6 85 97 fe ff ff 37            	mov byte ptr [ebp - 0x169], 0x37
0x804a672:   c7 85 90 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x170], 0xffffffff
0x804a67c:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804a683:   eb 65                           	jmp 0x804a6ea <func_1+0xf2d>
0x804a685:   c6 85 8f fe ff ff 01            	mov byte ptr [ebp - 0x171], 1
0x804a68c:   80 85 8f fe ff ff 01            	add byte ptr [ebp - 0x171], 1
0x804a693:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a696:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a699:   83 7d 90 01                     	cmp dword ptr [ebp - 0x70], 1
0x804a69d:   0f 94 c0                        	sete al
0x804a6a0:   0f b6 d0                        	movzx edx, al
0x804a6a3:   66 0f be 45 cf                  	movsx ax, byte ptr [ebp - 0x31]
0x804a6a8:   31 d0                           	xor eax, edx
0x804a6aa:   89 c2                           	mov edx, eax
0x804a6ac:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a6b2:   09 d0                           	or eax, edx
0x804a6b4:   0f bf d0                        	movsx edx, ax
0x804a6b7:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a6bb:   29 c2                           	sub edx, eax
0x804a6bd:   0f be 85 97 fe ff ff            	movsx eax, byte ptr [ebp - 0x169]
0x804a6c4:   39 c2                           	cmp edx, eax
0x804a6c6:   0f 9c c0                        	setl al
0x804a6c9:   0f b6 d0                        	movzx edx, al
0x804a6cc:   0f be 85 97 fe ff ff            	movsx eax, byte ptr [ebp - 0x169]
0x804a6d3:   39 c2                           	cmp edx, eax
0x804a6d5:   0f 95 c0                        	setne al
0x804a6d8:   0f b6 c0                        	movzx eax, al
0x804a6db:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x804a6de:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a6e1:   66 83 6d bc 01                  	sub word ptr [ebp - 0x44], 1
0x804a6e6:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a6ea:   83 7d ac 15                     	cmp dword ptr [ebp - 0x54], 0x15
0x804a6ee:   76 95                           	jbe 0x804a685 <func_1+0xec8>
0x804a6f0:   c7 45 ec a0 74 91 3a            	mov dword ptr [ebp - 0x14], 0x3a9174a0
0x804a6f7:   80 45 a3 01                     	add byte ptr [ebp - 0x5d], 1
0x804a6fb:   80 7d a3 35                     	cmp byte ptr [ebp - 0x5d], 0x35
0x804a6ff:   0f 87 66 ff ff ff               	ja 0x804a66b <func_1+0xeae>
0x804a705:   0f b6 45 be                     	movzx eax, byte ptr [ebp - 0x42]
0x804a709:   83 e8 01                        	sub eax, 1
0x804a70c:   88 45 be                        	mov byte ptr [ebp - 0x42], al
0x804a70f:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a713:   83 c0 01                        	add eax, 1
0x804a716:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a719:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a720:   66 21 45 f0                     	and word ptr [ebp - 0x10], ax
0x804a724:   c7 85 24 ff ff ff 15 a2 00 00   	mov dword ptr [ebp - 0xdc], 0xa215
0x804a72e:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a732:   33 85 60 ff ff ff               	xor eax, dword ptr [ebp - 0xa0]
0x804a738:   89 c2                           	mov edx, eax
0x804a73a:   0f b7 85 a6 fe ff ff            	movzx eax, word ptr [ebp - 0x15a]
0x804a741:   39 c2                           	cmp edx, eax
0x804a743:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a746:   89 c2                           	mov edx, eax
0x804a748:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a74c:   09 d0                           	or eax, edx
0x804a74e:   89 c2                           	mov edx, eax
0x804a750:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a757:   38 c2                           	cmp dl, al
0x804a759:   0f 94 c0                        	sete al
0x804a75c:   0f b6 c0                        	movzx eax, al
0x804a75f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a762:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a765:   0f b7 d0                        	movzx edx, ax
0x804a768:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a76f:   0f b7 c0                        	movzx eax, ax
0x804a772:   01 d0                           	add eax, edx
0x804a774:   85 c0                           	test eax, eax
0x804a776:   74 04                           	je 0x804a77c <func_1+0xfbf>
0x804a778:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804a77c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a77f:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a783:   b8 01 00 00 00                  	mov eax, 1
0x804a788:   31 85 24 ff ff ff               	xor dword ptr [ebp - 0xdc], eax
0x804a78e:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x804a794:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a797:   21 d0                           	and eax, edx
0x804a799:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a79c:   e9 e3 00 00 00                  	jmp 0x804a884 <func_1+0x10c7>
0x804a7a1:   c7 85 b8 fe ff ff d9 37 aa f9   	mov dword ptr [ebp - 0x148], 0xf9aa37d9
0x804a7ab:   c7 85 b4 fe ff ff ac bf 9d 7d   	mov dword ptr [ebp - 0x14c], 0x7d9dbfac
0x804a7b5:   c7 85 b0 fe ff ff 95 74 20 78   	mov dword ptr [ebp - 0x150], 0x78207495
0x804a7bf:   c7 85 ac fe ff ff 24 f2 c6 83   	mov dword ptr [ebp - 0x154], 0x83c6f224
0x804a7c9:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a7cd:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a7d3:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a7d6:   88 45 be                        	mov byte ptr [ebp - 0x42], al
0x804a7d9:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x804a7e0:   83 75 b0 1c                     	xor dword ptr [ebp - 0x50], 0x1c
0x804a7e4:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x804a7e7:   0f be ca                        	movsx ecx, dl
0x804a7ea:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804a7ee:   0f be d2                        	movsx edx, dl
0x804a7f1:   29 d1                           	sub ecx, edx
0x804a7f3:   89 ca                           	mov edx, ecx
0x804a7f5:   21 d0                           	and eax, edx
0x804a7f7:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a7fd:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a804:   81 bd b8 fe ff ff f6 00 00 00   	cmp dword ptr [ebp - 0x148], 0xf6
0x804a80e:   0f 95 c0                        	setne al
0x804a811:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a814:   83 bd b4 fe ff ff 00            	cmp dword ptr [ebp - 0x14c], 0
0x804a81b:   83 7d ec 78                     	cmp dword ptr [ebp - 0x14], 0x78
0x804a81f:   0f 9f c0                        	setg al
0x804a822:   0f b6 c0                        	movzx eax, al
0x804a825:   31 85 b0 fe ff ff               	xor dword ptr [ebp - 0x150], eax
0x804a82b:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a832:   eb 4a                           	jmp 0x804a87e <func_1+0x10c1>
0x804a834:   c7 85 a8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x158], 0xfffffffa
0x804a83e:   83 65 9c 01                     	and dword ptr [ebp - 0x64], 1
0x804a842:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a846:   8b 95 a8 fe ff ff               	mov edx, dword ptr [ebp - 0x158]
0x804a84c:   31 55 d0                        	xor dword ptr [ebp - 0x30], edx
0x804a84f:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a852:   0f 95 c0                        	setne al
0x804a855:   0f b6 c0                        	movzx eax, al
0x804a858:   8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x804a85b:   89 d1                           	mov ecx, edx
0x804a85d:   8b 95 b4 fe ff ff               	mov edx, dword ptr [ebp - 0x14c]
0x804a863:   09 ca                           	or edx, ecx
0x804a865:   31 d0                           	xor eax, edx
0x804a867:   0f b7 c0                        	movzx eax, ax
0x804a86a:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a870:   c7 85 ac fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x154], 9
0x804a87a:   83 45 90 04                     	add dword ptr [ebp - 0x70], 4
0x804a87e:   83 7d 90 12                     	cmp dword ptr [ebp - 0x70], 0x12
0x804a882:   7e b0                           	jle 0x804a834 <func_1+0x1077>
0x804a884:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a888:   0f 94 c0                        	sete al
0x804a88b:   0f b6 d0                        	movzx edx, al
0x804a88e:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a892:   01 d0                           	add eax, edx
0x804a894:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a897:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x804a89e:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a8a4:   0f 93 c0                        	setae al
0x804a8a7:   0f b6 c0                        	movzx eax, al
0x804a8aa:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x804a8ae:   81 ea f5 25 00 00               	sub edx, 0x25f5
0x804a8b4:   83 fa 01                        	cmp edx, 1
0x804a8b7:   0f 94 c2                        	sete dl
0x804a8ba:   0f b6 ca                        	movzx ecx, dl
0x804a8bd:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x804a8c1:   01 ca                           	add edx, ecx
0x804a8c3:   0f bf d2                        	movsx edx, dx
0x804a8c6:   89 d1                           	mov ecx, edx
0x804a8c8:   83 e1 09                        	and ecx, 9
0x804a8cb:   0f b6 55 c7                     	movzx edx, byte ptr [ebp - 0x39]
0x804a8cf:   0f af d1                        	imul edx, ecx
0x804a8d2:   81 ea 10 68 e3 35               	sub edx, 0x35e36810
0x804a8d8:   39 d0                           	cmp eax, edx
0x804a8da:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x804a8df:   78 07                           	js 0x804a8e8 <func_1+0x112b>
0x804a8e1:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x804a8e8:   0f b6 55 c7                     	movzx edx, byte ptr [ebp - 0x39]
0x804a8ec:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804a8f0:   39 c2                           	cmp edx, eax
0x804a8f2:   75 0d                           	jne 0x804a901 <func_1+0x1144>
0x804a8f4:   80 7d be 00                     	cmp byte ptr [ebp - 0x42], 0
0x804a8f8:   74 07                           	je 0x804a901 <func_1+0x1144>
0x804a8fa:   b8 01 00 00 00                  	mov eax, 1
0x804a8ff:   eb 05                           	jmp 0x804a906 <func_1+0x1149>
0x804a901:   b8 00 00 00 00                  	mov eax, 0
0x804a906:   83 f0 f9                        	xor eax, 0xfffffff9
0x804a909:   0f b6 c0                        	movzx eax, al
0x804a90c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a90f:   e9 6a 02 00 00                  	jmp 0x804ab7e <func_1+0x13c1>
0x804a914:   c6 85 53 ff ff ff fe            	mov byte ptr [ebp - 0xad], 0xfe
0x804a91b:   c7 45 84 02 00 00 00            	mov dword ptr [ebp - 0x7c], 2
0x804a922:   c7 45 80 e3 57 32 4c            	mov dword ptr [ebp - 0x80], 0x4c3257e3
0x804a929:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a92d:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a930:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x804a937:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a93a:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a93d:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a944:   0f 84 79 01 00 00               	je 0x804aac3 <func_1+0x1306>
0x804a94a:   c6 85 4b ff ff ff 01            	mov byte ptr [ebp - 0xb5], 1
0x804a951:   c7 45 ac e6 ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffe6
0x804a958:   83 7d ac 19                     	cmp dword ptr [ebp - 0x54], 0x19
0x804a95c:   0f 86 e2 00 00 00               	jbe 0x804aa44 <func_1+0x1287>
0x804a962:   66 c7 85 48 ff ff ff ff ff      	mov word ptr [ebp - 0xb8], 0xffff
0x804a96b:   0f bf 85 48 ff ff ff            	movsx eax, word ptr [ebp - 0xb8]
0x804a972:   23 45 c0                        	and eax, dword ptr [ebp - 0x40]
0x804a975:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a978:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a97c:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x804a980:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x804a984:   0f bf 9d 78 ff ff ff            	movsx ebx, word ptr [ebp - 0x88]
0x804a98b:   89 9d 80 fe ff ff               	mov dword ptr [ebp - 0x180], ebx
0x804a991:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a995:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a99b:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804a9a2:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x804a9a8:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a9ac:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804a9b2:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x804a9b6:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a9bc:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x804a9c0:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x804a9c6:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a9ca:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x804a9d0:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a9d4:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x804a9d8:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804a9dc:   50                              	push eax
0x804a9dd:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a9e3:   51                              	push ecx
0x804a9e4:   56                              	push esi
0x804a9e5:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a9e8:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a9ee:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a9f4:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a9fa:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804aa00:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aa03:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804aa09:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804aa0f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aa12:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa15:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa18:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa1b:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804aa21:   57                              	push edi
0x804aa22:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aa25:   53                              	push ebx
0x804aa26:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa29:   52                              	push edx
0x804aa2a:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804aa30:   e8 f1 eb ff ff                  	call 0x8049626 <set_var>
0x804aa35:   83 c4 5c                        	add esp, 0x5c
0x804aa38:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804aa3f:   e9 f4 02 00 00                  	jmp 0x804ad38 <func_1+0x157b>
0x804aa44:   0f bf 85 56 ff ff ff            	movsx eax, word ptr [ebp - 0xaa]
0x804aa4b:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aa4e:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x804aa55:   84 c0                           	test al, al
0x804aa57:   74 34                           	je 0x804aa8d <func_1+0x12d0>
0x804aa59:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804aa5d:   8b 4d a4                        	mov ecx, dword ptr [ebp - 0x5c]
0x804aa60:   99                              	cdq 
0x804aa61:   f7 f9                           	idiv ecx
0x804aa63:   89 95 60 ff ff ff               	mov dword ptr [ebp - 0xa0], edx
0x804aa69:   c6 85 4b ff ff ff 00            	mov byte ptr [ebp - 0xb5], 0
0x804aa70:   0f be 85 4b ff ff ff            	movsx eax, byte ptr [ebp - 0xb5]
0x804aa77:   0d e4 d1 00 00                  	or eax, 0xd1e4
0x804aa7c:   89 c2                           	mov edx, eax
0x804aa7e:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804aa82:   39 c2                           	cmp edx, eax
0x804aa84:   74 07                           	je 0x804aa8d <func_1+0x12d0>
0x804aa86:   b8 01 00 00 00                  	mov eax, 1
0x804aa8b:   eb 05                           	jmp 0x804aa92 <func_1+0x12d5>
0x804aa8d:   b8 00 00 00 00                  	mov eax, 0
0x804aa92:   3d c4 d7 00 00                  	cmp eax, 0xd7c4
0x804aa97:   7e 07                           	jle 0x804aaa0 <func_1+0x12e3>
0x804aa99:   b8 00 00 00 00                  	mov eax, 0
0x804aa9e:   eb 05                           	jmp 0x804aaa5 <func_1+0x12e8>
0x804aaa0:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804aaa5:   8b 4d c8                        	mov ecx, dword ptr [ebp - 0x38]
0x804aaa8:   ba 00 00 00 00                  	mov edx, 0
0x804aaad:   f7 f1                           	div ecx
0x804aaaf:   0f be 85 53 ff ff ff            	movsx eax, byte ptr [ebp - 0xad]
0x804aab6:   21 d0                           	and eax, edx
0x804aab8:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804aabb:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804aabe:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804aac1:   eb 14                           	jmp 0x804aad7 <func_1+0x131a>
0x804aac3:   c7 85 4c ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xb4], 4
0x804aacd:   c7 85 4c ff ff ff 08 46 90 0c   	mov dword ptr [ebp - 0xb4], 0xc904608
0x804aad7:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804aade:   e9 8a 00 00 00                  	jmp 0x804ab6d <func_1+0x13b0>
0x804aae3:   c6 85 47 ff ff ff 06            	mov byte ptr [ebp - 0xb9], 6
0x804aaea:   c7 85 40 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc0], 1
0x804aaf4:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804aafb:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aafe:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804ab05:   66 83 bd 54 ff ff ff 02         	cmp word ptr [ebp - 0xac], 2
0x804ab0d:   0f 97 c0                        	seta al
0x804ab10:   0f b6 d8                        	movzx ebx, al
0x804ab13:   66 0f be 45 ce                  	movsx ax, byte ptr [ebp - 0x32]
0x804ab18:   0f b7 c0                        	movzx eax, ax
0x804ab1b:   89 c1                           	mov ecx, eax
0x804ab1d:   d3 e3                           	shl ebx, cl
0x804ab1f:   89 d9                           	mov ecx, ebx
0x804ab21:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804ab25:   31 c8                           	xor eax, ecx
0x804ab27:   09 d0                           	or eax, edx
0x804ab29:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804ab2c:   0f 9d c0                        	setge al
0x804ab2f:   0f b6 c0                        	movzx eax, al
0x804ab32:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804ab38:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x804ab3e:   eb 11                           	jmp 0x804ab51 <func_1+0x1394>
0x804ab40:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804ab43:   09 45 80                        	or dword ptr [ebp - 0x80], eax
0x804ab46:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804ab4a:   83 c0 01                        	add eax, 1
0x804ab4d:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804ab51:   66 83 7d f2 06                  	cmp word ptr [ebp - 0xe], 6
0x804ab56:   7f e8                           	jg 0x804ab40 <func_1+0x1383>
0x804ab58:   66 83 bd 70 ff ff ff 01         	cmp word ptr [ebp - 0x90], 1
0x804ab60:   0f 95 c0                        	setne al
0x804ab63:   0f b6 c0                        	movzx eax, al
0x804ab66:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804ab69:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x804ab6d:   83 7d 84 04                     	cmp dword ptr [ebp - 0x7c], 4
0x804ab71:   0f 85 6c ff ff ff               	jne 0x804aae3 <func_1+0x1326>
0x804ab77:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804ab7b:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804ab7e:   c7 45 e4 e4 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xffffffe4
0x804ab85:   e9 de 00 00 00                  	jmp 0x804ac68 <func_1+0x14ab>
0x804ab8a:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804ab91:   83 7d ec f0                     	cmp dword ptr [ebp - 0x14], -0x10
0x804ab95:   0f 8c c9 00 00 00               	jl 0x804ac64 <func_1+0x14a7>
0x804ab9b:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804ab9f:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x804aba3:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x804aba7:   0f bf bd 78 ff ff ff            	movsx edi, word ptr [ebp - 0x88]
0x804abae:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804abb4:   0f b7 5d c4                     	movzx ebx, word ptr [ebp - 0x3c]
0x804abb8:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804abbe:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804abc5:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x804abcb:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804abcf:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804abd5:   0f be 5d ce                     	movsx ebx, byte ptr [ebp - 0x32]
0x804abd9:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x804abdf:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x804abe3:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x804abe9:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804abed:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804abf3:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804abf7:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x804abfb:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804abff:   50                              	push eax
0x804ac00:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ac06:   51                              	push ecx
0x804ac07:   56                              	push esi
0x804ac08:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ac0b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ac11:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804ac17:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804ac1d:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804ac23:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ac26:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ac2c:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ac32:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ac35:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ac38:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ac3b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ac3e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ac44:   57                              	push edi
0x804ac45:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ac48:   53                              	push ebx
0x804ac49:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ac4c:   52                              	push edx
0x804ac4d:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ac53:   e8 ce e9 ff ff                  	call 0x8049626 <set_var>
0x804ac58:   83 c4 5c                        	add esp, 0x5c
0x804ac5b:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804ac5f:   e9 d4 00 00 00                  	jmp 0x804ad38 <func_1+0x157b>
0x804ac64:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804ac68:   83 7d e4 0b                     	cmp dword ptr [ebp - 0x1c], 0xb
0x804ac6c:   0f 84 18 ff ff ff               	je 0x804ab8a <func_1+0x13cd>
0x804ac72:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804ac76:   0f b6 4d be                     	movzx ecx, byte ptr [ebp - 0x42]
0x804ac7a:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x804ac7e:   0f bf 9d 78 ff ff ff            	movsx ebx, word ptr [ebp - 0x88]
0x804ac85:   89 9d 80 fe ff ff               	mov dword ptr [ebp - 0x180], ebx
0x804ac8b:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804ac8f:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804ac95:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804ac9c:   89 95 78 fe ff ff               	mov dword ptr [ebp - 0x188], edx
0x804aca2:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804aca6:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804acac:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x804acb0:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804acb6:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x804acba:   89 95 6c fe ff ff               	mov dword ptr [ebp - 0x194], edx
0x804acc0:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804acc4:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x804acca:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804acce:   0f be 5d e3                     	movsx ebx, byte ptr [ebp - 0x1d]
0x804acd2:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804acd6:   50                              	push eax
0x804acd7:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804acdd:   51                              	push ecx
0x804acde:   56                              	push esi
0x804acdf:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ace2:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ace8:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804acee:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804acf4:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804acfa:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804acfd:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ad03:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ad09:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ad0c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ad0f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ad12:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ad15:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ad1b:   57                              	push edi
0x804ad1c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ad1f:   53                              	push ebx
0x804ad20:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ad23:   52                              	push edx
0x804ad24:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ad2a:   e8 f7 e8 ff ff                  	call 0x8049626 <set_var>
0x804ad2f:   83 c4 5c                        	add esp, 0x5c
0x804ad32:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804ad38:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ad3b:   5b                              	pop ebx
0x804ad3c:   5e                              	pop esi
0x804ad3d:   5f                              	pop edi
0x804ad3e:   5d                              	pop ebp
0x804ad3f:   c3                              	ret 
; function: main at 0x804ad40 -- 0x804b080
0x804ad40:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ad44:   83 e4 f0                        	and esp, 0xfffffff0
0x804ad47:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad4a:   55                              	push ebp
0x804ad4b:   89 e5                           	mov ebp, esp
0x804ad4d:   53                              	push ebx
0x804ad4e:   51                              	push ecx
0x804ad4f:   83 ec 10                        	sub esp, 0x10
0x804ad52:   e8 39 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad57:   81 c3 a9 32 00 00               	add ebx, 0x32a9
0x804ad5d:   89 c8                           	mov eax, ecx
0x804ad5f:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad66:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad69:   75 26                           	jne 0x804ad91 <main+0x51>
0x804ad6b:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad6e:   83 c0 04                        	add eax, 4
0x804ad71:   8b 00                           	mov eax, dword ptr [eax]
0x804ad73:   83 ec 08                        	sub esp, 8
0x804ad76:   8d 93 68 d1 ff ff               	lea edx, [ebx - 0x2e98]
0x804ad7c:   52                              	push edx
0x804ad7d:   50                              	push eax
0x804ad7e:   e8 7d d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad83:   83 c4 10                        	add esp, 0x10
0x804ad86:   85 c0                           	test eax, eax
0x804ad88:   75 07                           	jne 0x804ad91 <main+0x51>
0x804ad8a:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad91:   e8 c0 d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad96:   e8 d0 e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad9b:   e8 1d ea ff ff                  	call 0x80497bd <func_1>
0x804ada0:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ada6:   83 ec 04                        	sub esp, 4
0x804ada9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adac:   8d 93 6a d1 ff ff               	lea edx, [ebx - 0x2e96]
0x804adb2:   52                              	push edx
0x804adb3:   50                              	push eax
0x804adb4:   e8 be e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb9:   83 c4 10                        	add esp, 0x10
0x804adbc:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804adc3:   98                              	cwde 
0x804adc4:   83 ec 04                        	sub esp, 4
0x804adc7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adca:   8d 93 6f d1 ff ff               	lea edx, [ebx - 0x2e91]
0x804add0:   52                              	push edx
0x804add1:   50                              	push eax
0x804add2:   e8 a0 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add7:   83 c4 10                        	add esp, 0x10
0x804adda:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ade0:   83 ec 04                        	sub esp, 4
0x804ade3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade6:   8d 93 74 d1 ff ff               	lea edx, [ebx - 0x2e8c]
0x804adec:   52                              	push edx
0x804aded:   50                              	push eax
0x804adee:   e8 84 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf3:   83 c4 10                        	add esp, 0x10
0x804adf6:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804adfd:   0f be c0                        	movsx eax, al
0x804ae00:   83 ec 04                        	sub esp, 4
0x804ae03:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae06:   8d 93 79 d1 ff ff               	lea edx, [ebx - 0x2e87]
0x804ae0c:   52                              	push edx
0x804ae0d:   50                              	push eax
0x804ae0e:   e8 64 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae13:   83 c4 10                        	add esp, 0x10
0x804ae16:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae1c:   83 ec 04                        	sub esp, 4
0x804ae1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae22:   8d 93 7e d1 ff ff               	lea edx, [ebx - 0x2e82]
0x804ae28:   52                              	push edx
0x804ae29:   50                              	push eax
0x804ae2a:   e8 48 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2f:   83 c4 10                        	add esp, 0x10
0x804ae32:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804ae39:   98                              	cwde 
0x804ae3a:   83 ec 04                        	sub esp, 4
0x804ae3d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae40:   8d 93 83 d1 ff ff               	lea edx, [ebx - 0x2e7d]
0x804ae46:   52                              	push edx
0x804ae47:   50                              	push eax
0x804ae48:   e8 2a e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4d:   83 c4 10                        	add esp, 0x10
0x804ae50:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804ae57:   98                              	cwde 
0x804ae58:   83 ec 04                        	sub esp, 4
0x804ae5b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5e:   8d 93 88 d1 ff ff               	lea edx, [ebx - 0x2e78]
0x804ae64:   52                              	push edx
0x804ae65:   50                              	push eax
0x804ae66:   e8 0c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6b:   83 c4 10                        	add esp, 0x10
0x804ae6e:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ae74:   89 c2                           	mov edx, eax
0x804ae76:   83 ec 04                        	sub esp, 4
0x804ae79:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7c:   8d 83 8d d1 ff ff               	lea eax, [ebx - 0x2e73]
0x804ae82:   50                              	push eax
0x804ae83:   52                              	push edx
0x804ae84:   e8 ee e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae89:   83 c4 10                        	add esp, 0x10
0x804ae8c:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ae92:   89 c2                           	mov edx, eax
0x804ae94:   83 ec 04                        	sub esp, 4
0x804ae97:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9a:   8d 83 92 d1 ff ff               	lea eax, [ebx - 0x2e6e]
0x804aea0:   50                              	push eax
0x804aea1:   52                              	push edx
0x804aea2:   e8 d0 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea7:   83 c4 10                        	add esp, 0x10
0x804aeaa:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aeb0:   83 ec 04                        	sub esp, 4
0x804aeb3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb6:   8d 93 98 d1 ff ff               	lea edx, [ebx - 0x2e68]
0x804aebc:   52                              	push edx
0x804aebd:   50                              	push eax
0x804aebe:   e8 b4 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec3:   83 c4 10                        	add esp, 0x10
0x804aec6:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aecc:   89 c2                           	mov edx, eax
0x804aece:   83 ec 04                        	sub esp, 4
0x804aed1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed4:   8d 83 9e d1 ff ff               	lea eax, [ebx - 0x2e62]
0x804aeda:   50                              	push eax
0x804aedb:   52                              	push edx
0x804aedc:   e8 96 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee1:   83 c4 10                        	add esp, 0x10
0x804aee4:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804aeeb:   0f be c0                        	movsx eax, al
0x804aeee:   83 ec 04                        	sub esp, 4
0x804aef1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef4:   8d 93 a4 d1 ff ff               	lea edx, [ebx - 0x2e5c]
0x804aefa:   52                              	push edx
0x804aefb:   50                              	push eax
0x804aefc:   e8 76 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af01:   83 c4 10                        	add esp, 0x10
0x804af04:   0f b6 83 4d 00 00 00            	movzx eax, byte ptr [ebx + 0x4d]
0x804af0b:   0f be c0                        	movsx eax, al
0x804af0e:   83 ec 04                        	sub esp, 4
0x804af11:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af14:   8d 93 aa d1 ff ff               	lea edx, [ebx - 0x2e56]
0x804af1a:   52                              	push edx
0x804af1b:   50                              	push eax
0x804af1c:   e8 56 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af21:   83 c4 10                        	add esp, 0x10
0x804af24:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804af2a:   89 c2                           	mov edx, eax
0x804af2c:   83 ec 04                        	sub esp, 4
0x804af2f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af32:   8d 83 b0 d1 ff ff               	lea eax, [ebx - 0x2e50]
0x804af38:   50                              	push eax
0x804af39:   52                              	push edx
0x804af3a:   e8 38 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3f:   83 c4 10                        	add esp, 0x10
0x804af42:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804af49:   0f b6 c0                        	movzx eax, al
0x804af4c:   83 ec 04                        	sub esp, 4
0x804af4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af52:   8d 93 b6 d1 ff ff               	lea edx, [ebx - 0x2e4a]
0x804af58:   52                              	push edx
0x804af59:   50                              	push eax
0x804af5a:   e8 18 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5f:   83 c4 10                        	add esp, 0x10
0x804af62:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804af69:   0f be c0                        	movsx eax, al
0x804af6c:   83 ec 04                        	sub esp, 4
0x804af6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af72:   8d 93 bc d1 ff ff               	lea edx, [ebx - 0x2e44]
0x804af78:   52                              	push edx
0x804af79:   50                              	push eax
0x804af7a:   e8 f8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7f:   83 c4 10                        	add esp, 0x10
0x804af82:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804af89:   0f b7 c0                        	movzx eax, ax
0x804af8c:   83 ec 04                        	sub esp, 4
0x804af8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af92:   8d 93 c2 d1 ff ff               	lea edx, [ebx - 0x2e3e]
0x804af98:   52                              	push edx
0x804af99:   50                              	push eax
0x804af9a:   e8 d8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af9f:   83 c4 10                        	add esp, 0x10
0x804afa2:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804afa9:   98                              	cwde 
0x804afaa:   83 ec 04                        	sub esp, 4
0x804afad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb0:   8d 93 c8 d1 ff ff               	lea edx, [ebx - 0x2e38]
0x804afb6:   52                              	push edx
0x804afb7:   50                              	push eax
0x804afb8:   e8 ba e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbd:   83 c4 10                        	add esp, 0x10
0x804afc0:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804afc6:   89 c2                           	mov edx, eax
0x804afc8:   83 ec 04                        	sub esp, 4
0x804afcb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afce:   8d 83 ce d1 ff ff               	lea eax, [ebx - 0x2e32]
0x804afd4:   50                              	push eax
0x804afd5:   52                              	push edx
0x804afd6:   e8 9c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdb:   83 c4 10                        	add esp, 0x10
0x804afde:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804afe5:   0f b6 c0                        	movzx eax, al
0x804afe8:   83 ec 04                        	sub esp, 4
0x804afeb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afee:   8d 93 d4 d1 ff ff               	lea edx, [ebx - 0x2e2c]
0x804aff4:   52                              	push edx
0x804aff5:   50                              	push eax
0x804aff6:   e8 7c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804affb:   83 c4 10                        	add esp, 0x10
0x804affe:   0f b6 83 61 00 00 00            	movzx eax, byte ptr [ebx + 0x61]
0x804b005:   0f b6 c0                        	movzx eax, al
0x804b008:   83 ec 04                        	sub esp, 4
0x804b00b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b00e:   8d 93 da d1 ff ff               	lea edx, [ebx - 0x2e26]
0x804b014:   52                              	push edx
0x804b015:   50                              	push eax
0x804b016:   e8 5c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b01b:   83 c4 10                        	add esp, 0x10
0x804b01e:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b024:   83 ec 04                        	sub esp, 4
0x804b027:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b02a:   8d 93 e0 d1 ff ff               	lea edx, [ebx - 0x2e20]
0x804b030:   52                              	push edx
0x804b031:   50                              	push eax
0x804b032:   e8 40 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b037:   83 c4 10                        	add esp, 0x10
0x804b03a:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804b041:   0f b7 c0                        	movzx eax, ax
0x804b044:   83 ec 04                        	sub esp, 4
0x804b047:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b04a:   8d 93 e6 d1 ff ff               	lea edx, [ebx - 0x2e1a]
0x804b050:   52                              	push edx
0x804b051:   50                              	push eax
0x804b052:   e8 20 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b057:   83 c4 10                        	add esp, 0x10
0x804b05a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b060:   f7 d0                           	not eax
0x804b062:   83 ec 08                        	sub esp, 8
0x804b065:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b068:   50                              	push eax
0x804b069:   e8 f8 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b06e:   83 c4 10                        	add esp, 0x10
0x804b071:   b8 00 00 00 00                  	mov eax, 0
0x804b076:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b079:   59                              	pop ecx
0x804b07a:   5b                              	pop ebx
0x804b07b:   5d                              	pop ebp
0x804b07c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b07f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b080 -- 0x804b084
0x804b080:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b083:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b084 -- 0x804b088
0x804b084:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b087:   c3                              	ret 
; data inside code section at 0x804b088 -- 0x804b090
0x804b088:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804b090 -- 0x804b0ed
0x804b090:   55                              	push ebp
0x804b091:   57                              	push edi
0x804b092:   56                              	push esi
0x804b093:   53                              	push ebx
0x804b094:   e8 f7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b099:   81 c3 67 2f 00 00               	add ebx, 0x2f67
0x804b09f:   83 ec 0c                        	sub esp, 0xc
0x804b0a2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0a6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0ac:   e8 1b d2 ff ff                  	call 0x80482cc <_init>
0x804b0b1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0b7:   29 c6                           	sub esi, eax
0x804b0b9:   c1 fe 02                        	sar esi, 2
0x804b0bc:   85 f6                           	test esi, esi
0x804b0be:   74 25                           	je 0x804b0e5 <__libc_csu_init+0x55>
0x804b0c0:   31 ff                           	xor edi, edi
0x804b0c2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0c8:   83 ec 04                        	sub esp, 4
0x804b0cb:   55                              	push ebp
0x804b0cc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0d0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0d4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0db:   83 c7 01                        	add edi, 1
0x804b0de:   83 c4 10                        	add esp, 0x10
0x804b0e1:   39 fe                           	cmp esi, edi
0x804b0e3:   75 e3                           	jne 0x804b0c8 <__libc_csu_init+0x38>
0x804b0e5:   83 c4 0c                        	add esp, 0xc
0x804b0e8:   5b                              	pop ebx
0x804b0e9:   5e                              	pop esi
0x804b0ea:   5f                              	pop edi
0x804b0eb:   5d                              	pop ebp
0x804b0ec:   c3                              	ret 
; data inside code section at 0x804b0ed -- 0x804b0f0
0x804b0ed:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b0f0 -- 0x804b0f2
0x804b0f0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b0f4 -- 0x804b108
0x804b0f4:   53                              	push ebx
0x804b0f5:   83 ec 08                        	sub esp, 8
0x804b0f8:   e8 93 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0fd:   81 c3 03 2f 00 00               	add ebx, 0x2f03
0x804b103:   83 c4 08                        	add esp, 8
0x804b106:   5b                              	pop ebx
0x804b107:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 0c b1 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b108:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b118:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b128:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b138:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b148:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b158:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b168:   31 00 67 5f 32 34 00 67  5f 32 35 00 67 5f 32 37   |1.g_24.g_25.g_27|
0x804b178:   00 67 5f 35 34 00 67 5f  35 35 00 67 5f 37 31 00   |.g_54.g_55.g_71.|
0x804b188:   67 5f 37 38 00 67 5f 38  30 00 67 5f 31 33 33 00   |g_78.g_80.g_133.|
0x804b198:   67 5f 31 38 38 00 67 5f  32 30 34 00 67 5f 32 30   |g_188.g_204.g_20|
0x804b1a8:   35 00 67 5f 32 30 36 00  67 5f 32 31 36 00 67 5f   |5.g_206.g_216.g_|
0x804b1b8:   32 34 36 00 67 5f 32 36  35 00 67 5f 32 36 36 00   |246.g_265.g_266.|
0x804b1c8:   67 5f 32 38 33 00 67 5f  32 38 35 00 67 5f 32 38   |g_283.g_285.g_28|
0x804b1d8:   36 00 67 5f 33 33 37 00  67 5f 33 37 31 00 67 5f   |6.g_337.g_371.g_|
0x804b1e8:   34 32 34 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |424....?...~....|
0x804b1f8:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b208:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b218:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b228:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b238:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b248:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b258:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b258:   01 1b 03 3b b8 02 00 00  56 00 00 00 98 d0 ff ff   |...;....V.......|
0x804b268:   e8 02 00 00 d8 d0 ff ff  0c 03 00 00 28 d1 ff ff   |............(...|
0x804b278:   d4 02 00 00 fe d1 ff ff  20 03 00 00 0e d2 ff ff   |........ .......|
0x804b288:   40 03 00 00 3c d2 ff ff  64 03 00 00 5a d2 ff ff   |@...<...d...Z...|
0x804b298:   84 03 00 00 82 d2 ff ff  a4 03 00 00 ac d2 ff ff   |................|
0x804b2a8:   c4 03 00 00 d5 d2 ff ff  e4 03 00 00 18 d3 ff ff   |................|
0x804b2b8:   04 04 00 00 59 d3 ff ff  24 04 00 00 b1 d3 ff ff   |....Y...$.......|
0x804b2c8:   48 04 00 00 03 d4 ff ff  6c 04 00 00 40 d4 ff ff   |H.......l...@...|
0x804b2d8:   8c 04 00 00 77 d4 ff ff  ac 04 00 00 96 d4 ff ff   |....w...........|
0x804b2e8:   cc 04 00 00 c0 d4 ff ff  ec 04 00 00 ec d4 ff ff   |................|
0x804b2f8:   0c 05 00 00 17 d5 ff ff  2c 05 00 00 60 d5 ff ff   |........,...`...|
0x804b308:   4c 05 00 00 a7 d5 ff ff  6c 05 00 00 01 d6 ff ff   |L.......l.......|
0x804b318:   90 05 00 00 55 d6 ff ff  b4 05 00 00 94 d6 ff ff   |....U...........|
0x804b328:   d4 05 00 00 cd d6 ff ff  f4 05 00 00 ef d6 ff ff   |................|
0x804b338:   14 06 00 00 3d d7 ff ff  34 06 00 00 79 d7 ff ff   |....=...4...y...|
0x804b348:   54 06 00 00 02 d8 ff ff  74 06 00 00 34 d8 ff ff   |T.......t...4...|
0x804b358:   94 06 00 00 64 d8 ff ff  b4 06 00 00 a9 d8 ff ff   |....d...........|
0x804b368:   d4 06 00 00 e8 d8 ff ff  f4 06 00 00 1a d9 ff ff   |................|
0x804b378:   14 07 00 00 46 d9 ff ff  34 07 00 00 64 d9 ff ff   |....F...4...d...|
0x804b388:   54 07 00 00 8c d9 ff ff  74 07 00 00 b1 d9 ff ff   |T.......t.......|
0x804b398:   94 07 00 00 d6 d9 ff ff  b4 07 00 00 0d da ff ff   |................|
0x804b3a8:   d4 07 00 00 41 da ff ff  f4 07 00 00 93 da ff ff   |....A...........|
0x804b3b8:   18 08 00 00 df da ff ff  3c 08 00 00 16 db ff ff   |........<.......|
0x804b3c8:   5c 08 00 00 47 db ff ff  7c 08 00 00 66 db ff ff   |\...G...|...f...|
0x804b3d8:   9c 08 00 00 90 db ff ff  bc 08 00 00 b8 db ff ff   |................|
0x804b3e8:   dc 08 00 00 e1 db ff ff  fc 08 00 00 1d dc ff ff   |................|
0x804b3f8:   1c 09 00 00 57 dc ff ff  3c 09 00 00 aa dc ff ff   |....W...<.......|
0x804b408:   60 09 00 00 f7 dc ff ff  84 09 00 00 2f dd ff ff   |`.........../...|
0x804b418:   a4 09 00 00 61 dd ff ff  c4 09 00 00 75 dd ff ff   |....a.......u...|
0x804b428:   e4 09 00 00 8c dd ff ff  04 0a 00 00 a1 dd ff ff   |................|
0x804b438:   24 0a 00 00 b7 dd ff ff  44 0a 00 00 de dd ff ff   |$.......D.......|
0x804b448:   64 0a 00 00 03 de ff ff  84 0a 00 00 42 de ff ff   |d...........B...|
0x804b458:   a4 0a 00 00 7b de ff ff  c4 0a 00 00 a7 de ff ff   |....{...........|
0x804b468:   e4 0a 00 00 cd de ff ff  04 0b 00 00 0f df ff ff   |................|
0x804b478:   24 0b 00 00 51 df ff ff  44 0b 00 00 93 df ff ff   |$...Q...D.......|
0x804b488:   64 0b 00 00 08 e0 ff ff  84 0b 00 00 65 e0 ff ff   |d...........e...|
0x804b498:   a4 0b 00 00 c2 e0 ff ff  c4 0b 00 00 1f e1 ff ff   |................|
0x804b4a8:   e4 0b 00 00 af e1 ff ff  04 0c 00 00 13 e2 ff ff   |................|
0x804b4b8:   24 0c 00 00 83 e2 ff ff  44 0c 00 00 ca e2 ff ff   |$.......D.......|
0x804b4c8:   68 0c 00 00 1f e3 ff ff  88 0c 00 00 66 e3 ff ff   |h...........f...|
0x804b4d8:   ac 0c 00 00 ce e3 ff ff  d0 0c 00 00 65 e5 ff ff   |............e...|
0x804b4e8:   00 0d 00 00 e8 fa ff ff  30 0d 00 00 28 fe ff ff   |........0...(...|
0x804b4f8:   68 0d 00 00 2c fe ff ff  7c 0d 00 00 38 fe ff ff   |h...,...|...8...|
0x804b508:   90 0d 00 00 98 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b514:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b524:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b534:   4c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |L........... ...|
0x804b544:   30 00 00 00 a8 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b554:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b564:   10 00 00 00 54 00 00 00  c4 cd ff ff 08 00 00 00   |....T...........|
0x804b574:   00 00 00 00 1c 00 00 00  68 00 00 00 d6 ce ff ff   |........h.......|
0x804b584:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b594:   04 04 00 00 20 00 00 00  88 00 00 00 c6 ce ff ff   |.... ...........|
0x804b5a4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5b4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5c4:   d0 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5d4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b5e4:   ce ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5f4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b604:   d6 ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b614:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b624:   e0 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b634:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b644:   e9 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b654:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b664:   0c cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b674:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b684:   2d cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |-...X....A....B.|
0x804b694:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6a4:   90 01 00 00 61 cf ff ff  52 00 00 00 00 41 0e 08   |....a...R....A..|
0x804b6b4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6c4:   1c 00 00 00 b4 01 00 00  8f cf ff ff 3d 00 00 00   |............=...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b6e4:   1c 00 00 00 d4 01 00 00  ac cf ff ff 37 00 00 00   |............7...|
0x804b6f4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b704:   1c 00 00 00 f4 01 00 00  c3 cf ff ff 1f 00 00 00   |................|
0x804b714:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b724:   1c 00 00 00 14 02 00 00  c2 cf ff ff 2a 00 00 00   |............*...|
0x804b734:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b744:   1c 00 00 00 34 02 00 00  cc cf ff ff 2c 00 00 00   |....4.......,...|
0x804b754:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b764:   1c 00 00 00 54 02 00 00  d8 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b774:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b784:   1c 00 00 00 74 02 00 00  e3 cf ff ff 49 00 00 00   |....t.......I...|
0x804b794:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7a4:   1c 00 00 00 94 02 00 00  0c d0 ff ff 47 00 00 00   |............G...|
0x804b7b4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7c4:   20 00 00 00 b4 02 00 00  33 d0 ff ff 5a 00 00 00   | .......3...Z...|
0x804b7d4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b7e4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 69 d0 ff ff   |.... .......i...|
0x804b7f4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b804:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b814:   99 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b824:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b834:   b8 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b844:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b854:   d1 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b864:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b874:   d3 d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b884:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b894:   01 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8a4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8b4:   1d d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8c4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b8d4:   86 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8e4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b8f4:   98 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b904:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b914:   a8 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b924:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b934:   cd d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b944:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b954:   ec d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b964:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b974:   fe d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b984:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b994:   0a d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9a4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9b4:   08 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9c4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b9d4:   10 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b9e4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b9f4:   15 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba04:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba14:   1a d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba24:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba34:   31 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |1...4....A....B.|
0x804ba44:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba54:   45 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |E...R....A....B.|
0x804ba64:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba74:   60 05 00 00 73 d2 ff ff  4c 00 00 00 00 41 0e 08   |`...s...L....A..|
0x804ba84:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba94:   1c 00 00 00 84 05 00 00  9b d2 ff ff 37 00 00 00   |............7...|
0x804baa4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bab4:   1c 00 00 00 a4 05 00 00  b2 d2 ff ff 31 00 00 00   |............1...|
0x804bac4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bad4:   1c 00 00 00 c4 05 00 00  c3 d2 ff ff 1f 00 00 00   |................|
0x804bae4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804baf4:   1c 00 00 00 e4 05 00 00  c2 d2 ff ff 2a 00 00 00   |............*...|
0x804bb04:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb14:   1c 00 00 00 04 06 00 00  cc d2 ff ff 28 00 00 00   |............(...|
0x804bb24:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb34:   1c 00 00 00 24 06 00 00  d4 d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb44:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb54:   1c 00 00 00 44 06 00 00  dd d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb64:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb74:   1c 00 00 00 64 06 00 00  f9 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bb84:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb94:   20 00 00 00 84 06 00 00  13 d3 ff ff 53 00 00 00   | ...........S...|
0x804bba4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbb4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 42 d3 ff ff   |.... .......B...|
0x804bbc4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bbd4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bbe4:   6b d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |k...8....A....B.|
0x804bbf4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc04:   83 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bc14:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc24:   95 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc34:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc44:   89 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc54:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc64:   80 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc74:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc84:   75 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804bc94:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bca4:   6b d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |k...'....A....B.|
0x804bcb4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcc4:   72 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |r...%....A....B.|
0x804bcd4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bce4:   77 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |w...?....A....B.|
0x804bcf4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd04:   96 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd14:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd24:   af d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd34:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd44:   bb d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd54:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd64:   c1 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd74:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd84:   e3 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd94:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bda4:   05 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdb4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdc4:   27 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |'...u....A....B.|
0x804bdd4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bde4:   7c d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   ||...]....A....B.|
0x804bdf4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be04:   b9 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be14:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be24:   f6 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be34:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be44:   33 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |3........A....B.|
0x804be54:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be64:   a3 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be74:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be84:   e7 d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804be94:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bea4:   37 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |7...G....A....B.|
0x804beb4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bec4:   b0 09 00 00 5a d6 ff ff  55 00 00 00 00 41 0e 08   |....Z...U....A..|
0x804bed4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bee4:   d0 09 00 00 8f d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bef4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf04:   20 00 00 00 f4 09 00 00  b2 d6 ff ff 68 00 00 00   | ...........h...|
0x804bf14:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf24:   0c 04 04 00 2c 00 00 00  18 0a 00 00 f6 d6 ff ff   |....,...........|
0x804bf34:   97 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf44:   86 04 83 05 03 8a 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf54:   04 00 00 00 2c 00 00 00  48 0a 00 00 5d d8 ff ff   |....,...H...]...|
0x804bf64:   83 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf74:   86 04 83 05 03 73 15 c3  41 c6 41 c7 41 c5 0c 04   |.....s..A.A.A...|
0x804bf84:   04 00 00 00 34 00 00 00  78 0a 00 00 b0 ed ff ff   |....4...x.......|
0x804bf94:   40 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |@....D...G...u.D|
0x804bfa4:   0f 03 75 78 06 10 03 02  75 7c 03 2b 03 c1 0c 01   |..ux....u|.+....|
0x804bfb4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bfc4:   b0 0a 00 00 b8 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bfd4:   10 00 00 00 c4 0a 00 00  a8 f0 ff ff 04 00 00 00   |................|
0x804bfe4:   00 00 00 00 48 00 00 00  d8 0a 00 00 a0 f0 ff ff   |....H...........|
0x804bff4:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c004:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c014:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c024:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c034:   10 00 00 00 24 0b 00 00  b4 f0 ff ff 02 00 00 00   |....$...........|
0x804c044:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 f4 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff b4 4a 83 0e   |.............J..|
0x804e028:   93 f7 00 00 08 00 00 00  f8 00 00 00 1c eb ae 89   |................|
0x804e038:   2e 3a ff ff ff ff ff ff  83 8a 3e 13 a2 1f ce 27   |.:........>....'|
0x804e048:   02 00 00 00 ec c3 00 00  08 ef f9 86 e5 00 ef f2   |................|
0x804e058:   08 ef 00 00 de 6c ff f7  6c ca 00 00 b6 8a ba 7c   |.....l..l......||
0x804e068:   00 af ??                                           |..?             |
