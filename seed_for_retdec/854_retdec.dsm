;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:35:09
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 30 d3 ff ff               	lea eax, [ebx - 0x2cd0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 d0 d2 ff ff               	lea eax, [ebx - 0x2d30]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 f3 ad 04 08               	mov eax, 0x804adf3
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 8c e0 04 08                  	mov eax, 0x804e08c
0x80483a5:   3d 8c e0 04 08                  	cmp eax, 0x804e08c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 8c e0 04 08                  	push 0x804e08c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 8c e0 04 08                  	mov eax, 0x804e08c
0x80483e5:   2d 8c e0 04 08                  	sub eax, 0x804e08c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 8c e0 04 08                  	push 0x804e08c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 61 2e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 4d 2e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 50 d3 ff ff               	lea edx, [eax - 0x2cb0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 20 2e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 02 2e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 da 2d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 b0 2d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 87 2d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 44 2d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 02 2d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 aa 2c 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 59 2c 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 1c 2c 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 e5 2b 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 c6 2b 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 9c 2b 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 70 2b 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 45 2b 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 fc 2a 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 b4 2a 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 5a 2a 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 07 2a 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 c8 29 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 92 29 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 70 29 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 22 29 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 e6 28 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 5d 28 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 2b 28 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 fb 27 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 b6 27 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 77 27 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 45 27 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 16 27 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 f8 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 d0 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ab 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 86 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 4f 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 1a 26 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 c8 25 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 7d 25 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 46 25 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 15 25 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 f6 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 cc 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 a4 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 7b 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 3f 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 04 24 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 b1 23 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 65 23 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 2d 23 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 fe 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 ea 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 d3 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 be 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 a8 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 81 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 5c 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 1d 22 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 e4 21 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 b8 21 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 92 21 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 78 d4 ff ff               	fld dword ptr [eax - 0x2b88]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 78 d4 ff ff               	fld dword ptr [eax - 0x2b88]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 7c d4 ff ff               	fld dword ptr [eax - 0x2b84]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 50 21 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 78 d4 ff ff               	fld dword ptr [eax - 0x2b88]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 78 d4 ff ff               	fld dword ptr [eax - 0x2b88]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 7c d4 ff ff               	fld dword ptr [eax - 0x2b84]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 0e 21 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 80 d4 ff ff               	fld dword ptr [eax - 0x2b80]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 84 d4 ff ff               	fld dword ptr [eax - 0x2b7c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 88 d4 ff ff               	fld dword ptr [eax - 0x2b78]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 cc 20 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 8c d4 ff ff               	fld dword ptr [eax - 0x2b74]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 90 d4 ff ff               	fld dword ptr [eax - 0x2b70]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 94 d4 ff ff               	fld dword ptr [eax - 0x2b6c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 54 20 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 98 d4 ff ff               	fld qword ptr [eax - 0x2b68]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 98 d4 ff ff               	fld qword ptr [eax - 0x2b68]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 a0 d4 ff ff               	fld qword ptr [eax - 0x2b60]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 f7 1f 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 98 d4 ff ff               	fld qword ptr [eax - 0x2b68]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 98 d4 ff ff               	fld qword ptr [eax - 0x2b68]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 a0 d4 ff ff               	fld qword ptr [eax - 0x2b60]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 9a 1f 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 a8 d4 ff ff               	fld qword ptr [eax - 0x2b58]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 b0 d4 ff ff               	fld qword ptr [eax - 0x2b50]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 b8 d4 ff ff               	fld qword ptr [eax - 0x2b48]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 3d 1f 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 c0 d4 ff ff               	fld qword ptr [eax - 0x2b40]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 c8 d4 ff ff               	fld qword ptr [eax - 0x2b38]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 d0 d4 ff ff               	fld qword ptr [eax - 0x2b30]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ad 1e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 d8 d4 ff ff               	fld dword ptr [eax - 0x2b28]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 dc d4 ff ff               	fld dword ptr [eax - 0x2b24]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 49 1e 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 d8 1d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 95 1d 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 60 d3 ff ff               	lea eax, [ebx - 0x2ca0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 84 d3 ff ff               	lea eax, [ebx - 0x2c7c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498c7
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 88 00 00 00               	sub esp, 0x88
0x8049632:   e8 8c 1c 00 00                  	call 0x804b2c3 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049640:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049643:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049646:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049649:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x804964c:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804964f:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049652:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049655:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049658:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965b:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804965e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049661:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049664:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049667:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804966a:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804966d:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049670:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049673:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049676:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049679:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804967c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804967f:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049682:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049685:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049688:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804968e:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049691:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049697:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x804969d:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a3:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x80496a9:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496af:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80496b5:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496bb:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496bf:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496c3:   89 c8                           	mov eax, ecx
0x80496c5:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496c8:   89 d8                           	mov eax, ebx
0x80496ca:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496ce:   89 f0                           	mov eax, esi
0x80496d0:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496d4:   89 f8                           	mov eax, edi
0x80496d6:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496d9:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496dd:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496e0:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496e4:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496e8:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496ec:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496f0:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496f4:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496f7:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496fb:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ff:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x8049703:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x8049706:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x804970a:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804970e:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049712:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049716:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804971a:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x804971d:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049724:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049727:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x804972e:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049731:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x8049738:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x804973b:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x8049742:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x8049745:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804974c:   88 45 a8                        	mov byte ptr [ebp - 0x58], al
0x804974f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049752:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049758:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804975c:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049763:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049767:   88 82 2a 00 00 00               	mov byte ptr [edx + 0x2a], al
0x804976d:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049770:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049776:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804977a:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049781:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049784:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804978a:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804978d:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049793:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049796:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804979c:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804979f:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497a5:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80497a9:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x80497b0:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80497b4:   88 82 46 00 00 00               	mov byte ptr [edx + 0x46], al
0x80497ba:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x80497be:   88 82 47 00 00 00               	mov byte ptr [edx + 0x47], al
0x80497c4:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497c8:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x80497cf:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497d2:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497d8:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497dc:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497e3:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497e6:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497ec:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x80497ef:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497f5:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497f8:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497fe:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049801:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049807:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804980b:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x8049811:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049815:   66 89 82 66 00 00 00            	mov word ptr [edx + 0x66], ax
0x804981c:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x8049820:   88 82 68 00 00 00               	mov byte ptr [edx + 0x68], al
0x8049826:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049829:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x804982f:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049832:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049838:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804983c:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x8049843:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049847:   66 89 82 76 00 00 00            	mov word ptr [edx + 0x76], ax
0x804984e:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049852:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x8049858:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804985c:   88 82 79 00 00 00               	mov byte ptr [edx + 0x79], al
0x8049862:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049866:   88 82 7a 00 00 00               	mov byte ptr [edx + 0x7a], al
0x804986c:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804986f:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049875:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804987b:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049881:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x8049887:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x804988d:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049891:   88 82 88 00 00 00               	mov byte ptr [edx + 0x88], al
0x8049897:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x804989b:   88 82 89 00 00 00               	mov byte ptr [edx + 0x89], al
0x80498a1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80498a5:   88 82 8a 00 00 00               	mov byte ptr [edx + 0x8a], al
0x80498ab:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x80498b1:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x80498b7:   b8 00 00 00 00                  	mov eax, 0
0x80498bc:   81 c4 88 00 00 00               	add esp, 0x88
0x80498c2:   5b                              	pop ebx
0x80498c3:   5e                              	pop esi
0x80498c4:   5f                              	pop edi
0x80498c5:   5d                              	pop ebp
0x80498c6:   c3                              	ret 
; function: func_1 at 0x80498c7 -- 0x804adf3
0x80498c7:   55                              	push ebp
0x80498c8:   89 e5                           	mov ebp, esp
0x80498ca:   57                              	push edi
0x80498cb:   56                              	push esi
0x80498cc:   53                              	push ebx
0x80498cd:   81 ec a4 01 00 00               	sub esp, 0x1a4
0x80498d3:   e8 e7 19 00 00                  	call 0x804b2bf <__x86.get_pc_thunk.ax>
0x80498d8:   05 28 47 00 00                  	add eax, 0x4728
0x80498dd:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x80498e7:   66 c7 45 de ff ff               	mov word ptr [ebp - 0x22], 0xffff
0x80498ed:   c6 45 dd 01                     	mov byte ptr [ebp - 0x23], 1
0x80498f1:   c7 45 d8 f8 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff8
0x80498f8:   66 c7 45 d6 39 7c               	mov word ptr [ebp - 0x2a], 0x7c39
0x80498fe:   c7 45 d0 80 c9 5b 50            	mov dword ptr [ebp - 0x30], 0x505bc980
0x8049905:   c7 85 68 ff ff ff e8 98 9d 56   	mov dword ptr [ebp - 0x98], 0x569d98e8
0x804990f:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x8049916:   c7 45 c8 fb ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffb
0x804991d:   66 c7 45 c6 0d 74               	mov word ptr [ebp - 0x3a], 0x740d
0x8049923:   c6 45 c5 05                     	mov byte ptr [ebp - 0x3b], 5
0x8049927:   c6 45 f3 55                     	mov byte ptr [ebp - 0xd], 0x55
0x804992b:   66 c7 45 f0 67 df               	mov word ptr [ebp - 0x10], 0xdf67
0x8049931:   c7 45 ec 8c b8 80 5c            	mov dword ptr [ebp - 0x14], 0x5c80b88c
0x8049938:   66 c7 45 ea 98 77               	mov word ptr [ebp - 0x16], 0x7798
0x804993e:   c7 45 e4 67 80 45 78            	mov dword ptr [ebp - 0x1c], 0x78458067
0x8049945:   c7 85 64 ff ff ff 28 93 29 2d   	mov dword ptr [ebp - 0x9c], 0x2d299328
0x804994f:   c7 45 e0 06 00 00 00            	mov dword ptr [ebp - 0x20], 6
0x8049956:   c7 45 c0 05 00 00 00            	mov dword ptr [ebp - 0x40], 5
0x804995d:   c6 45 bf 04                     	mov byte ptr [ebp - 0x41], 4
0x8049961:   66 c7 85 62 ff ff ff 07 00      	mov word ptr [ebp - 0x9e], 7
0x804996a:   c6 85 61 ff ff ff b8            	mov byte ptr [ebp - 0x9f], 0xb8
0x8049971:   c7 45 b8 09 00 00 00            	mov dword ptr [ebp - 0x48], 9
0x8049978:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x8049982:   66 c7 45 b6 14 b8               	mov word ptr [ebp - 0x4a], 0xb814
0x8049988:   66 c7 85 5a ff ff ff e3 ca      	mov word ptr [ebp - 0xa6], 0xcae3
0x8049991:   c6 45 b5 b8                     	mov byte ptr [ebp - 0x4b], 0xb8
0x8049995:   c6 85 59 ff ff ff b3            	mov byte ptr [ebp - 0xa7], 0xb3
0x804999c:   c6 85 58 ff ff ff fa            	mov byte ptr [ebp - 0xa8], 0xfa
0x80499a3:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x80499aa:   c7 45 ac 06 00 00 00            	mov dword ptr [ebp - 0x54], 6
0x80499b1:   c7 45 a8 fa ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffffa
0x80499b8:   c6 85 57 ff ff ff ff            	mov byte ptr [ebp - 0xa9], 0xff
0x80499bf:   c6 85 56 ff ff ff 01            	mov byte ptr [ebp - 0xaa], 1
0x80499c6:   c6 45 a7 d9                     	mov byte ptr [ebp - 0x59], 0xd9
0x80499ca:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x80499d4:   c7 85 4c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xb4], 6
0x80499de:   c7 85 48 ff ff ff 94 86 92 16   	mov dword ptr [ebp - 0xb8], 0x16928694
0x80499e8:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x80499ef:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x80499f6:   c7 45 98 92 a9 80 4d            	mov dword ptr [ebp - 0x68], 0x4d80a992
0x80499fd:   c6 45 97 79                     	mov byte ptr [ebp - 0x69], 0x79
0x8049a01:   c7 85 44 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xbc], 0
0x8049a0b:   c7 85 40 ff ff ff c5 03 16 ce   	mov dword ptr [ebp - 0xc0], 0xce1603c5
0x8049a15:   c7 85 3c ff ff ff b7 c5 25 47   	mov dword ptr [ebp - 0xc4], 0x4725c5b7
0x8049a1f:   66 c7 85 3a ff ff ff fe ff      	mov word ptr [ebp - 0xc6], 0xfffe
0x8049a28:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049a2e:   89 c3                           	mov ebx, eax
0x8049a30:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049a36:   89 c6                           	mov esi, eax
0x8049a38:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049a3e:   89 c2                           	mov edx, eax
0x8049a40:   0f bf c2                        	movsx eax, dx
0x8049a43:   69 c0 6f 54 00 00               	imul eax, eax, 0x546f
0x8049a49:   c1 e8 10                        	shr eax, 0x10
0x8049a4c:   89 c1                           	mov ecx, eax
0x8049a4e:   66 c1 f9 0c                     	sar cx, 0xc
0x8049a52:   89 d0                           	mov eax, edx
0x8049a54:   66 c1 f8 0f                     	sar ax, 0xf
0x8049a58:   29 c1                           	sub ecx, eax
0x8049a5a:   89 c8                           	mov eax, ecx
0x8049a5c:   66 69 c0 83 30                  	imul ax, ax, 0x3083
0x8049a61:   29 c2                           	sub edx, eax
0x8049a63:   89 d0                           	mov eax, edx
0x8049a65:   21 f0                           	and eax, esi
0x8049a67:   89 c2                           	mov edx, eax
0x8049a69:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049a6f:   29 c2                           	sub edx, eax
0x8049a71:   89 d0                           	mov eax, edx
0x8049a73:   01 d8                           	add eax, ebx
0x8049a75:   89 c2                           	mov edx, eax
0x8049a77:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049a7b:   09 d0                           	or eax, edx
0x8049a7d:   89 c2                           	mov edx, eax
0x8049a7f:   89 d0                           	mov eax, edx
0x8049a81:   c1 e0 03                        	shl eax, 3
0x8049a84:   01 d0                           	add eax, edx
0x8049a86:   c1 e0 03                        	shl eax, 3
0x8049a89:   89 c2                           	mov edx, eax
0x8049a8b:   0f b6 45 dd                     	movzx eax, byte ptr [ebp - 0x23]
0x8049a8f:   21 d0                           	and eax, edx
0x8049a91:   88 45 dd                        	mov byte ptr [ebp - 0x23], al
0x8049a94:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049a99:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049a9c:   c7 45 d8 ec ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffec
0x8049aa3:   e9 8e 08 00 00                  	jmp 0x804a336 <func_1+0xa6f>
0x8049aa8:   c7 45 90 02 00 00 00            	mov dword ptr [ebp - 0x70], 2
0x8049aaf:   c7 45 8c a8 b7 cd bd            	mov dword ptr [ebp - 0x74], 0xbdcdb7a8
0x8049ab6:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x8049ac0:   c6 85 33 ff ff ff 01            	mov byte ptr [ebp - 0xcd], 1
0x8049ac7:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x8049ad1:   c6 45 dd 00                     	mov byte ptr [ebp - 0x23], 0
0x8049ad5:   eb 0d                           	jmp 0x8049ae4 <func_1+0x21d>
0x8049ad7:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049ade:   75 0c                           	jne 0x8049aec <func_1+0x225>
0x8049ae0:   80 45 dd 01                     	add byte ptr [ebp - 0x23], 1
0x8049ae4:   80 7d dd 30                     	cmp byte ptr [ebp - 0x23], 0x30
0x8049ae8:   75 ed                           	jne 0x8049ad7 <func_1+0x210>
0x8049aea:   eb 01                           	jmp 0x8049aed <func_1+0x226>
0x8049aec:   90                              	nop 
0x8049aed:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049af0:   0f be d0                        	movsx edx, al
0x8049af3:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049af7:   0f be c0                        	movsx eax, al
0x8049afa:   0f af d0                        	imul edx, eax
0x8049afd:   0f b6 45 dd                     	movzx eax, byte ptr [ebp - 0x23]
0x8049b01:   31 d0                           	xor eax, edx
0x8049b03:   0b 85 4c ff ff ff               	or eax, dword ptr [ebp - 0xb4]
0x8049b09:   83 f8 02                        	cmp eax, 2
0x8049b0c:   75 06                           	jne 0x8049b14 <func_1+0x24d>
0x8049b0e:   80 7d dd 00                     	cmp byte ptr [ebp - 0x23], 0
0x8049b12:   74 07                           	je 0x8049b1b <func_1+0x254>
0x8049b14:   b8 01 00 00 00                  	mov eax, 1
0x8049b19:   eb 05                           	jmp 0x8049b20 <func_1+0x259>
0x8049b1b:   b8 00 00 00 00                  	mov eax, 0
0x8049b20:   89 c1                           	mov ecx, eax
0x8049b22:   b8 06 00 00 00                  	mov eax, 6
0x8049b27:   ba 00 00 00 00                  	mov edx, 0
0x8049b2c:   66 f7 f1                        	div cx
0x8049b2f:   66 89 55 d6                     	mov word ptr [ebp - 0x2a], dx
0x8049b33:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x8049b38:   0f 84 1f 02 00 00               	je 0x8049d5d <func_1+0x496>
0x8049b3e:   c6 45 8b 01                     	mov byte ptr [ebp - 0x75], 1
0x8049b42:   c7 85 08 ff ff ff 94 99 ba e6   	mov dword ptr [ebp - 0xf8], 0xe6ba9994
0x8049b4c:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8049b4f:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x8049b53:   29 c2                           	sub edx, eax
0x8049b55:   89 d0                           	mov eax, edx
0x8049b57:   83 7d 90 01                     	cmp dword ptr [ebp - 0x70], 1
0x8049b5b:   75 07                           	jne 0x8049b64 <func_1+0x29d>
0x8049b5d:   ba 99 00 00 00                  	mov edx, 0x99
0x8049b62:   eb 05                           	jmp 0x8049b69 <func_1+0x2a2>
0x8049b64:   ba 98 00 00 00                  	mov edx, 0x98
0x8049b69:   01 d0                           	add eax, edx
0x8049b6b:   85 c0                           	test eax, eax
0x8049b6d:   0f 84 b2 00 00 00               	je 0x8049c25 <func_1+0x35e>
0x8049b73:   c7 85 f8 fe ff ff d8 1d d2 2a   	mov dword ptr [ebp - 0x108], 0x2ad21dd8
0x8049b7d:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x8049b84:   80 7d 8b 00                     	cmp byte ptr [ebp - 0x75], 0
0x8049b88:   0f 85 a0 07 00 00               	jne 0x804a32e <func_1+0xa67>
0x8049b8e:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x8049b95:   75 79                           	jne 0x8049c10 <func_1+0x349>
0x8049b97:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049b9d:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049ba1:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x8049ba5:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049ba8:   23 85 48 ff ff ff               	and eax, dword ptr [ebp - 0xb8]
0x8049bae:   3d 49 2d 0b 51                  	cmp eax, 0x510b2d49
0x8049bb3:   0f 96 c0                        	setbe al
0x8049bb6:   0f b6 c0                        	movzx eax, al
0x8049bb9:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x8049bbf:   0f bf fa                        	movsx edi, dx
0x8049bc2:   99                              	cdq 
0x8049bc3:   f7 ff                           	idiv edi
0x8049bc5:   3d ff 00 00 00                  	cmp eax, 0xff
0x8049bca:   0f 97 c0                        	seta al
0x8049bcd:   0f b6 c0                        	movzx eax, al
0x8049bd0:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x8049bd6:   0f 95 c0                        	setne al
0x8049bd9:   0f b6 d0                        	movzx edx, al
0x8049bdc:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049bdf:   0f be c0                        	movsx eax, al
0x8049be2:   89 c1                           	mov ecx, eax
0x8049be4:   d3 fa                           	sar edx, cl
0x8049be6:   89 d0                           	mov eax, edx
0x8049be8:   c0 f8 06                        	sar al, 6
0x8049beb:   3c 5c                           	cmp al, 0x5c
0x8049bed:   7f 07                           	jg 0x8049bf6 <func_1+0x32f>
0x8049bef:   ba 5b 78 00 00                  	mov edx, 0x785b
0x8049bf4:   eb 05                           	jmp 0x8049bfb <func_1+0x334>
0x8049bf6:   ba 00 00 00 00                  	mov edx, 0
0x8049bfb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049bfe:   01 c2                           	add edx, eax
0x8049c00:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049c03:   39 c2                           	cmp edx, eax
0x8049c05:   0f 94 c0                        	sete al
0x8049c08:   0f b6 c0                        	movzx eax, al
0x8049c0b:   0b 45 d8                        	or eax, dword ptr [ebp - 0x28]
0x8049c0e:   39 c3                           	cmp ebx, eax
0x8049c10:   90                              	nop 
0x8049c11:   b8 00 00 00 00                  	mov eax, 0
0x8049c16:   21 85 08 ff ff ff               	and dword ptr [ebp - 0xf8], eax
0x8049c1c:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x8049c20:   e9 fa 06 00 00                  	jmp 0x804a31f <func_1+0xa58>
0x8049c25:   c7 85 04 ff ff ff 47 6b 38 03   	mov dword ptr [ebp - 0xfc], 0x3386b47
0x8049c2f:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049c39:   80 7d 8b 00                     	cmp byte ptr [ebp - 0x75], 0
0x8049c3d:   0f 85 ff 06 00 00               	jne 0x804a342 <func_1+0xa7b>
0x8049c43:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049c4a:   eb 7a                           	jmp 0x8049cc6 <func_1+0x3ff>
0x8049c4c:   66 c7 85 fe fe ff ff fb ff      	mov word ptr [ebp - 0x102], 0xfffb
0x8049c55:   c6 45 8b fa                     	mov byte ptr [ebp - 0x75], 0xfa
0x8049c59:   eb 23                           	jmp 0x8049c7e <func_1+0x3b7>
0x8049c5b:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049c5e:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049c61:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c64:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x8049c6a:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049c6d:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x8049c74:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x8049c78:   83 e8 01                        	sub eax, 1
0x8049c7b:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x8049c7e:   80 7d 8b f2                     	cmp byte ptr [ebp - 0x75], 0xf2
0x8049c82:   75 d7                           	jne 0x8049c5b <func_1+0x394>
0x8049c84:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049c87:   89 c1                           	mov ecx, eax
0x8049c89:   66 81 4d d6 64 d2               	or word ptr [ebp - 0x2a], 0xd264
0x8049c8f:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049c92:   66 31 45 de                     	xor word ptr [ebp - 0x22], ax
0x8049c96:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049c9a:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x8049c9e:   29 c2                           	sub edx, eax
0x8049ca0:   89 d0                           	mov eax, edx
0x8049ca2:   09 c8                           	or eax, ecx
0x8049ca4:   98                              	cwde 
0x8049ca5:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8049ca8:   0f bf fa                        	movsx edi, dx
0x8049cab:   99                              	cdq 
0x8049cac:   f7 ff                           	idiv edi
0x8049cae:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049cb4:   80 7d 8b 00                     	cmp byte ptr [ebp - 0x75], 0
0x8049cb8:   75 07                           	jne 0x8049cc1 <func_1+0x3fa>
0x8049cba:   66 83 6d c6 01                  	sub word ptr [ebp - 0x3a], 1
0x8049cbf:   eb 01                           	jmp 0x8049cc2 <func_1+0x3fb>
0x8049cc1:   90                              	nop 
0x8049cc2:   83 45 90 03                     	add dword ptr [ebp - 0x70], 3
0x8049cc6:   83 7d 90 30                     	cmp dword ptr [ebp - 0x70], 0x30
0x8049cca:   75 80                           	jne 0x8049c4c <func_1+0x385>
0x8049ccc:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049ccf:   f7 d8                           	neg eax
0x8049cd1:   66 85 c0                        	test ax, ax
0x8049cd4:   75 06                           	jne 0x8049cdc <func_1+0x415>
0x8049cd6:   80 7d dd 00                     	cmp byte ptr [ebp - 0x23], 0
0x8049cda:   74 07                           	je 0x8049ce3 <func_1+0x41c>
0x8049cdc:   b8 01 00 00 00                  	mov eax, 1
0x8049ce1:   eb 05                           	jmp 0x8049ce8 <func_1+0x421>
0x8049ce3:   b8 00 00 00 00                  	mov eax, 0
0x8049ce8:   88 45 dd                        	mov byte ptr [ebp - 0x23], al
0x8049ceb:   66 c7 45 d6 cd 7d               	mov word ptr [ebp - 0x2a], 0x7dcd
0x8049cf1:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x8049cf5:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x8049cfb:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049cfe:   88 45 c5                        	mov byte ptr [ebp - 0x3b], al
0x8049d01:   0f b6 45 dd                     	movzx eax, byte ptr [ebp - 0x23]
0x8049d05:   0f b7 55 c6                     	movzx edx, word ptr [ebp - 0x3a]
0x8049d09:   66 89 55 de                     	mov word ptr [ebp - 0x22], dx
0x8049d0d:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x8049d11:   88 55 f3                        	mov byte ptr [ebp - 0xd], dl
0x8049d14:   66 0f be 55 f3                  	movsx dx, byte ptr [ebp - 0xd]
0x8049d19:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049d1d:   0f bf 4d f0                     	movsx ecx, word ptr [ebp - 0x10]
0x8049d21:   99                              	cdq 
0x8049d22:   f7 f9                           	idiv ecx
0x8049d24:   80 45 c5 01                     	add byte ptr [ebp - 0x3b], 1
0x8049d28:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x8049d2c:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049d2f:   0f 93 c0                        	setae al
0x8049d32:   0f b6 c0                        	movzx eax, al
0x8049d35:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049d38:   89 d0                           	mov eax, edx
0x8049d3a:   33 45 98                        	xor eax, dword ptr [ebp - 0x68]
0x8049d3d:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x8049d40:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049d43:   98                              	cwde 
0x8049d44:   c1 e0 0c                        	shl eax, 0xc
0x8049d47:   0b 85 00 ff ff ff               	or eax, dword ptr [ebp - 0x100]
0x8049d4d:   89 c2                           	mov edx, eax
0x8049d4f:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x8049d53:   21 d0                           	and eax, edx
0x8049d55:   88 45 97                        	mov byte ptr [ebp - 0x69], al
0x8049d58:   e9 c2 05 00 00                  	jmp 0x804a31f <func_1+0xa58>
0x8049d5d:   c7 85 28 ff ff ff 11 81 b6 77   	mov dword ptr [ebp - 0xd8], 0x77b68111
0x8049d67:   c7 85 24 ff ff ff 4c 31 cf 4b   	mov dword ptr [ebp - 0xdc], 0x4bcf314c
0x8049d71:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049d7b:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x8049d7f:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049d83:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049d87:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x8049d8c:   75 10                           	jne 0x8049d9e <func_1+0x4d7>
0x8049d8e:   0f bf 4d f0                     	movsx ecx, word ptr [ebp - 0x10]
0x8049d92:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049d95:   01 c8                           	add eax, ecx
0x8049d97:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049d9a:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049d9e:   c7 85 34 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xcc], 1
0x8049da8:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049dae:   0b 85 28 ff ff ff               	or eax, dword ptr [ebp - 0xd8]
0x8049db4:   0d 66 29 00 00                  	or eax, 0x2966
0x8049db9:   3d 9f f8 25 1e                  	cmp eax, 0x1e25f89f
0x8049dbe:   0f 96 c0                        	setbe al
0x8049dc1:   0f b6 c0                        	movzx eax, al
0x8049dc4:   39 c2                           	cmp edx, eax
0x8049dc6:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049dc9:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x8049dcf:   0f 85 aa 00 00 00               	jne 0x8049e7f <func_1+0x5b8>
0x8049dd5:   c6 85 0e ff ff ff 06            	mov byte ptr [ebp - 0xf2], 6
0x8049ddc:   c7 45 84 8a 70 ea e2            	mov dword ptr [ebp - 0x7c], 0xe2ea708a
0x8049de3:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049de9:   89 c2                           	mov edx, eax
0x8049deb:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049dee:   21 d0                           	and eax, edx
0x8049df0:   0f be d0                        	movsx edx, al
0x8049df3:   80 6d dd 01                     	sub byte ptr [ebp - 0x23], 1
0x8049df7:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049dfa:   89 c1                           	mov ecx, eax
0x8049dfc:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049e02:   29 c1                           	sub ecx, eax
0x8049e04:   0f b6 45 dd                     	movzx eax, byte ptr [ebp - 0x23]
0x8049e08:   0f b6 c0                        	movzx eax, al
0x8049e0b:   f6 f1                           	div cl
0x8049e0d:   0f be c0                        	movsx eax, al
0x8049e10:   01 d0                           	add eax, edx
0x8049e12:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x8049e15:   66 83 6d d6 01                  	sub word ptr [ebp - 0x2a], 1
0x8049e1a:   0f b6 85 0e ff ff ff            	movzx eax, byte ptr [ebp - 0xf2]
0x8049e21:   f7 d0                           	not eax
0x8049e23:   08 85 33 ff ff ff               	or byte ptr [ebp - 0xcd], al
0x8049e29:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049e2f:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049e32:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x8049e39:   eb 39                           	jmp 0x8049e74 <func_1+0x5ad>
0x8049e3b:   66 c7 45 ea 00 00               	mov word ptr [ebp - 0x16], 0
0x8049e41:   eb 09                           	jmp 0x8049e4c <func_1+0x585>
0x8049e43:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x8049e47:   66 83 45 ea 07                  	add word ptr [ebp - 0x16], 7
0x8049e4c:   66 83 7d ea 11                  	cmp word ptr [ebp - 0x16], 0x11
0x8049e51:   76 f0                           	jbe 0x8049e43 <func_1+0x57c>
0x8049e53:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049e57:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049e5a:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e5e:   66 35 4a e5                     	xor ax, 0xe54a
0x8049e62:   0f b7 f0                        	movzx esi, ax
0x8049e65:   b8 84 f4 00 00                  	mov eax, 0xf484
0x8049e6a:   99                              	cdq 
0x8049e6b:   f7 fe                           	idiv esi
0x8049e6d:   21 45 84                        	and dword ptr [ebp - 0x7c], eax
0x8049e70:   83 45 e4 04                     	add dword ptr [ebp - 0x1c], 4
0x8049e74:   83 7d e4 2c                     	cmp dword ptr [ebp - 0x1c], 0x2c
0x8049e78:   76 c1                           	jbe 0x8049e3b <func_1+0x574>
0x8049e7a:   e9 45 03 00 00                  	jmp 0x804a1c4 <func_1+0x8fd>
0x8049e7f:   c7 85 1c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff6
0x8049e89:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x8049e93:   c6 85 17 ff ff ff 37            	mov byte ptr [ebp - 0xe9], 0x37
0x8049e9a:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049ea1:   75 0a                           	jne 0x8049ead <func_1+0x5e6>
0x8049ea3:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049ea7:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049eab:   75 07                           	jne 0x8049eb4 <func_1+0x5ed>
0x8049ead:   b8 01 00 00 00                  	mov eax, 1
0x8049eb2:   eb 05                           	jmp 0x8049eb9 <func_1+0x5f2>
0x8049eb4:   b8 00 00 00 00                  	mov eax, 0
0x8049eb9:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049ebf:   66 c7 45 ea 00 00               	mov word ptr [ebp - 0x16], 0
0x8049ec5:   66 83 7d ea 06                  	cmp word ptr [ebp - 0x16], 6
0x8049eca:   0f 85 f4 02 00 00               	jne 0x804a1c4 <func_1+0x8fd>
0x8049ed0:   c7 85 10 ff ff ff 80 b9 7b 31   	mov dword ptr [ebp - 0xf0], 0x317bb980
0x8049eda:   c6 85 0f ff ff ff e6            	mov byte ptr [ebp - 0xf1], 0xe6
0x8049ee1:   83 ad 1c ff ff ff 01            	sub dword ptr [ebp - 0xe4], 1
0x8049ee8:   66 83 85 5a ff ff ff 01         	add word ptr [ebp - 0xa6], 1
0x8049ef0:   c6 45 dd 00                     	mov byte ptr [ebp - 0x23], 0
0x8049ef4:   80 7d dd 0f                     	cmp byte ptr [ebp - 0x23], 0xf
0x8049ef8:   0f 86 5b 01 00 00               	jbe 0x804a059 <func_1+0x792>
0x8049efe:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x8049f02:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x8049f08:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x8049f0f:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x8049f15:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x8049f1c:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x8049f22:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x8049f29:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x8049f2f:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x8049f36:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x8049f3c:   0f be 45 b5                     	movsx eax, byte ptr [ebp - 0x4b]
0x8049f40:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x8049f46:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x8049f4d:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x8049f53:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x8049f57:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x8049f5d:   0f be 95 61 ff ff ff            	movsx edx, byte ptr [ebp - 0x9f]
0x8049f64:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x8049f6a:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x8049f71:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x8049f75:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x8049f7b:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049f7f:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x8049f83:   89 9d 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], ebx
0x8049f89:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x8049f8d:   0f b6 75 c5                     	movzx esi, byte ptr [ebp - 0x3b]
0x8049f91:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x8049f97:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x8049f9b:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x8049f9f:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x8049fa5:   0f b6 7d dd                     	movzx edi, byte ptr [ebp - 0x23]
0x8049fa9:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x8049fad:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049fb3:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049fb9:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049fbf:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049fc5:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049fc8:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049fcb:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049fce:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049fd4:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049fda:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049fe0:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049fe6:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049fec:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049ff2:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ff5:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049ffb:   52                              	push edx
0x8049ffc:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a002:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a005:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a008:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a00e:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a011:   51                              	push ecx
0x804a012:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a015:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a01b:   53                              	push ebx
0x804a01c:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a022:   56                              	push esi
0x804a023:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a026:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a029:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a02f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a032:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a038:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a03b:   57                              	push edi
0x804a03c:   50                              	push eax
0x804a03d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a043:   e8 de f5 ff ff                  	call 0x8049626 <set_var>
0x804a048:   81 c4 90 00 00 00               	add esp, 0x90
0x804a04e:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a054:   e9 92 0d 00 00                  	jmp 0x804adeb <func_1+0x1524>
0x804a059:   66 c7 85 62 ff ff ff 71 6a      	mov word ptr [ebp - 0x9e], 0x6a71
0x804a062:   c7 85 34 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xcc], 9
0x804a06c:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x804a070:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a076:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804a07d:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a083:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x804a08a:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a090:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804a097:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a09d:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804a0a4:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a0aa:   0f be 45 b5                     	movsx eax, byte ptr [ebp - 0x4b]
0x804a0ae:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a0b4:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a0bb:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a0c1:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a0c5:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a0cb:   0f be 95 61 ff ff ff            	movsx edx, byte ptr [ebp - 0x9f]
0x804a0d2:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804a0d8:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804a0df:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a0e3:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a0e9:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a0ed:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a0f1:   89 9d 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], ebx
0x804a0f7:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a0fb:   0f b6 75 c5                     	movzx esi, byte ptr [ebp - 0x3b]
0x804a0ff:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a105:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a109:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a10d:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a113:   0f b6 7d dd                     	movzx edi, byte ptr [ebp - 0x23]
0x804a117:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a11b:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a121:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a127:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a12d:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a133:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a136:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a139:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a13c:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a142:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a148:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a14e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a154:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a15a:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a160:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a163:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a169:   52                              	push edx
0x804a16a:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a170:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a173:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a176:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a17c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a17f:   51                              	push ecx
0x804a180:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a183:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a189:   53                              	push ebx
0x804a18a:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a190:   56                              	push esi
0x804a191:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a194:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a197:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a19d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a1a0:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a1a6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a1a9:   57                              	push edi
0x804a1aa:   50                              	push eax
0x804a1ab:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a1b1:   e8 70 f4 ff ff                  	call 0x8049626 <set_var>
0x804a1b6:   81 c4 90 00 00 00               	add esp, 0x90
0x804a1bc:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a1bf:   e9 27 0c 00 00                  	jmp 0x804adeb <func_1+0x1524>
0x804a1c4:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x804a1c8:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a1ce:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804a1d5:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a1db:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x804a1e2:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a1e8:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804a1ef:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a1f5:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804a1fc:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a202:   0f be 45 b5                     	movsx eax, byte ptr [ebp - 0x4b]
0x804a206:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a20c:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a213:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a219:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a21d:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a223:   0f be 95 61 ff ff ff            	movsx edx, byte ptr [ebp - 0x9f]
0x804a22a:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804a230:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804a237:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a23b:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a241:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a245:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a249:   89 9d 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], ebx
0x804a24f:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a253:   0f b6 75 c5                     	movzx esi, byte ptr [ebp - 0x3b]
0x804a257:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a25d:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a261:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a265:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a26b:   0f b6 7d dd                     	movzx edi, byte ptr [ebp - 0x23]
0x804a26f:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a273:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a279:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a27f:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a285:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a28b:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a28e:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a291:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a294:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a29a:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a2a0:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a2a6:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a2ac:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a2b2:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a2b8:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a2bb:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a2c1:   52                              	push edx
0x804a2c2:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a2c8:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a2cb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a2ce:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a2d4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a2d7:   51                              	push ecx
0x804a2d8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a2db:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a2e1:   53                              	push ebx
0x804a2e2:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a2e8:   56                              	push esi
0x804a2e9:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a2ec:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2ef:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a2f5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a2f8:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a2fe:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a301:   57                              	push edi
0x804a302:   50                              	push eax
0x804a303:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a309:   e8 18 f3 ff ff                  	call 0x8049626 <set_var>
0x804a30e:   81 c4 90 00 00 00               	add esp, 0x90
0x804a314:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a31a:   e9 cc 0a 00 00                  	jmp 0x804adeb <func_1+0x1524>
0x804a31f:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804a326:   75 09                           	jne 0x804a331 <func_1+0xa6a>
0x804a328:   83 6d a8 01                     	sub dword ptr [ebp - 0x58], 1
0x804a32c:   eb 04                           	jmp 0x804a332 <func_1+0xa6b>
0x804a32e:   90                              	nop 
0x804a32f:   eb 01                           	jmp 0x804a332 <func_1+0xa6b>
0x804a331:   90                              	nop 
0x804a332:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x804a336:   83 7d d8 f2                     	cmp dword ptr [ebp - 0x28], -0xe
0x804a33a:   0f 8d 68 f7 ff ff               	jge 0x8049aa8 <func_1+0x1e1>
0x804a340:   eb 01                           	jmp 0x804a343 <func_1+0xa7c>
0x804a342:   90                              	nop 
0x804a343:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x804a349:   e9 32 09 00 00                  	jmp 0x804ac80 <func_1+0x13b9>
0x804a34e:   c6 85 f7 fe ff ff 08            	mov byte ptr [ebp - 0x109], 8
0x804a355:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x804a35f:   c7 45 80 0d e6 71 24            	mov dword ptr [ebp - 0x80], 0x2471e60d
0x804a366:   c7 85 7c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x84], 0xfffffff8
0x804a370:   c6 85 ef fe ff ff f6            	mov byte ptr [ebp - 0x111], 0xf6
0x804a377:   c7 85 e8 fe ff ff cf ab e8 ed   	mov dword ptr [ebp - 0x118], 0xede8abcf
0x804a381:   c6 85 e7 fe ff ff 0c            	mov byte ptr [ebp - 0x119], 0xc
0x804a388:   c7 85 78 ff ff ff 31 4d c6 67   	mov dword ptr [ebp - 0x88], 0x67c64d31
0x804a392:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a399:   e9 6f 01 00 00                  	jmp 0x804a50d <func_1+0xc46>
0x804a39e:   c6 85 9f fe ff ff dd            	mov byte ptr [ebp - 0x161], 0xdd
0x804a3a5:   c7 85 98 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x168], 4
0x804a3af:   c7 85 94 fe ff ff 1f 9b c0 c5   	mov dword ptr [ebp - 0x16c], 0xc5c09b1f
0x804a3b9:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a3bd:   83 f0 06                        	xor eax, 6
0x804a3c0:   0f b7 c0                        	movzx eax, ax
0x804a3c3:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a3c6:   0f b6 85 9f fe ff ff            	movzx eax, byte ptr [ebp - 0x161]
0x804a3cd:   8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x804a3d0:   89 d1                           	mov ecx, edx
0x804a3d2:   8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x804a3d5:   21 ca                           	and edx, ecx
0x804a3d7:   0f b6 d2                        	movzx edx, dl
0x804a3da:   f7 da                           	neg edx
0x804a3dc:   39 d0                           	cmp eax, edx
0x804a3de:   83 bd 7c ff ff ff 01            	cmp dword ptr [ebp - 0x84], 1
0x804a3e5:   0f 84 99 00 00 00               	je 0x804a484 <func_1+0xbbd>
0x804a3eb:   c6 85 91 fe ff ff fd            	mov byte ptr [ebp - 0x16f], 0xfd
0x804a3f2:   0f be 95 91 fe ff ff            	movsx edx, byte ptr [ebp - 0x16f]
0x804a3f9:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a3fd:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804a403:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a409:   0f b7 c0                        	movzx eax, ax
0x804a40c:   8d 0c 00                        	lea ecx, [eax + eax]
0x804a40f:   80 bd f7 fe ff ff 00            	cmp byte ptr [ebp - 0x109], 0
0x804a416:   75 0a                           	jne 0x804a422 <func_1+0xb5b>
0x804a418:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a41c:   d0 f8                           	sar al, 1
0x804a41e:   84 c0                           	test al, al
0x804a420:   74 07                           	je 0x804a429 <func_1+0xb62>
0x804a422:   b8 01 00 00 00                  	mov eax, 1
0x804a427:   eb 05                           	jmp 0x804a42e <func_1+0xb67>
0x804a429:   b8 00 00 00 00                  	mov eax, 0
0x804a42e:   39 c8                           	cmp eax, ecx
0x804a430:   0f 94 c0                        	sete al
0x804a433:   0f b6 c0                        	movzx eax, al
0x804a436:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a439:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a43c:   3d e5 c5 76 da                  	cmp eax, 0xda76c5e5
0x804a441:   0f 93 c0                        	setae al
0x804a444:   0f b6 c0                        	movzx eax, al
0x804a447:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a44d:   0f 92 c0                        	setb al
0x804a450:   0f b6 c8                        	movzx ecx, al
0x804a453:   0f be 85 91 fe ff ff            	movsx eax, byte ptr [ebp - 0x16f]
0x804a45a:   39 c1                           	cmp ecx, eax
0x804a45c:   0f 9d c0                        	setge al
0x804a45f:   0f b6 c0                        	movzx eax, al
0x804a462:   01 c2                           	add edx, eax
0x804a464:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a467:   21 d0                           	and eax, edx
0x804a469:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a46c:   c7 85 98 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x168], 0xfffffffd
0x804a476:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x804a47c:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a47f:   e9 81 00 00 00                  	jmp 0x804a505 <func_1+0xc3e>
0x804a484:   66 c7 85 92 fe ff ff a1 1d      	mov word ptr [ebp - 0x16e], 0x1da1
0x804a48d:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a491:   0f be d0                        	movsx edx, al
0x804a494:   0f b6 85 f7 fe ff ff            	movzx eax, byte ptr [ebp - 0x109]
0x804a49b:   0f be c0                        	movsx eax, al
0x804a49e:   29 c2                           	sub edx, eax
0x804a4a0:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a4a4:   b9 b1 74 00 00                  	mov ecx, 0x74b1
0x804a4a9:   29 c1                           	sub ecx, eax
0x804a4ab:   89 c8                           	mov eax, ecx
0x804a4ad:   39 c2                           	cmp edx, eax
0x804a4af:   0f 9d c0                        	setge al
0x804a4b2:   0f b6 d0                        	movzx edx, al
0x804a4b5:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804a4bc:   39 c2                           	cmp edx, eax
0x804a4be:   0f 9f c0                        	setg al
0x804a4c1:   0f b6 d0                        	movzx edx, al
0x804a4c4:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a4ca:   98                              	cwde 
0x804a4cb:   89 c1                           	mov ecx, eax
0x804a4cd:   d3 fa                           	sar edx, cl
0x804a4cf:   89 d0                           	mov eax, edx
0x804a4d1:   3d ed 00 00 00                  	cmp eax, 0xed
0x804a4d6:   0f 9e c0                        	setle al
0x804a4d9:   0f b6 d0                        	movzx edx, al
0x804a4dc:   0f b7 85 92 fe ff ff            	movzx eax, word ptr [ebp - 0x16e]
0x804a4e3:   31 d0                           	xor eax, edx
0x804a4e5:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a4e9:   ba 00 00 00 00                  	mov edx, 0
0x804a4ee:   f7 f7                           	div edi
0x804a4f0:   89 c1                           	mov ecx, eax
0x804a4f2:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a4f6:   89 c2                           	mov edx, eax
0x804a4f8:   0f b6 c1                        	movzx eax, cl
0x804a4fb:   f6 f2                           	div dl
0x804a4fd:   0f b6 c0                        	movzx eax, al
0x804a500:   f7 d0                           	not eax
0x804a502:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804a505:   80 45 a7 01                     	add byte ptr [ebp - 0x59], 1
0x804a509:   83 6d a0 07                     	sub dword ptr [ebp - 0x60], 7
0x804a50d:   83 7d a0 e6                     	cmp dword ptr [ebp - 0x60], -0x1a
0x804a511:   0f 8c 87 fe ff ff               	jl 0x804a39e <func_1+0xad7>
0x804a517:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a51e:   66 98                           	cbw 
0x804a520:   ba 9c ff ff ff                  	mov edx, 0xffffff9c
0x804a525:   29 c2                           	sub edx, eax
0x804a527:   89 d0                           	mov eax, edx
0x804a529:   66 c1 e8 08                     	shr ax, 8
0x804a52d:   89 c2                           	mov edx, eax
0x804a52f:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a535:   31 d0                           	xor eax, edx
0x804a537:   22 45 dd                        	and al, byte ptr [ebp - 0x23]
0x804a53a:   0f b6 c0                        	movzx eax, al
0x804a53d:   ba 1b 00 00 00                  	mov edx, 0x1b
0x804a542:   29 c2                           	sub edx, eax
0x804a544:   89 d0                           	mov eax, edx
0x804a546:   3d ba c7 00 00                  	cmp eax, 0xc7ba
0x804a54b:   0f 94 c0                        	sete al
0x804a54e:   0f b6 c0                        	movzx eax, al
0x804a551:   89 c2                           	mov edx, eax
0x804a553:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804a55a:   66 98                           	cbw 
0x804a55c:   0f af c2                        	imul eax, edx
0x804a55f:   ba 00 00 00 00                  	mov edx, 0
0x804a564:   66 f7 75 c6                     	div word ptr [ebp - 0x3a]
0x804a568:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a56c:   66 39 c2                        	cmp dx, ax
0x804a56f:   0f 97 c0                        	seta al
0x804a572:   0f b6 d0                        	movzx edx, al
0x804a575:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a578:   98                              	cwde 
0x804a579:   01 d0                           	add eax, edx
0x804a57b:   85 c0                           	test eax, eax
0x804a57d:   0f 84 d2 01 00 00               	je 0x804a755 <func_1+0xe8e>
0x804a583:   c7 85 a4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x15c], 0
0x804a58d:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x804a594:   83 7d 80 0a                     	cmp dword ptr [ebp - 0x80], 0xa
0x804a598:   0f 8f 69 01 00 00               	jg 0x804a707 <func_1+0xe40>
0x804a59e:   c7 85 a0 fe ff ff 9b 3f 84 c0   	mov dword ptr [ebp - 0x160], 0xc0843f9b
0x804a5a8:   83 85 50 ff ff ff 01            	add dword ptr [ebp - 0xb0], 1
0x804a5af:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x804a5b3:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a5b9:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804a5c0:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a5c6:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x804a5cd:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a5d3:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804a5da:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a5e0:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804a5e7:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a5ed:   0f be 45 b5                     	movsx eax, byte ptr [ebp - 0x4b]
0x804a5f1:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a5f7:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a5fe:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a604:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a608:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a60e:   0f be 95 61 ff ff ff            	movsx edx, byte ptr [ebp - 0x9f]
0x804a615:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804a61b:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804a622:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a626:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a62c:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a630:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a634:   89 9d 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], ebx
0x804a63a:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a63e:   0f b6 75 c5                     	movzx esi, byte ptr [ebp - 0x3b]
0x804a642:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a648:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a64c:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a650:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a656:   0f b6 7d dd                     	movzx edi, byte ptr [ebp - 0x23]
0x804a65a:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a65e:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a664:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a66a:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a670:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a676:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a679:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a67c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a67f:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a685:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a68b:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a691:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a697:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a69d:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a6a3:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a6a6:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a6ac:   52                              	push edx
0x804a6ad:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a6b3:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a6b6:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6b9:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a6bf:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6c2:   51                              	push ecx
0x804a6c3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6c6:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a6cc:   53                              	push ebx
0x804a6cd:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a6d3:   56                              	push esi
0x804a6d4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6d7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6da:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a6e0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6e3:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a6e9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6ec:   57                              	push edi
0x804a6ed:   50                              	push eax
0x804a6ee:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a6f4:   e8 2d ef ff ff                  	call 0x8049626 <set_var>
0x804a6f9:   81 c4 90 00 00 00               	add esp, 0x90
0x804a6ff:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a702:   e9 e4 06 00 00                  	jmp 0x804adeb <func_1+0x1524>
0x804a707:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a70d:   08 45 f3                        	or byte ptr [ebp - 0xd], al
0x804a710:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a714:   39 85 a4 fe ff ff               	cmp dword ptr [ebp - 0x15c], eax
0x804a71a:   75 07                           	jne 0x804a723 <func_1+0xe5c>
0x804a71c:   83 bd a4 fe ff ff 00            	cmp dword ptr [ebp - 0x15c], 0
0x804a723:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a729:   0f bf d0                        	movsx edx, ax
0x804a72c:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a732:   98                              	cwde 
0x804a733:   89 c1                           	mov ecx, eax
0x804a735:   d3 fa                           	sar edx, cl
0x804a737:   89 d0                           	mov eax, edx
0x804a739:   83 e8 01                        	sub eax, 1
0x804a73c:   88 45 b5                        	mov byte ptr [ebp - 0x4b], al
0x804a73f:   b8 01 00 00 00                  	mov eax, 1
0x804a744:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x804a747:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a74a:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a750:   e9 20 05 00 00                  	jmp 0x804ac75 <func_1+0x13ae>
0x804a755:   66 c7 85 e4 fe ff ff 06 00      	mov word ptr [ebp - 0x11c], 6
0x804a75e:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a768:   c7 85 dc fe ff ff d3 e0 d6 47   	mov dword ptr [ebp - 0x124], 0x47d6e0d3
0x804a772:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x804a77c:   66 c7 85 da fe ff ff 2f 55      	mov word ptr [ebp - 0x126], 0x552f
0x804a785:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a78b:   3b 85 48 ff ff ff               	cmp eax, dword ptr [ebp - 0xb8]
0x804a791:   0f 94 c0                        	sete al
0x804a794:   0f b6 c0                        	movzx eax, al
0x804a797:   66 89 85 e4 fe ff ff            	mov word ptr [ebp - 0x11c], ax
0x804a79e:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a7a2:   74 40                           	je 0x804a7e4 <func_1+0xf1d>
0x804a7a4:   66 c7 85 b6 fe ff ff 20 13      	mov word ptr [ebp - 0x14a], 0x1320
0x804a7ad:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a7b1:   8d 50 ff                        	lea edx, [eax - 1]
0x804a7b4:   88 55 bf                        	mov byte ptr [ebp - 0x41], dl
0x804a7b7:   0f b6 d0                        	movzx edx, al
0x804a7ba:   0f be 85 61 ff ff ff            	movsx eax, byte ptr [ebp - 0x9f]
0x804a7c1:   21 d0                           	and eax, edx
0x804a7c3:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a7c9:   0f 95 c0                        	setne al
0x804a7cc:   0f b6 c0                        	movzx eax, al
0x804a7cf:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a7d2:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a7d9:   0f 84 9f 03 00 00               	je 0x804ab7e <func_1+0x12b7>
0x804a7df:   e9 91 04 00 00                  	jmp 0x804ac75 <func_1+0x13ae>
0x804a7e4:   c7 85 d4 fe ff ff a9 f7 58 43   	mov dword ptr [ebp - 0x12c], 0x4358f7a9
0x804a7ee:   c7 85 70 ff ff ff 81 1b d7 e8   	mov dword ptr [ebp - 0x90], 0xe8d71b81
0x804a7f8:   c7 85 d0 fe ff ff f6 f4 41 e5   	mov dword ptr [ebp - 0x130], 0xe541f4f6
0x804a802:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a809:   0f b6 d0                        	movzx edx, al
0x804a80c:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a812:   89 c1                           	mov ecx, eax
0x804a814:   80 f9 ce                        	cmp cl, 0xce
0x804a817:   0f 93 c0                        	setae al
0x804a81a:   bb ce ff ff ff                  	mov ebx, 0xffffffce
0x804a81f:   0f af c3                        	imul eax, ebx
0x804a822:   29 c1                           	sub ecx, eax
0x804a824:   89 c8                           	mov eax, ecx
0x804a826:   0f b6 c0                        	movzx eax, al
0x804a829:   23 85 e8 fe ff ff               	and eax, dword ptr [ebp - 0x118]
0x804a82f:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x804a835:   0f 95 c0                        	setne al
0x804a838:   0f b6 c8                        	movzx ecx, al
0x804a83b:   0f bf 85 e4 fe ff ff            	movsx eax, word ptr [ebp - 0x11c]
0x804a842:   39 c1                           	cmp ecx, eax
0x804a844:   0f 9f c0                        	setg al
0x804a847:   89 c1                           	mov ecx, eax
0x804a849:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a84c:   01 c8                           	add eax, ecx
0x804a84e:   0f b6 c0                        	movzx eax, al
0x804a851:   0f af c2                        	imul eax, edx
0x804a854:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a85a:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a860:   0f b6 d0                        	movzx edx, al
0x804a863:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a869:   0f b6 c0                        	movzx eax, al
0x804a86c:   29 c2                           	sub edx, eax
0x804a86e:   89 d0                           	mov eax, edx
0x804a870:   98                              	cwde 
0x804a871:   0f bf b5 62 ff ff ff            	movsx esi, word ptr [ebp - 0x9e]
0x804a878:   99                              	cdq 
0x804a879:   f7 fe                           	idiv esi
0x804a87b:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a881:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804a888:   0f be c8                        	movsx ecx, al
0x804a88b:   ba a1 a0 a0 a0                  	mov edx, 0xa0a0a0a1
0x804a890:   89 c8                           	mov eax, ecx
0x804a892:   f7 ea                           	imul edx
0x804a894:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a897:   c1 f8 05                        	sar eax, 5
0x804a89a:   89 c2                           	mov edx, eax
0x804a89c:   89 c8                           	mov eax, ecx
0x804a89e:   c1 f8 1f                        	sar eax, 0x1f
0x804a8a1:   29 c2                           	sub edx, eax
0x804a8a3:   89 d0                           	mov eax, edx
0x804a8a5:   6b c0 33                        	imul eax, eax, 0x33
0x804a8a8:   29 c1                           	sub ecx, eax
0x804a8aa:   89 c8                           	mov eax, ecx
0x804a8ac:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a8b2:   0f 93 c0                        	setae al
0x804a8b5:   0f b6 d0                        	movzx edx, al
0x804a8b8:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a8bc:   0f b6 c0                        	movzx eax, al
0x804a8bf:   29 c2                           	sub edx, eax
0x804a8c1:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a8c5:   39 c2                           	cmp edx, eax
0x804a8c7:   0f 9c c0                        	setl al
0x804a8ca:   0f b6 c0                        	movzx eax, al
0x804a8cd:   89 c2                           	mov edx, eax
0x804a8cf:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a8d2:   0f af c2                        	imul eax, edx
0x804a8d5:   66 c1 e8 08                     	shr ax, 8
0x804a8d9:   66 85 c0                        	test ax, ax
0x804a8dc:   0f 84 cc 01 00 00               	je 0x804aaae <func_1+0x11e7>
0x804a8e2:   66 c7 85 c8 fe ff ff ff ff      	mov word ptr [ebp - 0x138], 0xffff
0x804a8eb:   c7 85 c4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x13c], 0xfffffff6
0x804a8f5:   c7 85 c0 fe ff ff 73 7e 9b 58   	mov dword ptr [ebp - 0x140], 0x589b7e73
0x804a8ff:   66 c7 45 b6 00 00               	mov word ptr [ebp - 0x4a], 0
0x804a905:   66 83 7d b6 00                  	cmp word ptr [ebp - 0x4a], 0
0x804a90a:   74 04                           	je 0x804a910 <func_1+0x1049>
0x804a90c:   80 7d a7 00                     	cmp byte ptr [ebp - 0x59], 0
0x804a910:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a913:   23 85 c4 fe ff ff               	and eax, dword ptr [ebp - 0x13c]
0x804a919:   85 c0                           	test eax, eax
0x804a91b:   75 07                           	jne 0x804a924 <func_1+0x105d>
0x804a91d:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x804a924:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a92b:   0f bf 85 c8 fe ff ff            	movsx eax, word ptr [ebp - 0x138]
0x804a932:   0f b7 95 da fe ff ff            	movzx edx, word ptr [ebp - 0x126]
0x804a939:   0f bf ca                        	movsx ecx, dx
0x804a93c:   99                              	cdq 
0x804a93d:   f7 f9                           	idiv ecx
0x804a93f:   89 d0                           	mov eax, edx
0x804a941:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a944:   0f 85 88 00 00 00               	jne 0x804a9d2 <func_1+0x110b>
0x804a94a:   66 c7 85 ba fe ff ff 00 00      	mov word ptr [ebp - 0x146], 0
0x804a953:   0f b7 95 ba fe ff ff            	movzx edx, word ptr [ebp - 0x146]
0x804a95a:   0f b6 45 dd                     	movzx eax, byte ptr [ebp - 0x23]
0x804a95e:   80 bd 58 ff ff ff 00            	cmp byte ptr [ebp - 0xa8], 0
0x804a965:   75 09                           	jne 0x804a970 <func_1+0x10a9>
0x804a967:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a96e:   74 07                           	je 0x804a977 <func_1+0x10b0>
0x804a970:   b9 01 00 00 00                  	mov ecx, 1
0x804a975:   eb 05                           	jmp 0x804a97c <func_1+0x10b5>
0x804a977:   b9 00 00 00 00                  	mov ecx, 0
0x804a97c:   39 c8                           	cmp eax, ecx
0x804a97e:   0f 95 c0                        	setne al
0x804a981:   0f b6 c0                        	movzx eax, al
0x804a984:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a987:   0f 92 c0                        	setb al
0x804a98a:   0f b6 c0                        	movzx eax, al
0x804a98d:   0b 85 e0 fe ff ff               	or eax, dword ptr [ebp - 0x120]
0x804a993:   89 c1                           	mov ecx, eax
0x804a995:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804a99c:   39 c1                           	cmp ecx, eax
0x804a99e:   0f 93 c0                        	setae al
0x804a9a1:   89 c1                           	mov ecx, eax
0x804a9a3:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a9a7:   21 c8                           	and eax, ecx
0x804a9a9:   0f b6 c8                        	movzx ecx, al
0x804a9ac:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a9af:   0f b6 c0                        	movzx eax, al
0x804a9b2:   29 c1                           	sub ecx, eax
0x804a9b4:   89 c8                           	mov eax, ecx
0x804a9b6:   39 c2                           	cmp edx, eax
0x804a9b8:   0f 9e c0                        	setle al
0x804a9bb:   0f b6 c0                        	movzx eax, al
0x804a9be:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a9c1:   0f 96 c0                        	setbe al
0x804a9c4:   0f b6 c0                        	movzx eax, al
0x804a9c7:   21 85 e8 fe ff ff               	and dword ptr [ebp - 0x118], eax
0x804a9cd:   e9 82 00 00 00                  	jmp 0x804aa54 <func_1+0x118d>
0x804a9d2:   c7 85 bc fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x144], 6
0x804a9dc:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a9e2:   0f b6 d0                        	movzx edx, al
0x804a9e5:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a9ec:   0f b6 c0                        	movzx eax, al
0x804a9ef:   0f af c2                        	imul eax, edx
0x804a9f2:   85 c0                           	test eax, eax
0x804a9f4:   74 23                           	je 0x804aa19 <func_1+0x1152>
0x804a9f6:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a9fc:   83 c0 3c                        	add eax, 0x3c
0x804a9ff:   0f b6 c0                        	movzx eax, al
0x804aa02:   c1 e0 02                        	shl eax, 2
0x804aa05:   85 c0                           	test eax, eax
0x804aa07:   74 10                           	je 0x804aa19 <func_1+0x1152>
0x804aa09:   80 bd 61 ff ff ff 00            	cmp byte ptr [ebp - 0x9f], 0
0x804aa10:   74 07                           	je 0x804aa19 <func_1+0x1152>
0x804aa12:   b8 01 00 00 00                  	mov eax, 1
0x804aa17:   eb 05                           	jmp 0x804aa1e <func_1+0x1157>
0x804aa19:   b8 00 00 00 00                  	mov eax, 0
0x804aa1e:   d0 e8                           	shr al, 1
0x804aa20:   84 c0                           	test al, al
0x804aa22:   74 07                           	je 0x804aa2b <func_1+0x1164>
0x804aa24:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804aa2b:   c7 85 bc fe ff ff f6 22 d9 6c   	mov dword ptr [ebp - 0x144], 0x6cd922f6
0x804aa35:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804aa38:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804aa3b:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804aa42:   0f 85 45 02 00 00               	jne 0x804ac8d <func_1+0x13c6>
0x804aa48:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804aa4e:   09 85 dc fe ff ff               	or dword ptr [ebp - 0x124], eax
0x804aa54:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x804aa5e:   eb 40                           	jmp 0x804aaa0 <func_1+0x11d9>
0x804aa60:   c6 85 b9 fe ff ff 49            	mov byte ptr [ebp - 0x147], 0x49
0x804aa67:   0f be 85 b9 fe ff ff            	movsx eax, byte ptr [ebp - 0x147]
0x804aa6e:   09 85 70 ff ff ff               	or dword ptr [ebp - 0x90], eax
0x804aa74:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804aa7b:   f7 d8                           	neg eax
0x804aa7d:   66 33 45 ea                     	xor ax, word ptr [ebp - 0x16]
0x804aa81:   34 9e                           	xor al, 0x9e
0x804aa83:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804aa87:   b8 01 00 00 00                  	mov eax, 1
0x804aa8c:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x804aa8f:   80 7d a7 00                     	cmp byte ptr [ebp - 0x59], 0
0x804aa93:   0f 85 e4 00 00 00               	jne 0x804ab7d <func_1+0x12b6>
0x804aa99:   83 ad 78 ff ff ff 01            	sub dword ptr [ebp - 0x88], 1
0x804aaa0:   83 bd 78 ff ff ff eb            	cmp dword ptr [ebp - 0x88], -0x15
0x804aaa7:   7d b7                           	jge 0x804aa60 <func_1+0x1199>
0x804aaa9:   e9 d0 00 00 00                  	jmp 0x804ab7e <func_1+0x12b7>
0x804aaae:   c7 85 cc fe ff ff 8b d4 25 9b   	mov dword ptr [ebp - 0x134], 0x9b25d48b
0x804aab8:   c7 85 cc fe ff ff 81 00 00 00   	mov dword ptr [ebp - 0x134], 0x81
0x804aac2:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804aac8:   0b 85 f0 fe ff ff               	or eax, dword ptr [ebp - 0x110]
0x804aace:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804aad1:   c6 45 b5 00                     	mov byte ptr [ebp - 0x4b], 0
0x804aad5:   e9 97 00 00 00                  	jmp 0x804ab71 <func_1+0x12aa>
0x804aada:   66 c7 85 ca fe ff ff fa ff      	mov word ptr [ebp - 0x136], 0xfffa
0x804aae3:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804aae6:   35 ef 4e 74 91                  	xor eax, 0x91744eef
0x804aaeb:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804aaee:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804aaf1:   23 45 a8                        	and eax, dword ptr [ebp - 0x58]
0x804aaf4:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804aaf7:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804aafe:   75 66                           	jne 0x804ab66 <func_1+0x129f>
0x804ab00:   0f b7 8d ca fe ff ff            	movzx ecx, word ptr [ebp - 0x136]
0x804ab07:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804ab0e:   f7 d0                           	not eax
0x804ab10:   0f b6 d0                        	movzx edx, al
0x804ab13:   89 d0                           	mov eax, edx
0x804ab15:   c1 e0 03                        	shl eax, 3
0x804ab18:   29 d0                           	sub eax, edx
0x804ab1a:   89 c3                           	mov ebx, eax
0x804ab1c:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804ab22:   0f b6 c0                        	movzx eax, al
0x804ab25:   83 c0 22                        	add eax, 0x22
0x804ab28:   f7 d0                           	not eax
0x804ab2a:   89 c2                           	mov edx, eax
0x804ab2c:   0f bf 85 e4 fe ff ff            	movsx eax, word ptr [ebp - 0x11c]
0x804ab33:   39 c2                           	cmp edx, eax
0x804ab35:   0f 9f c0                        	setg al
0x804ab38:   0f b6 d0                        	movzx edx, al
0x804ab3b:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804ab3e:   0f b6 c0                        	movzx eax, al
0x804ab41:   01 d0                           	add eax, edx
0x804ab43:   89 c6                           	mov esi, eax
0x804ab45:   89 d8                           	mov eax, ebx
0x804ab47:   ba 00 00 00 00                  	mov edx, 0
0x804ab4c:   f7 f6                           	div esi
0x804ab4e:   89 d0                           	mov eax, edx
0x804ab50:   83 e8 02                        	sub eax, 2
0x804ab53:   c0 f8 03                        	sar al, 3
0x804ab56:   0f be c0                        	movsx eax, al
0x804ab59:   39 c1                           	cmp ecx, eax
0x804ab5b:   0f 9e c0                        	setle al
0x804ab5e:   0f b6 c0                        	movzx eax, al
0x804ab61:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804ab64:   eb 01                           	jmp 0x804ab67 <func_1+0x12a0>
0x804ab66:   90                              	nop 
0x804ab67:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804ab6b:   83 c0 03                        	add eax, 3
0x804ab6e:   88 45 b5                        	mov byte ptr [ebp - 0x4b], al
0x804ab71:   80 7d b5 1b                     	cmp byte ptr [ebp - 0x4b], 0x1b
0x804ab75:   0f 85 5f ff ff ff               	jne 0x804aada <func_1+0x1213>
0x804ab7b:   eb 01                           	jmp 0x804ab7e <func_1+0x12b7>
0x804ab7d:   90                              	nop 
0x804ab7e:   c7 45 ec 07 00 00 00            	mov dword ptr [ebp - 0x14], 7
0x804ab85:   e9 e1 00 00 00                  	jmp 0x804ac6b <func_1+0x13a4>
0x804ab8a:   c7 85 b0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x150], 0xffffffff
0x804ab94:   c7 85 ac fe ff ff 01 d2 64 b8   	mov dword ptr [ebp - 0x154], 0xb864d201
0x804ab9e:   c6 85 ab fe ff ff f9            	mov byte ptr [ebp - 0x155], 0xf9
0x804aba5:   c7 45 c0 1a 00 00 00            	mov dword ptr [ebp - 0x40], 0x1a
0x804abac:   eb 0a                           	jmp 0x804abb8 <func_1+0x12f1>
0x804abae:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804abb2:   75 0c                           	jne 0x804abc0 <func_1+0x12f9>
0x804abb4:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x804abb8:   83 7d c0 07                     	cmp dword ptr [ebp - 0x40], 7
0x804abbc:   74 f0                           	je 0x804abae <func_1+0x12e7>
0x804abbe:   eb 01                           	jmp 0x804abc1 <func_1+0x12fa>
0x804abc0:   90                              	nop 
0x804abc1:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804abc8:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804abcb:   98                              	cwde 
0x804abcc:   89 c1                           	mov ecx, eax
0x804abce:   d3 e2                           	shl edx, cl
0x804abd0:   89 d0                           	mov eax, edx
0x804abd2:   83 f8 fb                        	cmp eax, -5
0x804abd5:   7d 07                           	jge 0x804abde <func_1+0x1317>
0x804abd7:   b8 91 ff ff ff                  	mov eax, 0xffffff91
0x804abdc:   eb 05                           	jmp 0x804abe3 <func_1+0x131c>
0x804abde:   b8 22 00 00 00                  	mov eax, 0x22
0x804abe3:   30 45 b5                        	xor byte ptr [ebp - 0x4b], al
0x804abe6:   80 7d b5 00                     	cmp byte ptr [ebp - 0x4b], 0
0x804abea:   75 06                           	jne 0x804abf2 <func_1+0x132b>
0x804abec:   80 7d bf 00                     	cmp byte ptr [ebp - 0x41], 0
0x804abf0:   74 07                           	je 0x804abf9 <func_1+0x1332>
0x804abf2:   b8 01 00 00 00                  	mov eax, 1
0x804abf7:   eb 05                           	jmp 0x804abfe <func_1+0x1337>
0x804abf9:   b8 00 00 00 00                  	mov eax, 0
0x804abfe:   21 85 74 ff ff ff               	and dword ptr [ebp - 0x8c], eax
0x804ac04:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804ac0a:   66 39 45 c6                     	cmp word ptr [ebp - 0x3a], ax
0x804ac0e:   75 09                           	jne 0x804ac19 <func_1+0x1352>
0x804ac10:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804ac17:   74 07                           	je 0x804ac20 <func_1+0x1359>
0x804ac19:   b8 01 00 00 00                  	mov eax, 1
0x804ac1e:   eb 05                           	jmp 0x804ac25 <func_1+0x135e>
0x804ac20:   b8 00 00 00 00                  	mov eax, 0
0x804ac25:   33 85 b0 fe ff ff               	xor eax, dword ptr [ebp - 0x150]
0x804ac2b:   89 c2                           	mov edx, eax
0x804ac2d:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804ac33:   21 d0                           	and eax, edx
0x804ac35:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804ac3b:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804ac41:   89 c2                           	mov edx, eax
0x804ac43:   66 0f be 85 ab fe ff ff         	movsx ax, byte ptr [ebp - 0x155]
0x804ac4b:   09 c2                           	or edx, eax
0x804ac4d:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804ac51:   21 d0                           	and eax, edx
0x804ac53:   0f b7 d0                        	movzx edx, ax
0x804ac56:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804ac5d:   29 c2                           	sub edx, eax
0x804ac5f:   89 d0                           	mov eax, edx
0x804ac61:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804ac67:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x804ac6b:   83 7d ec f2                     	cmp dword ptr [ebp - 0x14], -0xe
0x804ac6f:   0f 84 15 ff ff ff               	je 0x804ab8a <func_1+0x12c3>
0x804ac75:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804ac79:   83 e8 01                        	sub eax, 1
0x804ac7c:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804ac80:   66 83 7d de e9                  	cmp word ptr [ebp - 0x22], -0x17
0x804ac85:   0f 84 c3 f6 ff ff               	je 0x804a34e <func_1+0xa87>
0x804ac8b:   eb 01                           	jmp 0x804ac8e <func_1+0x13c7>
0x804ac8d:   90                              	nop 
0x804ac8e:   c7 85 40 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc0], 0
0x804ac98:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x804ac9c:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804aca2:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804aca9:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804acaf:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x804acb6:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804acbc:   0f b6 85 58 ff ff ff            	movzx eax, byte ptr [ebp - 0xa8]
0x804acc3:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804acc9:   0f b6 85 59 ff ff ff            	movzx eax, byte ptr [ebp - 0xa7]
0x804acd0:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804acd6:   0f be 45 b5                     	movsx eax, byte ptr [ebp - 0x4b]
0x804acda:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804ace0:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804ace7:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804aced:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804acf1:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804acf7:   0f be 95 61 ff ff ff            	movsx edx, byte ptr [ebp - 0x9f]
0x804acfe:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804ad04:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804ad0b:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804ad0f:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804ad15:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804ad19:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804ad1d:   89 9d 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], ebx
0x804ad23:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804ad27:   0f b6 75 c5                     	movzx esi, byte ptr [ebp - 0x3b]
0x804ad2b:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804ad31:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804ad35:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804ad39:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804ad3f:   0f b6 7d dd                     	movzx edi, byte ptr [ebp - 0x23]
0x804ad43:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804ad47:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804ad4d:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ad53:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804ad59:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804ad5f:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ad62:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ad65:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ad68:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804ad6e:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ad74:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ad7a:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ad80:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ad86:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804ad8c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ad8f:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ad95:   52                              	push edx
0x804ad96:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ad9c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ad9f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ada2:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804ada8:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804adab:   51                              	push ecx
0x804adac:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804adaf:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804adb5:   53                              	push ebx
0x804adb6:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804adbc:   56                              	push esi
0x804adbd:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804adc0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804adc3:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804adc9:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804adcc:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804add2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804add5:   57                              	push edi
0x804add6:   50                              	push eax
0x804add7:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804addd:   e8 44 e8 ff ff                  	call 0x8049626 <set_var>
0x804ade2:   81 c4 90 00 00 00               	add esp, 0x90
0x804ade8:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804adeb:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804adee:   5b                              	pop ebx
0x804adef:   5e                              	pop esi
0x804adf0:   5f                              	pop edi
0x804adf1:   5d                              	pop ebp
0x804adf2:   c3                              	ret 
; function: main at 0x804adf3 -- 0x804b2bf
0x804adf3:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804adf7:   83 e4 f0                        	and esp, 0xfffffff0
0x804adfa:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804adfd:   55                              	push ebp
0x804adfe:   89 e5                           	mov ebp, esp
0x804ae00:   53                              	push ebx
0x804ae01:   51                              	push ecx
0x804ae02:   83 ec 10                        	sub esp, 0x10
0x804ae05:   e8 86 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae0a:   81 c3 f6 31 00 00               	add ebx, 0x31f6
0x804ae10:   89 c8                           	mov eax, ecx
0x804ae12:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ae19:   83 38 02                        	cmp dword ptr [eax], 2
0x804ae1c:   75 26                           	jne 0x804ae44 <main+0x51>
0x804ae1e:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ae21:   83 c0 04                        	add eax, 4
0x804ae24:   8b 00                           	mov eax, dword ptr [eax]
0x804ae26:   83 ec 08                        	sub esp, 8
0x804ae29:   8d 93 a8 d3 ff ff               	lea edx, [ebx - 0x2c58]
0x804ae2f:   52                              	push edx
0x804ae30:   50                              	push eax
0x804ae31:   e8 ca d4 ff ff                  	call 0x8048300 <strcmp>
0x804ae36:   83 c4 10                        	add esp, 0x10
0x804ae39:   85 c0                           	test eax, eax
0x804ae3b:   75 07                           	jne 0x804ae44 <main+0x51>
0x804ae3d:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ae44:   e8 0d d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ae49:   e8 1d e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ae4e:   e8 74 ea ff ff                  	call 0x80498c7 <func_1>
0x804ae53:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ae59:   83 ec 04                        	sub esp, 4
0x804ae5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5f:   8d 93 aa d3 ff ff               	lea edx, [ebx - 0x2c56]
0x804ae65:   52                              	push edx
0x804ae66:   50                              	push eax
0x804ae67:   e8 0b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6c:   83 c4 10                        	add esp, 0x10
0x804ae6f:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ae76:   98                              	cwde 
0x804ae77:   83 ec 04                        	sub esp, 4
0x804ae7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7d:   8d 93 af d3 ff ff               	lea edx, [ebx - 0x2c51]
0x804ae83:   52                              	push edx
0x804ae84:   50                              	push eax
0x804ae85:   e8 ed e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8a:   83 c4 10                        	add esp, 0x10
0x804ae8d:   0f b6 83 2a 00 00 00            	movzx eax, byte ptr [ebx + 0x2a]
0x804ae94:   0f b6 c0                        	movzx eax, al
0x804ae97:   83 ec 04                        	sub esp, 4
0x804ae9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9d:   8d 93 b4 d3 ff ff               	lea edx, [ebx - 0x2c4c]
0x804aea3:   52                              	push edx
0x804aea4:   50                              	push eax
0x804aea5:   e8 cd e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeaa:   83 c4 10                        	add esp, 0x10
0x804aead:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aeb3:   89 c2                           	mov edx, eax
0x804aeb5:   83 ec 04                        	sub esp, 4
0x804aeb8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebb:   8d 83 b9 d3 ff ff               	lea eax, [ebx - 0x2c47]
0x804aec1:   50                              	push eax
0x804aec2:   52                              	push edx
0x804aec3:   e8 af e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec8:   83 c4 10                        	add esp, 0x10
0x804aecb:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804aed2:   0f b7 c0                        	movzx eax, ax
0x804aed5:   83 ec 04                        	sub esp, 4
0x804aed8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aedb:   8d 93 be d3 ff ff               	lea edx, [ebx - 0x2c42]
0x804aee1:   52                              	push edx
0x804aee2:   50                              	push eax
0x804aee3:   e8 8f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee8:   83 c4 10                        	add esp, 0x10
0x804aeeb:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aef1:   89 c2                           	mov edx, eax
0x804aef3:   83 ec 04                        	sub esp, 4
0x804aef6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef9:   8d 83 c3 d3 ff ff               	lea eax, [ebx - 0x2c3d]
0x804aeff:   50                              	push eax
0x804af00:   52                              	push edx
0x804af01:   e8 71 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af06:   83 c4 10                        	add esp, 0x10
0x804af09:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804af0f:   89 c2                           	mov edx, eax
0x804af11:   83 ec 04                        	sub esp, 4
0x804af14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af17:   8d 83 c8 d3 ff ff               	lea eax, [ebx - 0x2c38]
0x804af1d:   50                              	push eax
0x804af1e:   52                              	push edx
0x804af1f:   e8 53 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af24:   83 c4 10                        	add esp, 0x10
0x804af27:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804af2d:   83 ec 04                        	sub esp, 4
0x804af30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af33:   8d 93 cd d3 ff ff               	lea edx, [ebx - 0x2c33]
0x804af39:   52                              	push edx
0x804af3a:   50                              	push eax
0x804af3b:   e8 37 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af40:   83 c4 10                        	add esp, 0x10
0x804af43:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804af49:   89 c2                           	mov edx, eax
0x804af4b:   83 ec 04                        	sub esp, 4
0x804af4e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af51:   8d 83 d2 d3 ff ff               	lea eax, [ebx - 0x2c2e]
0x804af57:   50                              	push eax
0x804af58:   52                              	push edx
0x804af59:   e8 19 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5e:   83 c4 10                        	add esp, 0x10
0x804af61:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804af68:   0f b7 c0                        	movzx eax, ax
0x804af6b:   83 ec 04                        	sub esp, 4
0x804af6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af71:   8d 93 d7 d3 ff ff               	lea edx, [ebx - 0x2c29]
0x804af77:   52                              	push edx
0x804af78:   50                              	push eax
0x804af79:   e8 f9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7e:   83 c4 10                        	add esp, 0x10
0x804af81:   0f b6 83 46 00 00 00            	movzx eax, byte ptr [ebx + 0x46]
0x804af88:   0f b6 c0                        	movzx eax, al
0x804af8b:   83 ec 04                        	sub esp, 4
0x804af8e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af91:   8d 93 dc d3 ff ff               	lea edx, [ebx - 0x2c24]
0x804af97:   52                              	push edx
0x804af98:   50                              	push eax
0x804af99:   e8 d9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af9e:   83 c4 10                        	add esp, 0x10
0x804afa1:   0f b6 83 47 00 00 00            	movzx eax, byte ptr [ebx + 0x47]
0x804afa8:   0f be c0                        	movsx eax, al
0x804afab:   83 ec 04                        	sub esp, 4
0x804afae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb1:   8d 93 e1 d3 ff ff               	lea edx, [ebx - 0x2c1f]
0x804afb7:   52                              	push edx
0x804afb8:   50                              	push eax
0x804afb9:   e8 b9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbe:   83 c4 10                        	add esp, 0x10
0x804afc1:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804afc8:   98                              	cwde 
0x804afc9:   83 ec 04                        	sub esp, 4
0x804afcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afcf:   8d 93 e7 d3 ff ff               	lea edx, [ebx - 0x2c19]
0x804afd5:   52                              	push edx
0x804afd6:   50                              	push eax
0x804afd7:   e8 9b e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdc:   83 c4 10                        	add esp, 0x10
0x804afdf:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804afe5:   89 c2                           	mov edx, eax
0x804afe7:   83 ec 04                        	sub esp, 4
0x804afea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afed:   8d 83 ed d3 ff ff               	lea eax, [ebx - 0x2c13]
0x804aff3:   50                              	push eax
0x804aff4:   52                              	push edx
0x804aff5:   e8 7d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804affa:   83 c4 10                        	add esp, 0x10
0x804affd:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804b004:   0f b7 c0                        	movzx eax, ax
0x804b007:   83 ec 04                        	sub esp, 4
0x804b00a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b00d:   8d 93 f3 d3 ff ff               	lea edx, [ebx - 0x2c0d]
0x804b013:   52                              	push edx
0x804b014:   50                              	push eax
0x804b015:   e8 5d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b01a:   83 c4 10                        	add esp, 0x10
0x804b01d:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b023:   83 ec 04                        	sub esp, 4
0x804b026:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b029:   8d 93 f9 d3 ff ff               	lea edx, [ebx - 0x2c07]
0x804b02f:   52                              	push edx
0x804b030:   50                              	push eax
0x804b031:   e8 41 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b036:   83 c4 10                        	add esp, 0x10
0x804b039:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b03f:   83 ec 04                        	sub esp, 4
0x804b042:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b045:   8d 93 ff d3 ff ff               	lea edx, [ebx - 0x2c01]
0x804b04b:   52                              	push edx
0x804b04c:   50                              	push eax
0x804b04d:   e8 25 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b052:   83 c4 10                        	add esp, 0x10
0x804b055:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b05b:   83 ec 04                        	sub esp, 4
0x804b05e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b061:   8d 93 05 d4 ff ff               	lea edx, [ebx - 0x2bfb]
0x804b067:   52                              	push edx
0x804b068:   50                              	push eax
0x804b069:   e8 09 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b06e:   83 c4 10                        	add esp, 0x10
0x804b071:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b077:   83 ec 04                        	sub esp, 4
0x804b07a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b07d:   8d 93 0b d4 ff ff               	lea edx, [ebx - 0x2bf5]
0x804b083:   52                              	push edx
0x804b084:   50                              	push eax
0x804b085:   e8 ed e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b08a:   83 c4 10                        	add esp, 0x10
0x804b08d:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b094:   0f b6 c0                        	movzx eax, al
0x804b097:   83 ec 04                        	sub esp, 4
0x804b09a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b09d:   8d 93 11 d4 ff ff               	lea edx, [ebx - 0x2bef]
0x804b0a3:   52                              	push edx
0x804b0a4:   50                              	push eax
0x804b0a5:   e8 cd e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0aa:   83 c4 10                        	add esp, 0x10
0x804b0ad:   0f b7 83 66 00 00 00            	movzx eax, word ptr [ebx + 0x66]
0x804b0b4:   98                              	cwde 
0x804b0b5:   83 ec 04                        	sub esp, 4
0x804b0b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0bb:   8d 93 17 d4 ff ff               	lea edx, [ebx - 0x2be9]
0x804b0c1:   52                              	push edx
0x804b0c2:   50                              	push eax
0x804b0c3:   e8 af e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c8:   83 c4 10                        	add esp, 0x10
0x804b0cb:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804b0d2:   0f be c0                        	movsx eax, al
0x804b0d5:   83 ec 04                        	sub esp, 4
0x804b0d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0db:   8d 93 1d d4 ff ff               	lea edx, [ebx - 0x2be3]
0x804b0e1:   52                              	push edx
0x804b0e2:   50                              	push eax
0x804b0e3:   e8 8f e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0e8:   83 c4 10                        	add esp, 0x10
0x804b0eb:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b0f1:   89 c2                           	mov edx, eax
0x804b0f3:   83 ec 04                        	sub esp, 4
0x804b0f6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f9:   8d 83 23 d4 ff ff               	lea eax, [ebx - 0x2bdd]
0x804b0ff:   50                              	push eax
0x804b100:   52                              	push edx
0x804b101:   e8 71 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b106:   83 c4 10                        	add esp, 0x10
0x804b109:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b10f:   89 c2                           	mov edx, eax
0x804b111:   83 ec 04                        	sub esp, 4
0x804b114:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b117:   8d 83 29 d4 ff ff               	lea eax, [ebx - 0x2bd7]
0x804b11d:   50                              	push eax
0x804b11e:   52                              	push edx
0x804b11f:   e8 53 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b124:   83 c4 10                        	add esp, 0x10
0x804b127:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804b12e:   98                              	cwde 
0x804b12f:   83 ec 04                        	sub esp, 4
0x804b132:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b135:   8d 93 2f d4 ff ff               	lea edx, [ebx - 0x2bd1]
0x804b13b:   52                              	push edx
0x804b13c:   50                              	push eax
0x804b13d:   e8 35 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b142:   83 c4 10                        	add esp, 0x10
0x804b145:   0f b7 83 76 00 00 00            	movzx eax, word ptr [ebx + 0x76]
0x804b14c:   0f b7 c0                        	movzx eax, ax
0x804b14f:   83 ec 04                        	sub esp, 4
0x804b152:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b155:   8d 93 35 d4 ff ff               	lea edx, [ebx - 0x2bcb]
0x804b15b:   52                              	push edx
0x804b15c:   50                              	push eax
0x804b15d:   e8 15 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b162:   83 c4 10                        	add esp, 0x10
0x804b165:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804b16c:   0f be c0                        	movsx eax, al
0x804b16f:   83 ec 04                        	sub esp, 4
0x804b172:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b175:   8d 93 3b d4 ff ff               	lea edx, [ebx - 0x2bc5]
0x804b17b:   52                              	push edx
0x804b17c:   50                              	push eax
0x804b17d:   e8 f5 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b182:   83 c4 10                        	add esp, 0x10
0x804b185:   0f b6 83 79 00 00 00            	movzx eax, byte ptr [ebx + 0x79]
0x804b18c:   0f b6 c0                        	movzx eax, al
0x804b18f:   83 ec 04                        	sub esp, 4
0x804b192:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b195:   8d 93 41 d4 ff ff               	lea edx, [ebx - 0x2bbf]
0x804b19b:   52                              	push edx
0x804b19c:   50                              	push eax
0x804b19d:   e8 d5 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a2:   83 c4 10                        	add esp, 0x10
0x804b1a5:   0f b6 83 7a 00 00 00            	movzx eax, byte ptr [ebx + 0x7a]
0x804b1ac:   0f b6 c0                        	movzx eax, al
0x804b1af:   83 ec 04                        	sub esp, 4
0x804b1b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1b5:   8d 93 47 d4 ff ff               	lea edx, [ebx - 0x2bb9]
0x804b1bb:   52                              	push edx
0x804b1bc:   50                              	push eax
0x804b1bd:   e8 b5 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1c2:   83 c4 10                        	add esp, 0x10
0x804b1c5:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b1cb:   89 c2                           	mov edx, eax
0x804b1cd:   83 ec 04                        	sub esp, 4
0x804b1d0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1d3:   8d 83 4d d4 ff ff               	lea eax, [ebx - 0x2bb3]
0x804b1d9:   50                              	push eax
0x804b1da:   52                              	push edx
0x804b1db:   e8 97 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1e0:   83 c4 10                        	add esp, 0x10
0x804b1e3:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804b1e9:   89 c2                           	mov edx, eax
0x804b1eb:   83 ec 04                        	sub esp, 4
0x804b1ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1f1:   8d 83 53 d4 ff ff               	lea eax, [ebx - 0x2bad]
0x804b1f7:   50                              	push eax
0x804b1f8:   52                              	push edx
0x804b1f9:   e8 79 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1fe:   83 c4 10                        	add esp, 0x10
0x804b201:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804b207:   83 ec 04                        	sub esp, 4
0x804b20a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b20d:   8d 93 59 d4 ff ff               	lea edx, [ebx - 0x2ba7]
0x804b213:   52                              	push edx
0x804b214:   50                              	push eax
0x804b215:   e8 5d e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b21a:   83 c4 10                        	add esp, 0x10
0x804b21d:   0f b6 83 88 00 00 00            	movzx eax, byte ptr [ebx + 0x88]
0x804b224:   0f be c0                        	movsx eax, al
0x804b227:   83 ec 04                        	sub esp, 4
0x804b22a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b22d:   8d 93 5f d4 ff ff               	lea edx, [ebx - 0x2ba1]
0x804b233:   52                              	push edx
0x804b234:   50                              	push eax
0x804b235:   e8 3d e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b23a:   83 c4 10                        	add esp, 0x10
0x804b23d:   0f b6 83 89 00 00 00            	movzx eax, byte ptr [ebx + 0x89]
0x804b244:   0f be c0                        	movsx eax, al
0x804b247:   83 ec 04                        	sub esp, 4
0x804b24a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b24d:   8d 93 65 d4 ff ff               	lea edx, [ebx - 0x2b9b]
0x804b253:   52                              	push edx
0x804b254:   50                              	push eax
0x804b255:   e8 1d e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b25a:   83 c4 10                        	add esp, 0x10
0x804b25d:   0f b6 83 8a 00 00 00            	movzx eax, byte ptr [ebx + 0x8a]
0x804b264:   0f b6 c0                        	movzx eax, al
0x804b267:   83 ec 04                        	sub esp, 4
0x804b26a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b26d:   8d 93 6b d4 ff ff               	lea edx, [ebx - 0x2b95]
0x804b273:   52                              	push edx
0x804b274:   50                              	push eax
0x804b275:   e8 fd e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b27a:   83 c4 10                        	add esp, 0x10
0x804b27d:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804b283:   83 ec 04                        	sub esp, 4
0x804b286:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b289:   8d 93 71 d4 ff ff               	lea edx, [ebx - 0x2b8f]
0x804b28f:   52                              	push edx
0x804b290:   50                              	push eax
0x804b291:   e8 e1 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b296:   83 c4 10                        	add esp, 0x10
0x804b299:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b29f:   f7 d0                           	not eax
0x804b2a1:   83 ec 08                        	sub esp, 8
0x804b2a4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2a7:   50                              	push eax
0x804b2a8:   e8 b9 d1 ff ff                  	call 0x8048466 <platform_main_end>
0x804b2ad:   83 c4 10                        	add esp, 0x10
0x804b2b0:   b8 00 00 00 00                  	mov eax, 0
0x804b2b5:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b2b8:   59                              	pop ecx
0x804b2b9:   5b                              	pop ebx
0x804b2ba:   5d                              	pop ebp
0x804b2bb:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b2be:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b2bf -- 0x804b2c3
0x804b2bf:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b2c2:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b2c3 -- 0x804b2c7
0x804b2c3:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b2c6:   c3                              	ret 
; data inside code section at 0x804b2c7 -- 0x804b2d0
0x804b2c7:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x804b2d0 -- 0x804b32d
0x804b2d0:   55                              	push ebp
0x804b2d1:   57                              	push edi
0x804b2d2:   56                              	push esi
0x804b2d3:   53                              	push ebx
0x804b2d4:   e8 b7 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b2d9:   81 c3 27 2d 00 00               	add ebx, 0x2d27
0x804b2df:   83 ec 0c                        	sub esp, 0xc
0x804b2e2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b2e6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b2ec:   e8 db cf ff ff                  	call 0x80482cc <_init>
0x804b2f1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b2f7:   29 c6                           	sub esi, eax
0x804b2f9:   c1 fe 02                        	sar esi, 2
0x804b2fc:   85 f6                           	test esi, esi
0x804b2fe:   74 25                           	je 0x804b325 <__libc_csu_init+0x55>
0x804b300:   31 ff                           	xor edi, edi
0x804b302:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b308:   83 ec 04                        	sub esp, 4
0x804b30b:   55                              	push ebp
0x804b30c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b310:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b314:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b31b:   83 c7 01                        	add edi, 1
0x804b31e:   83 c4 10                        	add esp, 0x10
0x804b321:   39 fe                           	cmp esi, edi
0x804b323:   75 e3                           	jne 0x804b308 <__libc_csu_init+0x38>
0x804b325:   83 c4 0c                        	add esp, 0xc
0x804b328:   5b                              	pop ebx
0x804b329:   5e                              	pop esi
0x804b32a:   5f                              	pop edi
0x804b32b:   5d                              	pop ebp
0x804b32c:   c3                              	ret 
; data inside code section at 0x804b32d -- 0x804b330
0x804b32d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b330 -- 0x804b332
0x804b330:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b334 -- 0x804b348
0x804b334:   53                              	push ebx
0x804b335:   83 ec 08                        	sub esp, 8
0x804b338:   e8 53 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b33d:   81 c3 c3 2c 00 00               	add ebx, 0x2cc3
0x804b343:   83 c4 08                        	add esp, 8
0x804b346:   5b                              	pop ebx
0x804b347:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 4c b3 04 08  04 00 00 00 11 00 10 00   |....L...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b348:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b358:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b368:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b378:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b388:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b398:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b3a8:   31 00 67 5f 31 32 00 67  5f 31 33 00 67 5f 31 34   |1.g_12.g_13.g_14|
0x804b3b8:   00 67 5f 31 35 00 67 5f  32 37 00 67 5f 33 35 00   |.g_15.g_27.g_35.|
0x804b3c8:   67 5f 35 36 00 67 5f 35  37 00 67 5f 36 34 00 67   |g_56.g_57.g_64.g|
0x804b3d8:   5f 38 30 00 67 5f 39 38  00 67 5f 31 30 35 00 67   |_80.g_98.g_105.g|
0x804b3e8:   5f 31 30 36 00 67 5f 31  32 39 00 67 5f 31 34 37   |_106.g_129.g_147|
0x804b3f8:   00 67 5f 31 34 38 00 67  5f 31 34 39 00 67 5f 31   |.g_148.g_149.g_1|
0x804b408:   35 30 00 67 5f 31 35 36  00 67 5f 31 36 39 00 67   |50.g_156.g_169.g|
0x804b418:   5f 31 37 36 00 67 5f 31  38 30 00 67 5f 31 38 31   |_176.g_180.g_181|
0x804b428:   00 67 5f 31 38 33 00 67  5f 31 38 35 00 67 5f 31   |.g_183.g_185.g_1|
0x804b438:   38 36 00 67 5f 32 31 39  00 67 5f 32 32 31 00 67   |86.g_219.g_221.g|
0x804b448:   5f 32 32 32 00 67 5f 32  32 34 00 67 5f 32 32 35   |_222.g_224.g_225|
0x804b458:   00 67 5f 32 32 36 00 67  5f 32 38 34 00 67 5f 32   |.g_226.g_284.g_2|
0x804b468:   38 36 00 67 5f 32 38 38  00 67 5f 33 30 38 00 00   |86.g_288.g_308..|
0x804b478:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b488:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b498:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b4a8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b4b8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b4c8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b4d8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b4e0:   01 1b 03 3b b8 02 00 00  56 00 00 00 10 ce ff ff   |...;....V.......|
0x804b4f0:   e8 02 00 00 50 ce ff ff  0c 03 00 00 a0 ce ff ff   |....P...........|
0x804b500:   d4 02 00 00 76 cf ff ff  20 03 00 00 86 cf ff ff   |....v... .......|
0x804b510:   40 03 00 00 b4 cf ff ff  64 03 00 00 d2 cf ff ff   |@.......d.......|
0x804b520:   84 03 00 00 fa cf ff ff  a4 03 00 00 24 d0 ff ff   |............$...|
0x804b530:   c4 03 00 00 4d d0 ff ff  e4 03 00 00 90 d0 ff ff   |....M...........|
0x804b540:   04 04 00 00 d1 d0 ff ff  24 04 00 00 29 d1 ff ff   |........$...)...|
0x804b550:   48 04 00 00 7b d1 ff ff  6c 04 00 00 b8 d1 ff ff   |H...{...l.......|
0x804b560:   8c 04 00 00 ef d1 ff ff  ac 04 00 00 0e d2 ff ff   |................|
0x804b570:   cc 04 00 00 38 d2 ff ff  ec 04 00 00 64 d2 ff ff   |....8.......d...|
0x804b580:   0c 05 00 00 8f d2 ff ff  2c 05 00 00 d8 d2 ff ff   |........,.......|
0x804b590:   4c 05 00 00 1f d3 ff ff  6c 05 00 00 79 d3 ff ff   |L.......l...y...|
0x804b5a0:   90 05 00 00 cd d3 ff ff  b4 05 00 00 0c d4 ff ff   |................|
0x804b5b0:   d4 05 00 00 45 d4 ff ff  f4 05 00 00 67 d4 ff ff   |....E.......g...|
0x804b5c0:   14 06 00 00 b5 d4 ff ff  34 06 00 00 f1 d4 ff ff   |........4.......|
0x804b5d0:   54 06 00 00 7a d5 ff ff  74 06 00 00 ac d5 ff ff   |T...z...t.......|
0x804b5e0:   94 06 00 00 dc d5 ff ff  b4 06 00 00 21 d6 ff ff   |............!...|
0x804b5f0:   d4 06 00 00 60 d6 ff ff  f4 06 00 00 92 d6 ff ff   |....`...........|
0x804b600:   14 07 00 00 be d6 ff ff  34 07 00 00 dc d6 ff ff   |........4.......|
0x804b610:   54 07 00 00 04 d7 ff ff  74 07 00 00 29 d7 ff ff   |T.......t...)...|
0x804b620:   94 07 00 00 4e d7 ff ff  b4 07 00 00 85 d7 ff ff   |....N...........|
0x804b630:   d4 07 00 00 b9 d7 ff ff  f4 07 00 00 0b d8 ff ff   |................|
0x804b640:   18 08 00 00 57 d8 ff ff  3c 08 00 00 8e d8 ff ff   |....W...<.......|
0x804b650:   5c 08 00 00 bf d8 ff ff  7c 08 00 00 de d8 ff ff   |\.......|.......|
0x804b660:   9c 08 00 00 08 d9 ff ff  bc 08 00 00 30 d9 ff ff   |............0...|
0x804b670:   dc 08 00 00 59 d9 ff ff  fc 08 00 00 95 d9 ff ff   |....Y...........|
0x804b680:   1c 09 00 00 cf d9 ff ff  3c 09 00 00 22 da ff ff   |........<..."...|
0x804b690:   60 09 00 00 6f da ff ff  84 09 00 00 a7 da ff ff   |`...o...........|
0x804b6a0:   a4 09 00 00 d9 da ff ff  c4 09 00 00 ed da ff ff   |................|
0x804b6b0:   e4 09 00 00 04 db ff ff  04 0a 00 00 19 db ff ff   |................|
0x804b6c0:   24 0a 00 00 2f db ff ff  44 0a 00 00 56 db ff ff   |$.../...D...V...|
0x804b6d0:   64 0a 00 00 7b db ff ff  84 0a 00 00 ba db ff ff   |d...{...........|
0x804b6e0:   a4 0a 00 00 f3 db ff ff  c4 0a 00 00 1f dc ff ff   |................|
0x804b6f0:   e4 0a 00 00 45 dc ff ff  04 0b 00 00 87 dc ff ff   |....E...........|
0x804b700:   24 0b 00 00 c9 dc ff ff  44 0b 00 00 0b dd ff ff   |$.......D.......|
0x804b710:   64 0b 00 00 80 dd ff ff  84 0b 00 00 dd dd ff ff   |d...............|
0x804b720:   a4 0b 00 00 3a de ff ff  c4 0b 00 00 97 de ff ff   |....:...........|
0x804b730:   e4 0b 00 00 27 df ff ff  04 0c 00 00 8b df ff ff   |....'...........|
0x804b740:   24 0c 00 00 fb df ff ff  44 0c 00 00 42 e0 ff ff   |$.......D...B...|
0x804b750:   68 0c 00 00 97 e0 ff ff  88 0c 00 00 de e0 ff ff   |h...............|
0x804b760:   ac 0c 00 00 46 e1 ff ff  d0 0c 00 00 e7 e3 ff ff   |....F...........|
0x804b770:   00 0d 00 00 13 f9 ff ff  30 0d 00 00 df fd ff ff   |........0.......|
0x804b780:   68 0d 00 00 e3 fd ff ff  7c 0d 00 00 f0 fd ff ff   |h.......|.......|
0x804b790:   90 0d 00 00 50 fe ff ff  dc 0d 00 00 14            |....P........   |
; section: .eh_frame
0x804b79c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b7ac:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b7bc:   c4 cb ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b7cc:   30 00 00 00 20 cb ff ff  40 00 00 00 00 0e 08 46   |0... ...@......F|
0x804b7dc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b7ec:   10 00 00 00 54 00 00 00  3c cb ff ff 08 00 00 00   |....T...<.......|
0x804b7fc:   00 00 00 00 1c 00 00 00  68 00 00 00 4e cc ff ff   |........h...N...|
0x804b80c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b81c:   04 04 00 00 20 00 00 00  88 00 00 00 3e cc ff ff   |.... .......>...|
0x804b82c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b83c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b84c:   48 cc ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804b85c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b86c:   46 cc ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |F...(....A....B.|
0x804b87c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b88c:   4e cc ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |N...*....A....B.|
0x804b89c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b8ac:   58 cc ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |X...)....A....B.|
0x804b8bc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b8cc:   61 cc ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |a...C....A....B.|
0x804b8dc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b8ec:   84 cc ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b8fc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b90c:   a5 cc ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b91c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b92c:   90 01 00 00 d9 cc ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b93c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b94c:   1c 00 00 00 b4 01 00 00  07 cd ff ff 3d 00 00 00   |............=...|
0x804b95c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b96c:   1c 00 00 00 d4 01 00 00  24 cd ff ff 37 00 00 00   |........$...7...|
0x804b97c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b98c:   1c 00 00 00 f4 01 00 00  3b cd ff ff 1f 00 00 00   |........;.......|
0x804b99c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b9ac:   1c 00 00 00 14 02 00 00  3a cd ff ff 2a 00 00 00   |........:...*...|
0x804b9bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b9cc:   1c 00 00 00 34 02 00 00  44 cd ff ff 2c 00 00 00   |....4...D...,...|
0x804b9dc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b9ec:   1c 00 00 00 54 02 00 00  50 cd ff ff 2b 00 00 00   |....T...P...+...|
0x804b9fc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804ba0c:   1c 00 00 00 74 02 00 00  5b cd ff ff 49 00 00 00   |....t...[...I...|
0x804ba1c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804ba2c:   1c 00 00 00 94 02 00 00  84 cd ff ff 47 00 00 00   |............G...|
0x804ba3c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804ba4c:   20 00 00 00 b4 02 00 00  ab cd ff ff 5a 00 00 00   | ...........Z...|
0x804ba5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804ba6c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 e1 cd ff ff   |.... ...........|
0x804ba7c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804ba8c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804ba9c:   11 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804baac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804babc:   30 ce ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |0...9....A....B.|
0x804bacc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804badc:   49 ce ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |I..."....A....B.|
0x804baec:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bafc:   4b ce ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |K...N....A....B.|
0x804bb0c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bb1c:   79 ce ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |y...<....A....B.|
0x804bb2c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bb3c:   95 ce ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb4c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bb5c:   fe ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bb6c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bb7c:   10 cf ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804bb8c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bb9c:   20 cf ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   | ...E....A....B.|
0x804bbac:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bbbc:   45 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |E...?....A....B.|
0x804bbcc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bbdc:   64 cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |d...2....A....B.|
0x804bbec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bbfc:   76 cf ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |v...,....A....B.|
0x804bc0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bc1c:   82 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bc3c:   80 cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bc4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bc5c:   88 cf ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bc7c:   8d cf ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bc9c:   92 cf ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bcac:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bcbc:   a9 cf ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bccc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bcdc:   bd cf ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bcec:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bcfc:   60 05 00 00 eb cf ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bd0c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bd1c:   1c 00 00 00 84 05 00 00  13 d0 ff ff 37 00 00 00   |............7...|
0x804bd2c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bd3c:   1c 00 00 00 a4 05 00 00  2a d0 ff ff 31 00 00 00   |........*...1...|
0x804bd4c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bd5c:   1c 00 00 00 c4 05 00 00  3b d0 ff ff 1f 00 00 00   |........;.......|
0x804bd6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bd7c:   1c 00 00 00 e4 05 00 00  3a d0 ff ff 2a 00 00 00   |........:...*...|
0x804bd8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bd9c:   1c 00 00 00 04 06 00 00  44 d0 ff ff 28 00 00 00   |........D...(...|
0x804bdac:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bdbc:   1c 00 00 00 24 06 00 00  4c d0 ff ff 29 00 00 00   |....$...L...)...|
0x804bdcc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bddc:   1c 00 00 00 44 06 00 00  55 d0 ff ff 3c 00 00 00   |....D...U...<...|
0x804bdec:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bdfc:   1c 00 00 00 64 06 00 00  71 d0 ff ff 3a 00 00 00   |....d...q...:...|
0x804be0c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804be1c:   20 00 00 00 84 06 00 00  8b d0 ff ff 53 00 00 00   | ...........S...|
0x804be2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804be3c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ba d0 ff ff   |.... ...........|
0x804be4c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804be5c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804be6c:   e3 d0 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804be7c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804be8c:   fb d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804be9c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804beac:   0d d1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bebc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804becc:   01 d1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bedc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804beec:   f8 d0 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804befc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bf0c:   ed d0 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bf1c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bf2c:   e3 d0 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bf3c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bf4c:   ea d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bf5c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bf6c:   ef d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bf7c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bf8c:   0e d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bf9c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bfac:   27 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |'...,....A....B.|
0x804bfbc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bfcc:   33 d1 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |3...&....A....B.|
0x804bfdc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bfec:   39 d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |9...B....A....B.|
0x804bffc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c00c:   5b d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |[...B....A....B.|
0x804c01c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c02c:   7d d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |}...B....A....B.|
0x804c03c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c04c:   9f d1 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c05c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c06c:   f4 d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c07c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c08c:   31 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |1...]....A....B.|
0x804c09c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c0ac:   6e d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |n...]....A....B.|
0x804c0bc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c0cc:   ab d2 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0dc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c0ec:   1b d3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c0fc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c10c:   5f d3 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |_...p....A....B.|
0x804c11c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c12c:   af d3 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c13c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c14c:   b0 09 00 00 d2 d3 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c15c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c16c:   d0 09 00 00 07 d4 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c17c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c18c:   20 00 00 00 f4 09 00 00  2a d4 ff ff 68 00 00 00   | .......*...h...|
0x804c19c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c1ac:   0c 04 04 00 2c 00 00 00  18 0a 00 00 6e d4 ff ff   |....,.......n...|
0x804c1bc:   a1 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c1cc:   86 04 83 05 03 91 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c1dc:   04 00 00 00 2c 00 00 00  48 0a 00 00 df d6 ff ff   |....,...H.......|
0x804c1ec:   2c 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |,....A....B..I..|
0x804c1fc:   86 04 83 05 03 1c 15 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c20c:   04 00 00 00 34 00 00 00  78 0a 00 00 db eb ff ff   |....4...x.......|
0x804c21c:   cc 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c22c:   0f 03 75 78 06 10 03 02  75 7c 03 b7 04 c1 0c 01   |..ux....u|......|
0x804c23c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c24c:   b0 0a 00 00 6f f0 ff ff  04 00 00 00 00 00 00 00   |....o...........|
0x804c25c:   10 00 00 00 c4 0a 00 00  5f f0 ff ff 04 00 00 00   |........_.......|
0x804c26c:   00 00 00 00 48 00 00 00  d8 0a 00 00 58 f0 ff ff   |....H.......X...|
0x804c27c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c28c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c29c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c2ac:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c2bc:   10 00 00 00 24 0b 00 00  6c f0 ff ff 02 00 00 00   |....$...l.......|
0x804c2cc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 34 b3 04 08  19 00 00 00 0c df 04 08   |....4...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804e028:   ff ff 01 00 f8 ff ff ff  39 7c 00 00 80 c9 5b 50   |........9|....[P|
0x804e038:   e8 98 9d 56 ff ff ff ff  fb ff ff ff 0d 74 05 55   |...V.........t.U|
0x804e048:   67 df 00 00 8c b8 80 5c  98 77 00 00 67 80 45 78   |g......\.w..g.Ex|
0x804e058:   28 93 29 2d 06 00 00 00  05 00 00 00 04 00 07 00   |(.)-............|
0x804e068:   b8 00 00 00 09 00 00 00  01 00 00 00 14 b8 e3 ca   |................|
0x804e078:   b8 b3 fa 00 01 00 00 00  06 00 00 00 fa ff ff ff   |................|
0x804e088:   ff 01 d9 ??                                        |...?            |
