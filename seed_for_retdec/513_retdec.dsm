;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:35:50
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 30 da ff ff               	lea eax, [ebx - 0x25d0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 d0 d9 ff ff               	lea eax, [ebx - 0x2630]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 15 a6 04 08               	mov eax, 0x804a615
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 7c d0 04 08                  	mov eax, 0x804d07c
0x80483a5:   3d 7c d0 04 08                  	cmp eax, 0x804d07c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 7c d0 04 08                  	push 0x804d07c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 7c d0 04 08                  	mov eax, 0x804d07c
0x80483e5:   2d 7c d0 04 08                  	sub eax, 0x804d07c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 7c d0 04 08                  	push 0x804d07c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 6b 25 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 57 25 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 50 da ff ff               	lea edx, [eax - 0x25b0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 2a 25 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 0c 25 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 e4 24 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 ba 24 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 91 24 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 4e 24 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 0c 24 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 b4 23 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 63 23 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 26 23 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 ef 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 d0 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 a6 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 7a 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 4f 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 06 22 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 be 21 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 64 21 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 11 21 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 d2 20 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 9c 20 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 7a 20 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 2c 20 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 f0 1f 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 67 1f 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 35 1f 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 05 1f 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 c0 1e 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 81 1e 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 4f 1e 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 20 1e 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 02 1e 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 da 1d 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 b5 1d 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 90 1d 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 59 1d 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 24 1d 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 d2 1c 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 87 1c 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 50 1c 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 1f 1c 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 00 1c 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 d6 1b 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 ae 1b 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 85 1b 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 49 1b 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 0e 1b 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 bb 1a 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 6f 1a 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 37 1a 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 08 1a 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 f4 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 dd 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 c8 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 b2 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 8b 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 66 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 27 19 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 ee 18 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 c2 18 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 9c 18 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 40 db ff ff               	fld dword ptr [eax - 0x24c0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 40 db ff ff               	fld dword ptr [eax - 0x24c0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 44 db ff ff               	fld dword ptr [eax - 0x24bc]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 5a 18 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 40 db ff ff               	fld dword ptr [eax - 0x24c0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 40 db ff ff               	fld dword ptr [eax - 0x24c0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 44 db ff ff               	fld dword ptr [eax - 0x24bc]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 18 18 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 48 db ff ff               	fld dword ptr [eax - 0x24b8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 4c db ff ff               	fld dword ptr [eax - 0x24b4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 50 db ff ff               	fld dword ptr [eax - 0x24b0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 d6 17 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 54 db ff ff               	fld dword ptr [eax - 0x24ac]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 58 db ff ff               	fld dword ptr [eax - 0x24a8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 5c db ff ff               	fld dword ptr [eax - 0x24a4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 5e 17 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 60 db ff ff               	fld qword ptr [eax - 0x24a0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 60 db ff ff               	fld qword ptr [eax - 0x24a0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 68 db ff ff               	fld qword ptr [eax - 0x2498]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 01 17 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 60 db ff ff               	fld qword ptr [eax - 0x24a0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 60 db ff ff               	fld qword ptr [eax - 0x24a0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 68 db ff ff               	fld qword ptr [eax - 0x2498]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 a4 16 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 70 db ff ff               	fld qword ptr [eax - 0x2490]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 78 db ff ff               	fld qword ptr [eax - 0x2488]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 80 db ff ff               	fld qword ptr [eax - 0x2480]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 47 16 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 88 db ff ff               	fld qword ptr [eax - 0x2478]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 90 db ff ff               	fld qword ptr [eax - 0x2470]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 98 db ff ff               	fld qword ptr [eax - 0x2468]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 b7 15 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a0 db ff ff               	fld dword ptr [eax - 0x2460]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 a4 db ff ff               	fld dword ptr [eax - 0x245c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 53 15 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 e2 14 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 9f 14 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 60 da ff ff               	lea eax, [ebx - 0x25a0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 84 da ff ff               	lea eax, [ebx - 0x257c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497c4
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 44                        	sub esp, 0x44
0x804962f:   e8 95 13 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x804963c:   8b 4d 2c                        	mov ecx, dword ptr [ebp + 0x2c]
0x804963f:   8b 5d 38                        	mov ebx, dword ptr [ebp + 0x38]
0x8049642:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049645:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x8049648:   89 75 c4                        	mov dword ptr [ebp - 0x3c], esi
0x804964b:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x804964e:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049651:   8b 75 54                        	mov esi, dword ptr [ebp + 0x54]
0x8049654:   89 75 bc                        	mov dword ptr [ebp - 0x44], esi
0x8049657:   8b 75 58                        	mov esi, dword ptr [ebp + 0x58]
0x804965a:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804965d:   8b 75 5c                        	mov esi, dword ptr [ebp + 0x5c]
0x8049660:   89 75 b4                        	mov dword ptr [ebp - 0x4c], esi
0x8049663:   8b 75 64                        	mov esi, dword ptr [ebp + 0x64]
0x8049666:   89 75 b0                        	mov dword ptr [ebp - 0x50], esi
0x8049669:   8b 75 6c                        	mov esi, dword ptr [ebp + 0x6c]
0x804966c:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x804966f:   89 ca                           	mov edx, ecx
0x8049671:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049674:   89 da                           	mov edx, ebx
0x8049676:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804967a:   89 fa                           	mov edx, edi
0x804967c:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049680:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x8049684:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x8049687:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x804968b:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804968f:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x8049693:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x8049697:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x804969b:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x804969e:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x80496a2:   66 89 55 d0                     	mov word ptr [ebp - 0x30], dx
0x80496a6:   0f b6 55 b0                     	movzx edx, byte ptr [ebp - 0x50]
0x80496aa:   88 55 cc                        	mov byte ptr [ebp - 0x34], dl
0x80496ad:   89 f2                           	mov edx, esi
0x80496af:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x80496b3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496b6:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496bc:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496bf:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x80496c5:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496c8:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496ce:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496d1:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496d7:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496da:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496e0:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496e3:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496e9:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496ec:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496f2:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496f6:   88 90 3c 00 00 00               	mov byte ptr [eax + 0x3c], dl
0x80496fc:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x80496ff:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049705:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x8049709:   88 90 44 00 00 00               	mov byte ptr [eax + 0x44], dl
0x804970f:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x8049712:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049718:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x804971b:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049721:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049725:   66 89 90 50 00 00 00            	mov word ptr [eax + 0x50], dx
0x804972c:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x804972f:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x8049735:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049739:   66 89 90 52 00 00 00            	mov word ptr [eax + 0x52], dx
0x8049740:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049743:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049749:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x804974c:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049752:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049756:   88 90 5c 00 00 00               	mov byte ptr [eax + 0x5c], dl
0x804975c:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049760:   66 89 90 5e 00 00 00            	mov word ptr [eax + 0x5e], dx
0x8049767:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804976b:   66 89 90 60 00 00 00            	mov word ptr [eax + 0x60], dx
0x8049772:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049776:   88 90 62 00 00 00               	mov byte ptr [eax + 0x62], dl
0x804977c:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x8049780:   66 89 90 64 00 00 00            	mov word ptr [eax + 0x64], dx
0x8049787:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x804978a:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x8049790:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049794:   88 90 6c 00 00 00               	mov byte ptr [eax + 0x6c], dl
0x804979a:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x804979d:   89 90 70 00 00 00               	mov dword ptr [eax + 0x70], edx
0x80497a3:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80497a7:   66 89 90 74 00 00 00            	mov word ptr [eax + 0x74], dx
0x80497ae:   8b 55 70                        	mov edx, dword ptr [ebp + 0x70]
0x80497b1:   89 90 78 00 00 00               	mov dword ptr [eax + 0x78], edx
0x80497b7:   b8 00 00 00 00                  	mov eax, 0
0x80497bc:   83 c4 44                        	add esp, 0x44
0x80497bf:   5b                              	pop ebx
0x80497c0:   5e                              	pop esi
0x80497c1:   5f                              	pop edi
0x80497c2:   5d                              	pop ebp
0x80497c3:   c3                              	ret 
; function: func_1 at 0x80497c4 -- 0x804a615
0x80497c4:   55                              	push ebp
0x80497c5:   89 e5                           	mov ebp, esp
0x80497c7:   57                              	push edi
0x80497c8:   56                              	push esi
0x80497c9:   53                              	push ebx
0x80497ca:   81 ec 34 01 00 00               	sub esp, 0x134
0x80497d0:   e8 f4 11 00 00                  	call 0x804a9c9 <__x86.get_pc_thunk.ax>
0x80497d5:   05 2b 38 00 00                  	add eax, 0x382b
0x80497da:   c7 45 f0 09 00 00 00            	mov dword ptr [ebp - 0x10], 9
0x80497e1:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80497e8:   c7 45 e8 02 00 00 00            	mov dword ptr [ebp - 0x18], 2
0x80497ef:   c7 45 e4 03 00 00 00            	mov dword ptr [ebp - 0x1c], 3
0x80497f6:   c7 45 e0 75 dc 2e 4d            	mov dword ptr [ebp - 0x20], 0x4d2edc75
0x80497fd:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x8049804:   c7 45 d8 f6 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff6
0x804980b:   c6 45 d7 fe                     	mov byte ptr [ebp - 0x29], 0xfe
0x804980f:   c7 45 d0 b7 a8 3f 60            	mov dword ptr [ebp - 0x30], 0x603fa8b7
0x8049816:   c6 45 cf 57                     	mov byte ptr [ebp - 0x31], 0x57
0x804981a:   c7 45 c8 ec 2f 6f d8            	mov dword ptr [ebp - 0x38], 0xd86f2fec
0x8049821:   c7 85 78 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x88], 8
0x804982b:   66 c7 45 c6 ff ff               	mov word ptr [ebp - 0x3a], 0xffff
0x8049831:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x8049838:   66 c7 45 be ff ff               	mov word ptr [ebp - 0x42], 0xffff
0x804983e:   c7 45 b8 06 00 00 00            	mov dword ptr [ebp - 0x48], 6
0x8049845:   c7 45 b4 fa ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffa
0x804984c:   c6 45 b3 01                     	mov byte ptr [ebp - 0x4d], 1
0x8049850:   66 c7 45 b0 f8 ff               	mov word ptr [ebp - 0x50], 0xfff8
0x8049856:   66 c7 45 ae 01 00               	mov word ptr [ebp - 0x52], 1
0x804985c:   c6 85 77 ff ff ff 68            	mov byte ptr [ebp - 0x89], 0x68
0x8049863:   66 c7 85 74 ff ff ff ff ff      	mov word ptr [ebp - 0x8c], 0xffff
0x804986c:   c7 45 a8 1b 06 a3 d9            	mov dword ptr [ebp - 0x58], 0xd9a3061b
0x8049873:   c6 85 73 ff ff ff 4d            	mov byte ptr [ebp - 0x8d], 0x4d
0x804987a:   c7 85 6c ff ff ff 30 ea ea b1   	mov dword ptr [ebp - 0x94], 0xb1eaea30
0x8049884:   66 c7 45 a6 f9 ff               	mov word ptr [ebp - 0x5a], 0xfff9
0x804988a:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x8049891:   66 c7 45 9e 01 00               	mov word ptr [ebp - 0x62], 1
0x8049897:   c7 45 98 bf 80 e2 b7            	mov dword ptr [ebp - 0x68], 0xb7e280bf
0x804989e:   c7 45 94 fb ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffffb
0x80498a5:   c6 85 df fe ff ff ff            	mov byte ptr [ebp - 0x121], 0xff
0x80498ac:   c7 85 68 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x98], 2
0x80498b6:   c7 85 64 ff ff ff 19 91 15 c7   	mov dword ptr [ebp - 0x9c], 0xc7159119
0x80498c0:   c7 85 60 ff ff ff 49 c9 c1 6d   	mov dword ptr [ebp - 0xa0], 0x6dc1c949
0x80498ca:   c7 45 e8 fe ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffe
0x80498d1:   e9 6e 0c 00 00                  	jmp 0x804a544 <func_1+0xd80>
0x80498d6:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x80498e0:   c7 45 90 71 57 3f 2d            	mov dword ptr [ebp - 0x70], 0x2d3f5771
0x80498e7:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x80498ee:   c7 85 58 ff ff ff 73 8a f8 b7   	mov dword ptr [ebp - 0xa8], 0xb7f88a73
0x80498f8:   c6 85 57 ff ff ff e4            	mov byte ptr [ebp - 0xa9], 0xe4
0x80498ff:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x8049906:   e9 43 0b 00 00                  	jmp 0x804a44e <func_1+0xc8a>
0x804990b:   66 c7 85 54 ff ff ff 06 4b      	mov word ptr [ebp - 0xac], 0x4b06
0x8049914:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x804991e:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049925:   c7 85 4c ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xb4], 0xfffffff9
0x804992f:   c7 85 48 ff ff ff b4 dc 3c 1c   	mov dword ptr [ebp - 0xb8], 0x1c3cdcb4
0x8049939:   c7 85 44 ff ff ff 7e 0b d8 c4   	mov dword ptr [ebp - 0xbc], 0xc4d80b7e
0x8049943:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804994a:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049950:   0f be d0                        	movsx edx, al
0x8049953:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049956:   83 e0 03                        	and eax, 3
0x8049959:   66 85 c0                        	test ax, ax
0x804995c:   74 0e                           	je 0x804996c <func_1+0x1a8>
0x804995e:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x8049963:   74 07                           	je 0x804996c <func_1+0x1a8>
0x8049965:   b8 01 00 00 00                  	mov eax, 1
0x804996a:   eb 05                           	jmp 0x8049971 <func_1+0x1ad>
0x804996c:   b8 00 00 00 00                  	mov eax, 0
0x8049971:   89 c1                           	mov ecx, eax
0x8049973:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049979:   09 c8                           	or eax, ecx
0x804997b:   0f be c0                        	movsx eax, al
0x804997e:   89 c1                           	mov ecx, eax
0x8049980:   d3 e2                           	shl edx, cl
0x8049982:   89 d0                           	mov eax, edx
0x8049984:   0f b7 d0                        	movzx edx, ax
0x8049987:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804998a:   0f b7 c0                        	movzx eax, ax
0x804998d:   89 c1                           	mov ecx, eax
0x804998f:   d3 fa                           	sar edx, cl
0x8049991:   89 d0                           	mov eax, edx
0x8049993:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049996:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049999:   25 57 56 f4 2c                  	and eax, 0x2cf45657
0x804999e:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x80499a4:   0f 96 c0                        	setbe al
0x80499a7:   0f b6 c0                        	movzx eax, al
0x80499aa:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x80499ad:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x80499b4:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x80499bb:   0f bf 9d 54 ff ff ff            	movsx ebx, word ptr [ebp - 0xac]
0x80499c2:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x80499c9:   0f be f8                        	movsx edi, al
0x80499cc:   b8 33 00 00 00                  	mov eax, 0x33
0x80499d1:   99                              	cdq 
0x80499d2:   f7 ff                           	idiv edi
0x80499d4:   39 c3                           	cmp ebx, eax
0x80499d6:   0f 9c c0                        	setl al
0x80499d9:   0f b6 d0                        	movzx edx, al
0x80499dc:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x80499e0:   39 c2                           	cmp edx, eax
0x80499e2:   0f 9d c0                        	setge al
0x80499e5:   0f b6 c0                        	movzx eax, al
0x80499e8:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x80499ee:   74 07                           	je 0x80499f7 <func_1+0x233>
0x80499f0:   b8 00 10 00 00                  	mov eax, 0x1000
0x80499f5:   eb 05                           	jmp 0x80499fc <func_1+0x238>
0x80499f7:   b8 00 00 00 00                  	mov eax, 0
0x80499fc:   0f af c1                        	imul eax, ecx
0x80499ff:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x8049a05:   0f 96 c0                        	setbe al
0x8049a08:   0f b6 c0                        	movzx eax, al
0x8049a0b:   0f bf d0                        	movsx edx, ax
0x8049a0e:   0f bf 85 54 ff ff ff            	movsx eax, word ptr [ebp - 0xac]
0x8049a15:   89 c1                           	mov ecx, eax
0x8049a17:   d3 e2                           	shl edx, cl
0x8049a19:   89 d0                           	mov eax, edx
0x8049a1b:   20 45 d7                        	and byte ptr [ebp - 0x29], al
0x8049a1e:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x8049a25:   0f b6 d0                        	movzx edx, al
0x8049a28:   89 d0                           	mov eax, edx
0x8049a2a:   01 c0                           	add eax, eax
0x8049a2c:   01 d0                           	add eax, edx
0x8049a2e:   01 c0                           	add eax, eax
0x8049a30:   85 c0                           	test eax, eax
0x8049a32:   0f 84 cf 06 00 00               	je 0x804a107 <func_1+0x943>
0x8049a38:   c7 45 80 04 00 00 00            	mov dword ptr [ebp - 0x80], 4
0x8049a3f:   c7 85 18 ff ff ff fb 8c 6e 11   	mov dword ptr [ebp - 0xe8], 0x116e8cfb
0x8049a49:   c7 85 14 ff ff ff 85 72 40 07   	mov dword ptr [ebp - 0xec], 0x7407285
0x8049a53:   c7 85 10 ff ff ff 2e 85 26 40   	mov dword ptr [ebp - 0xf0], 0x4026852e
0x8049a5d:   66 c7 85 0e ff ff ff 85 97      	mov word ptr [ebp - 0xf2], 0x9785
0x8049a66:   66 c7 85 0c ff ff ff fd 0f      	mov word ptr [ebp - 0xf4], 0xffd
0x8049a6f:   81 65 d8 94 f0 0b 60            	and dword ptr [ebp - 0x28], 0x600bf094
0x8049a76:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049a7a:   75 4a                           	jne 0x8049ac6 <func_1+0x302>
0x8049a7c:   0f b7 55 9e                     	movzx edx, word ptr [ebp - 0x62]
0x8049a80:   83 65 d0 f9                     	and dword ptr [ebp - 0x30], 0xfffffff9
0x8049a84:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049a88:   75 21                           	jne 0x8049aab <func_1+0x2e7>
0x8049a8a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049a8d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049a90:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049a93:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049a96:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049a99:   0f b6 c0                        	movzx eax, al
0x8049a9c:   f7 d8                           	neg eax
0x8049a9e:   89 c1                           	mov ecx, eax
0x8049aa0:   0f bf 85 54 ff ff ff            	movsx eax, word ptr [ebp - 0xac]
0x8049aa7:   39 c1                           	cmp ecx, eax
0x8049aa9:   7c 07                           	jl 0x8049ab2 <func_1+0x2ee>
0x8049aab:   b8 01 00 00 00                  	mov eax, 1
0x8049ab0:   eb 05                           	jmp 0x8049ab7 <func_1+0x2f3>
0x8049ab2:   b8 00 00 00 00                  	mov eax, 0
0x8049ab7:   39 d0                           	cmp eax, edx
0x8049ab9:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049abc:   0f be c0                        	movsx eax, al
0x8049abf:   c1 e0 03                        	shl eax, 3
0x8049ac2:   85 c0                           	test eax, eax
0x8049ac4:   74 07                           	je 0x8049acd <func_1+0x309>
0x8049ac6:   b8 01 00 00 00                  	mov eax, 1
0x8049acb:   eb 05                           	jmp 0x8049ad2 <func_1+0x30e>
0x8049acd:   b8 00 00 00 00                  	mov eax, 0
0x8049ad2:   0f b6 d0                        	movzx edx, al
0x8049ad5:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049ad9:   0f b6 c0                        	movzx eax, al
0x8049adc:   0f af c2                        	imul eax, edx
0x8049adf:   85 c0                           	test eax, eax
0x8049ae1:   0f 84 ab 00 00 00               	je 0x8049b92 <func_1+0x3ce>
0x8049ae7:   66 c7 85 fe fe ff ff 03 00      	mov word ptr [ebp - 0x102], 3
0x8049af0:   66 c7 45 9e 1a 00               	mov word ptr [ebp - 0x62], 0x1a
0x8049af6:   e9 87 00 00 00                  	jmp 0x8049b82 <func_1+0x3be>
0x8049afb:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x8049b02:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049b05:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049b08:   0f be c0                        	movsx eax, al
0x8049b0b:   83 e8 0d                        	sub eax, 0xd
0x8049b0e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049b11:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049b14:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x8049b17:   0f 95 c0                        	setne al
0x8049b1a:   0f b6 d0                        	movzx edx, al
0x8049b1d:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049b21:   0f b6 c0                        	movzx eax, al
0x8049b24:   89 c1                           	mov ecx, eax
0x8049b26:   d3 fa                           	sar edx, cl
0x8049b28:   89 d0                           	mov eax, edx
0x8049b2a:   85 c0                           	test eax, eax
0x8049b2c:   75 09                           	jne 0x8049b37 <func_1+0x373>
0x8049b2e:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049b35:   74 07                           	je 0x8049b3e <func_1+0x37a>
0x8049b37:   b8 01 00 00 00                  	mov eax, 1
0x8049b3c:   eb 05                           	jmp 0x8049b43 <func_1+0x37f>
0x8049b3e:   b8 00 00 00 00                  	mov eax, 0
0x8049b43:   0f be c0                        	movsx eax, al
0x8049b46:   c1 e0 04                        	shl eax, 4
0x8049b49:   89 c2                           	mov edx, eax
0x8049b4b:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x8049b52:   09 d0                           	or eax, edx
0x8049b54:   83 e8 50                        	sub eax, 0x50
0x8049b57:   0f be d0                        	movsx edx, al
0x8049b5a:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049b60:   0f be c0                        	movsx eax, al
0x8049b63:   89 c1                           	mov ecx, eax
0x8049b65:   d3 e2                           	shl edx, cl
0x8049b67:   89 d0                           	mov eax, edx
0x8049b69:   3d cd 00 00 00                  	cmp eax, 0xcd
0x8049b6e:   0f 9e c0                        	setle al
0x8049b71:   0f b6 c0                        	movzx eax, al
0x8049b74:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049b77:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049b7b:   83 c0 01                        	add eax, 1
0x8049b7e:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x8049b82:   66 83 7d 9e 24                  	cmp word ptr [ebp - 0x62], 0x24
0x8049b87:   0f 84 6e ff ff ff               	je 0x8049afb <func_1+0x337>
0x8049b8d:   e9 fb 02 00 00                  	jmp 0x8049e8d <func_1+0x6c9>
0x8049b92:   66 c7 85 0a ff ff ff cf 1f      	mov word ptr [ebp - 0xf6], 0x1fcf
0x8049b9b:   c7 85 04 ff ff ff 76 cc de 07   	mov dword ptr [ebp - 0xfc], 0x7decc76
0x8049ba5:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ba8:   89 c2                           	mov edx, eax
0x8049baa:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049bae:   09 d0                           	or eax, edx
0x8049bb0:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x8049bb3:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049bb7:   8d 58 08                        	lea ebx, [eax + 8]
0x8049bba:   8b 4d ec                        	mov ecx, dword ptr [ebp - 0x14]
0x8049bbd:   ba 1f 99 f0 24                  	mov edx, 0x24f0991f
0x8049bc2:   89 c8                           	mov eax, ecx
0x8049bc4:   f7 ea                           	imul edx
0x8049bc6:   89 d0                           	mov eax, edx
0x8049bc8:   c1 f8 1c                        	sar eax, 0x1c
0x8049bcb:   c1 f9 1f                        	sar ecx, 0x1f
0x8049bce:   89 ca                           	mov edx, ecx
0x8049bd0:   29 c2                           	sub edx, eax
0x8049bd2:   89 d0                           	mov eax, edx
0x8049bd4:   39 c3                           	cmp ebx, eax
0x8049bd6:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049bdc:   3b 45 80                        	cmp eax, dword ptr [ebp - 0x80]
0x8049bdf:   0f 9d c0                        	setge al
0x8049be2:   0f b6 c0                        	movzx eax, al
0x8049be5:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049be8:   0f 96 c0                        	setbe al
0x8049beb:   0f b6 c0                        	movzx eax, al
0x8049bee:   09 85 18 ff ff ff               	or dword ptr [ebp - 0xe8], eax
0x8049bf4:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049bfa:   89 c2                           	mov edx, eax
0x8049bfc:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049c02:   01 d0                           	add eax, edx
0x8049c04:   98                              	cwde 
0x8049c05:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8049c08:   0f bf fa                        	movsx edi, dx
0x8049c0b:   99                              	cdq 
0x8049c0c:   f7 ff                           	idiv edi
0x8049c0e:   85 c0                           	test eax, eax
0x8049c10:   74 0d                           	je 0x8049c1f <func_1+0x45b>
0x8049c12:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x8049c16:   74 07                           	je 0x8049c1f <func_1+0x45b>
0x8049c18:   b8 01 00 00 00                  	mov eax, 1
0x8049c1d:   eb 05                           	jmp 0x8049c24 <func_1+0x460>
0x8049c1f:   b8 00 00 00 00                  	mov eax, 0
0x8049c24:   83 f8 1d                        	cmp eax, 0x1d
0x8049c27:   0f 94 c0                        	sete al
0x8049c2a:   0f b6 c0                        	movzx eax, al
0x8049c2d:   8b 95 5c ff ff ff               	mov edx, dword ptr [ebp - 0xa4]
0x8049c33:   09 d0                           	or eax, edx
0x8049c35:   66 c1 e8 0b                     	shr ax, 0xb
0x8049c39:   66 85 c0                        	test ax, ax
0x8049c3c:   74 18                           	je 0x8049c56 <func_1+0x492>
0x8049c3e:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049c41:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049c44:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049c48:   0f 85 0c 08 00 00               	jne 0x804a45a <func_1+0xc96>
0x8049c4e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c51:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049c54:   eb 7b                           	jmp 0x8049cd1 <func_1+0x50d>
0x8049c56:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049c5c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c5f:   66 83 45 c6 01                  	add word ptr [ebp - 0x3a], 1
0x8049c64:   0f bf 95 0a ff ff ff            	movsx edx, word ptr [ebp - 0xf6]
0x8049c6b:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049c6e:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049c71:   0f 94 c0                        	sete al
0x8049c74:   0f b6 c0                        	movzx eax, al
0x8049c77:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c7a:   0f 9f c0                        	setg al
0x8049c7d:   0f b6 c0                        	movzx eax, al
0x8049c80:   39 c2                           	cmp edx, eax
0x8049c82:   7d 06                           	jge 0x8049c8a <func_1+0x4c6>
0x8049c84:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x8049c88:   74 07                           	je 0x8049c91 <func_1+0x4cd>
0x8049c8a:   b8 01 00 00 00                  	mov eax, 1
0x8049c8f:   eb 05                           	jmp 0x8049c96 <func_1+0x4d2>
0x8049c91:   b8 00 00 00 00                  	mov eax, 0
0x8049c96:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x8049c99:   c6 45 cf d7                     	mov byte ptr [ebp - 0x31], 0xd7
0x8049c9d:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049ca1:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x8049ca4:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x8049caa:   0f 95 c0                        	setne al
0x8049cad:   0f b6 d0                        	movzx edx, al
0x8049cb0:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x8049cb7:   0f b7 c0                        	movzx eax, ax
0x8049cba:   0f af c2                        	imul eax, edx
0x8049cbd:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049cc0:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049cc3:   0f be c8                        	movsx ecx, al
0x8049cc6:   b8 01 00 00 00                  	mov eax, 1
0x8049ccb:   99                              	cdq 
0x8049ccc:   f7 f9                           	idiv ecx
0x8049cce:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x8049cd1:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049cd5:   0f 85 82 07 00 00               	jne 0x804a45d <func_1+0xc99>
0x8049cdb:   80 45 cf 01                     	add byte ptr [ebp - 0x31], 1
0x8049cdf:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x8049ce6:   74 07                           	je 0x8049cef <func_1+0x52b>
0x8049ce8:   b8 01 00 00 00                  	mov eax, 1
0x8049ced:   eb 05                           	jmp 0x8049cf4 <func_1+0x530>
0x8049cef:   b8 00 00 00 00                  	mov eax, 0
0x8049cf4:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x8049cf7:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049cfa:   0f 96 c0                        	setbe al
0x8049cfd:   0f b6 c0                        	movzx eax, al
0x8049d00:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049d03:   0f 93 c0                        	setae al
0x8049d06:   0f b6 c0                        	movzx eax, al
0x8049d09:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049d0c:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d0f:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049d12:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049d16:   75 04                           	jne 0x8049d1c <func_1+0x558>
0x8049d18:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x8049d1c:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049d1f:   89 c2                           	mov edx, eax
0x8049d21:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049d25:   31 d0                           	xor eax, edx
0x8049d27:   0f b7 d0                        	movzx edx, ax
0x8049d2a:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049d2e:   89 c1                           	mov ecx, eax
0x8049d30:   d3 fa                           	sar edx, cl
0x8049d32:   89 d0                           	mov eax, edx
0x8049d34:   85 c0                           	test eax, eax
0x8049d36:   0f 84 be 00 00 00               	je 0x8049dfa <func_1+0x636>
0x8049d3c:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049d40:   0f be 8d 73 ff ff ff            	movsx ecx, byte ptr [ebp - 0x8d]
0x8049d47:   0f bf bd 74 ff ff ff            	movsx edi, word ptr [ebp - 0x8c]
0x8049d4e:   0f be b5 77 ff ff ff            	movsx esi, byte ptr [ebp - 0x89]
0x8049d55:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x8049d5b:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x8049d5f:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049d65:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x8049d69:   89 95 c8 fe ff ff               	mov dword ptr [ebp - 0x138], edx
0x8049d6f:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x8049d73:   89 b5 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], esi
0x8049d79:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x8049d7d:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x8049d83:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x8049d87:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x8049d8b:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049d8f:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049d92:   50                              	push eax
0x8049d93:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049d99:   51                              	push ecx
0x8049d9a:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049d9d:   57                              	push edi
0x8049d9e:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049da4:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049daa:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049db0:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049db6:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049db9:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049dbc:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049dc2:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049dc5:   56                              	push esi
0x8049dc6:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049dcc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049dcf:   53                              	push ebx
0x8049dd0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049dd3:   52                              	push edx
0x8049dd4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049dd7:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049dda:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ddd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049de0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049de3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049de6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049de9:   e8 38 f8 ff ff                  	call 0x8049626 <set_var>
0x8049dee:   83 c4 6c                        	add esp, 0x6c
0x8049df1:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049df5:   e9 13 08 00 00                  	jmp 0x804a60d <func_1+0xe49>
0x8049dfa:   c7 85 00 ff ff ff 1f 47 56 53   	mov dword ptr [ebp - 0x100], 0x5356471f
0x8049e04:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049e08:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e0b:   83 7d 88 01                     	cmp dword ptr [ebp - 0x78], 1
0x8049e0f:   0f 9e c0                        	setle al
0x8049e12:   0f b6 c0                        	movzx eax, al
0x8049e15:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049e18:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049e1e:   33 45 b8                        	xor eax, dword ptr [ebp - 0x48]
0x8049e21:   89 c2                           	mov edx, eax
0x8049e23:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e26:   01 c2                           	add edx, eax
0x8049e28:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e2b:   39 c2                           	cmp edx, eax
0x8049e2d:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049e30:   09 85 18 ff ff ff               	or dword ptr [ebp - 0xe8], eax
0x8049e36:   c7 45 c8 01 00 00 00            	mov dword ptr [ebp - 0x38], 1
0x8049e3d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e40:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x8049e43:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049e47:   74 0d                           	je 0x8049e56 <func_1+0x692>
0x8049e49:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049e4d:   74 07                           	je 0x8049e56 <func_1+0x692>
0x8049e4f:   b8 01 00 00 00                  	mov eax, 1
0x8049e54:   eb 05                           	jmp 0x8049e5b <func_1+0x697>
0x8049e56:   b8 00 00 00 00                  	mov eax, 0
0x8049e5b:   3d e6 bd cd 46                  	cmp eax, 0x46cdbde6
0x8049e60:   74 0a                           	je 0x8049e6c <func_1+0x6a8>
0x8049e62:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049e66:   75 04                           	jne 0x8049e6c <func_1+0x6a8>
0x8049e68:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x8049e6c:   90                              	nop 
0x8049e6d:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049e73:   3d f7 ff 00 00                  	cmp eax, 0xfff7
0x8049e78:   0f 97 c0                        	seta al
0x8049e7b:   0f b6 c0                        	movzx eax, al
0x8049e7e:   09 85 18 ff ff ff               	or dword ptr [ebp - 0xe8], eax
0x8049e84:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049e8a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e8d:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049e91:   74 05                           	je 0x8049e98 <func_1+0x6d4>
0x8049e93:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x8049e98:   83 75 f0 08                     	xor dword ptr [ebp - 0x10], 8
0x8049e9c:   c7 45 90 8c 00 00 00            	mov dword ptr [ebp - 0x70], 0x8c
0x8049ea3:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049ea7:   74 07                           	je 0x8049eb0 <func_1+0x6ec>
0x8049ea9:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049eb0:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049eb3:   0b 85 5c ff ff ff               	or eax, dword ptr [ebp - 0xa4]
0x8049eb9:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x8049ebf:   0f 83 43 01 00 00               	jae 0x804a008 <func_1+0x844>
0x8049ec5:   66 c7 85 ee fe ff ff f7 ff      	mov word ptr [ebp - 0x112], 0xfff7
0x8049ece:   c7 85 e8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x118], 7
0x8049ed8:   c7 85 e4 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x11c], 5
0x8049ee2:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x8049eec:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049ef2:   89 c2                           	mov edx, eax
0x8049ef4:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049ef8:   01 c2                           	add edx, eax
0x8049efa:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x8049f01:   0f b6 c0                        	movzx eax, al
0x8049f04:   bb 2a 00 00 00                  	mov ebx, 0x2a
0x8049f09:   89 c1                           	mov ecx, eax
0x8049f0b:   d3 fb                           	sar ebx, cl
0x8049f0d:   89 d8                           	mov eax, ebx
0x8049f0f:   3d 60 d9 00 00                  	cmp eax, 0xd960
0x8049f14:   0f 9f c0                        	setg al
0x8049f17:   0f b6 c8                        	movzx ecx, al
0x8049f1a:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f1d:   0f b7 c0                        	movzx eax, ax
0x8049f20:   01 c8                           	add eax, ecx
0x8049f22:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049f25:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049f28:   0f b7 c0                        	movzx eax, ax
0x8049f2b:   bb 05 00 00 00                  	mov ebx, 5
0x8049f30:   89 c1                           	mov ecx, eax
0x8049f32:   d3 fb                           	sar ebx, cl
0x8049f34:   89 d8                           	mov eax, ebx
0x8049f36:   89 c1                           	mov ecx, eax
0x8049f38:   89 d0                           	mov eax, edx
0x8049f3a:   ba 00 00 00 00                  	mov edx, 0
0x8049f3f:   66 f7 f1                        	div cx
0x8049f42:   89 d0                           	mov eax, edx
0x8049f44:   0f b7 c0                        	movzx eax, ax
0x8049f47:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049f4a:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049f50:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f53:   c7 45 80 fe ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffffe
0x8049f5a:   e9 8e 00 00 00                  	jmp 0x8049fed <func_1+0x829>
0x8049f5f:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049f62:   89 c1                           	mov ecx, eax
0x8049f64:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049f67:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x8049f6a:   0f be 55 b3                     	movsx edx, byte ptr [ebp - 0x4d]
0x8049f6e:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049f72:   39 c2                           	cmp edx, eax
0x8049f74:   0f 9f c0                        	setg al
0x8049f77:   0f b6 c0                        	movzx eax, al
0x8049f7a:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x8049f7e:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049f82:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049f86:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049f8a:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049f8d:   81 4d 8c 09 b2 ff ff            	or dword ptr [ebp - 0x74], 0xffffb209
0x8049f94:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f97:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049f9a:   0f 9e c0                        	setle al
0x8049f9d:   0f b6 c0                        	movzx eax, al
0x8049fa0:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049fa6:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049fac:   89 c2                           	mov edx, eax
0x8049fae:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049fb2:   09 d0                           	or eax, edx
0x8049fb4:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x8049fb8:   66 81 7d ae ac 1a               	cmp word ptr [ebp - 0x52], 0x1aac
0x8049fbe:   0f 97 c0                        	seta al
0x8049fc1:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x8049fc4:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049fc8:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049fcc:   39 c2                           	cmp edx, eax
0x8049fce:   0f 9e c0                        	setle al
0x8049fd1:   0f b6 c0                        	movzx eax, al
0x8049fd4:   89 c2                           	mov edx, eax
0x8049fd6:   89 c8                           	mov eax, ecx
0x8049fd8:   0f af c2                        	imul eax, edx
0x8049fdb:   0f b6 d0                        	movzx edx, al
0x8049fde:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049fe1:   0f b6 c0                        	movzx eax, al
0x8049fe4:   01 d0                           	add eax, edx
0x8049fe6:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fe9:   83 6d 80 05                     	sub dword ptr [ebp - 0x80], 5
0x8049fed:   83 7d 80 e5                     	cmp dword ptr [ebp - 0x80], -0x1b
0x8049ff1:   0f 84 68 ff ff ff               	je 0x8049f5f <func_1+0x79b>
0x8049ff7:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ffa:   0f b7 c0                        	movzx eax, ax
0x8049ffd:   c1 e0 0b                        	shl eax, 0xb
0x804a000:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a003:   e9 42 04 00 00                  	jmp 0x804a44a <func_1+0xc86>
0x804a008:   66 c7 85 fc fe ff ff 9d 3b      	mov word ptr [ebp - 0x104], 0x3b9d
0x804a011:   c7 85 f8 fe ff ff c2 38 dd 50   	mov dword ptr [ebp - 0x108], 0x50dd38c2
0x804a01b:   c7 85 f4 fe ff ff 2b ac 99 a1   	mov dword ptr [ebp - 0x10c], 0xa199ac2b
0x804a025:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x804a02f:   0f b7 85 fc fe ff ff            	movzx eax, word ptr [ebp - 0x104]
0x804a036:   83 e8 01                        	sub eax, 1
0x804a039:   66 89 85 fc fe ff ff            	mov word ptr [ebp - 0x104], ax
0x804a040:   83 85 f0 fe ff ff 01            	add dword ptr [ebp - 0x110], 1
0x804a047:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a04b:   0f be 8d 73 ff ff ff            	movsx ecx, byte ptr [ebp - 0x8d]
0x804a052:   0f bf bd 74 ff ff ff            	movsx edi, word ptr [ebp - 0x8c]
0x804a059:   0f be b5 77 ff ff ff            	movsx esi, byte ptr [ebp - 0x89]
0x804a060:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a066:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x804a06a:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a070:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x804a074:   89 95 c8 fe ff ff               	mov dword ptr [ebp - 0x138], edx
0x804a07a:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a07e:   89 b5 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], esi
0x804a084:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a088:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x804a08e:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a092:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a096:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a09a:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a09d:   50                              	push eax
0x804a09e:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a0a4:   51                              	push ecx
0x804a0a5:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a0a8:   57                              	push edi
0x804a0a9:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a0af:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a0b5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a0bb:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a0c1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a0c4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0c7:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a0cd:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a0d0:   56                              	push esi
0x804a0d1:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a0d7:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a0da:   53                              	push ebx
0x804a0db:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a0de:   52                              	push edx
0x804a0df:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0e2:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a0e5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0e8:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0eb:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a0ee:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0f1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a0f4:   e8 2d f5 ff ff                  	call 0x8049626 <set_var>
0x804a0f9:   83 c4 6c                        	add esp, 0x6c
0x804a0fc:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a102:   e9 06 05 00 00                  	jmp 0x804a60d <func_1+0xe49>
0x804a107:   66 c7 85 42 ff ff ff 01 00      	mov word ptr [ebp - 0xbe], 1
0x804a110:   c7 85 3c ff ff ff ca 39 9d 02   	mov dword ptr [ebp - 0xc4], 0x29d39ca
0x804a11a:   c6 85 7f ff ff ff 97            	mov byte ptr [ebp - 0x81], 0x97
0x804a121:   66 c7 85 3a ff ff ff 90 9f      	mov word ptr [ebp - 0xc6], 0x9f90
0x804a12a:   c7 85 34 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xcc], 0
0x804a134:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x804a13e:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804a145:   e9 43 02 00 00                  	jmp 0x804a38d <func_1+0xbc9>
0x804a14a:   c6 85 27 ff ff ff fd            	mov byte ptr [ebp - 0xd9], 0xfd
0x804a151:   c7 85 20 ff ff ff 78 9f 1f 4d   	mov dword ptr [ebp - 0xe0], 0x4d1f9f78
0x804a15b:   c7 45 d8 fa 4c b6 ac            	mov dword ptr [ebp - 0x28], 0xacb64cfa
0x804a162:   c6 85 27 ff ff ff fa            	mov byte ptr [ebp - 0xd9], 0xfa
0x804a169:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a16c:   8d 50 01                        	lea edx, [eax + 1]
0x804a16f:   89 55 a8                        	mov dword ptr [ebp - 0x58], edx
0x804a172:   8d 58 01                        	lea ebx, [eax + 1]
0x804a175:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x804a17c:   f7 d8                           	neg eax
0x804a17e:   0f b7 d0                        	movzx edx, ax
0x804a181:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a185:   89 c1                           	mov ecx, eax
0x804a187:   d3 fa                           	sar edx, cl
0x804a189:   89 d0                           	mov eax, edx
0x804a18b:   85 c0                           	test eax, eax
0x804a18d:   0f 94 c0                        	sete al
0x804a190:   0f b6 c0                        	movzx eax, al
0x804a193:   31 d8                           	xor eax, ebx
0x804a195:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a198:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a19c:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a19f:   0f 84 d8 00 00 00               	je 0x804a27d <func_1+0xab9>
0x804a1a5:   83 85 6c ff ff ff 01            	add dword ptr [ebp - 0x94], 1
0x804a1ac:   c7 45 e0 45 0d 26 0b            	mov dword ptr [ebp - 0x20], 0xb260d45
0x804a1b3:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804a1ba:   88 85 df fe ff ff               	mov byte ptr [ebp - 0x121], al
0x804a1c0:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a1c4:   0f be 8d 73 ff ff ff            	movsx ecx, byte ptr [ebp - 0x8d]
0x804a1cb:   0f bf bd 74 ff ff ff            	movsx edi, word ptr [ebp - 0x8c]
0x804a1d2:   0f be b5 77 ff ff ff            	movsx esi, byte ptr [ebp - 0x89]
0x804a1d9:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a1df:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x804a1e3:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a1e9:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x804a1ed:   89 95 c8 fe ff ff               	mov dword ptr [ebp - 0x138], edx
0x804a1f3:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a1f7:   89 b5 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], esi
0x804a1fd:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a201:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x804a207:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a20b:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a20f:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a213:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a216:   50                              	push eax
0x804a217:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a21d:   51                              	push ecx
0x804a21e:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a221:   57                              	push edi
0x804a222:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a228:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a22e:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a234:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a23a:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a23d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a240:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a246:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a249:   56                              	push esi
0x804a24a:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a250:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a253:   53                              	push ebx
0x804a254:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a257:   52                              	push edx
0x804a258:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a25b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a25e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a261:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a264:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a267:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a26a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a26d:   e8 b4 f3 ff ff                  	call 0x8049626 <set_var>
0x804a272:   83 c4 6c                        	add esp, 0x6c
0x804a275:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a278:   e9 90 03 00 00                  	jmp 0x804a60d <func_1+0xe49>
0x804a27d:   66 c7 85 1e ff ff ff 00 00      	mov word ptr [ebp - 0xe2], 0
0x804a286:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a289:   89 c1                           	mov ecx, eax
0x804a28b:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a28f:   01 c0                           	add eax, eax
0x804a291:   25 8c 00 00 00                  	and eax, 0x8c
0x804a296:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a29c:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a2a2:   0f b6 d0                        	movzx edx, al
0x804a2a5:   89 d0                           	mov eax, edx
0x804a2a7:   c1 e0 03                        	shl eax, 3
0x804a2aa:   01 d0                           	add eax, edx
0x804a2ac:   01 c0                           	add eax, eax
0x804a2ae:   01 d0                           	add eax, edx
0x804a2b0:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x804a2b7:   01 d0                           	add eax, edx
0x804a2b9:   66 c1 e8 08                     	shr ax, 8
0x804a2bd:   89 c2                           	mov edx, eax
0x804a2bf:   c0 ea 02                        	shr dl, 2
0x804a2c2:   0f b6 c1                        	movzx eax, cl
0x804a2c5:   f6 f2                           	div dl
0x804a2c7:   0f b6 c4                        	movzx eax, ah
0x804a2ca:   0f b6 c0                        	movzx eax, al
0x804a2cd:   0f bf bd 1e ff ff ff            	movsx edi, word ptr [ebp - 0xe2]
0x804a2d4:   99                              	cdq 
0x804a2d5:   f7 ff                           	idiv edi
0x804a2d7:   0f be d0                        	movsx edx, al
0x804a2da:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a2de:   0f be c0                        	movsx eax, al
0x804a2e1:   01 d0                           	add eax, edx
0x804a2e3:   85 c0                           	test eax, eax
0x804a2e5:   74 07                           	je 0x804a2ee <func_1+0xb2a>
0x804a2e7:   b8 01 00 00 00                  	mov eax, 1
0x804a2ec:   eb 05                           	jmp 0x804a2f3 <func_1+0xb2f>
0x804a2ee:   b8 00 00 00 00                  	mov eax, 0
0x804a2f3:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a2f9:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a2ff:   89 c2                           	mov edx, eax
0x804a301:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a308:   31 d0                           	xor eax, edx
0x804a30a:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x804a310:   c7 45 ec 23 26 25 19            	mov dword ptr [ebp - 0x14], 0x19252623
0x804a317:   c6 45 cf 00                     	mov byte ptr [ebp - 0x31], 0
0x804a31b:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a322:   c7 45 88 c2 00 00 00            	mov dword ptr [ebp - 0x78], 0xc2
0x804a329:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a32c:   89 c2                           	mov edx, eax
0x804a32e:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a331:   31 d0                           	xor eax, edx
0x804a333:   89 c1                           	mov ecx, eax
0x804a335:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a339:   89 c2                           	mov edx, eax
0x804a33b:   0f b6 c1                        	movzx eax, cl
0x804a33e:   f6 f2                           	div dl
0x804a340:   0f b6 c4                        	movzx eax, ah
0x804a343:   0f b6 c0                        	movzx eax, al
0x804a346:   f7 d0                           	not eax
0x804a348:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a34b:   0f 95 c0                        	setne al
0x804a34e:   0f b6 d0                        	movzx edx, al
0x804a351:   0f b7 85 3a ff ff ff            	movzx eax, word ptr [ebp - 0xc6]
0x804a358:   39 c2                           	cmp edx, eax
0x804a35a:   0f 95 c0                        	setne al
0x804a35d:   0f b6 d0                        	movzx edx, al
0x804a360:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a363:   0f be c0                        	movsx eax, al
0x804a366:   89 c1                           	mov ecx, eax
0x804a368:   d3 e2                           	shl edx, cl
0x804a36a:   89 d0                           	mov eax, edx
0x804a36c:   85 c0                           	test eax, eax
0x804a36e:   74 07                           	je 0x804a377 <func_1+0xbb3>
0x804a370:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a377:   b8 01 00 00 00                  	mov eax, 1
0x804a37c:   30 45 d7                        	xor byte ptr [ebp - 0x29], al
0x804a37f:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a383:   c1 e0 04                        	shl eax, 4
0x804a386:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a389:   83 6d 84 01                     	sub dword ptr [ebp - 0x7c], 1
0x804a38d:   83 7d 84 fa                     	cmp dword ptr [ebp - 0x7c], -6
0x804a391:   0f 8d b3 fd ff ff               	jge 0x804a14a <func_1+0x986>
0x804a397:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a39b:   83 e8 01                        	sub eax, 1
0x804a39e:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x804a3a2:   c7 45 98 0f 00 00 00            	mov dword ptr [ebp - 0x68], 0xf
0x804a3a9:   e9 92 00 00 00                  	jmp 0x804a440 <func_1+0xc7c>
0x804a3ae:   c7 85 2c ff ff ff c0 e5 41 56   	mov dword ptr [ebp - 0xd4], 0x5641e5c0
0x804a3b8:   c7 85 28 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd8], 1
0x804a3c2:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x804a3c9:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a3cd:   8d 50 ff                        	lea edx, [eax - 1]
0x804a3d0:   88 55 cf                        	mov byte ptr [ebp - 0x31], dl
0x804a3d3:   0f b6 c0                        	movzx eax, al
0x804a3d6:   39 c1                           	cmp ecx, eax
0x804a3d8:   0f 94 c0                        	sete al
0x804a3db:   0f b6 c0                        	movzx eax, al
0x804a3de:   89 c1                           	mov ecx, eax
0x804a3e0:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a3e6:   35 7b 3d ec 05                  	xor eax, 0x5ec3d7b
0x804a3eb:   89 c2                           	mov edx, eax
0x804a3ed:   66 83 7d ae 04                  	cmp word ptr [ebp - 0x52], 4
0x804a3f2:   0f 94 c0                        	sete al
0x804a3f5:   0f b6 c0                        	movzx eax, al
0x804a3f8:   39 c2                           	cmp edx, eax
0x804a3fa:   0f 94 c0                        	sete al
0x804a3fd:   0f b6 c0                        	movzx eax, al
0x804a400:   89 c2                           	mov edx, eax
0x804a402:   89 c8                           	mov eax, ecx
0x804a404:   0f af c2                        	imul eax, edx
0x804a407:   3c 3d                           	cmp al, 0x3d
0x804a409:   74 07                           	je 0x804a412 <func_1+0xc4e>
0x804a40b:   b8 01 00 00 00                  	mov eax, 1
0x804a410:   eb 05                           	jmp 0x804a417 <func_1+0xc53>
0x804a412:   b8 00 00 00 00                  	mov eax, 0
0x804a417:   0f b7 d0                        	movzx edx, ax
0x804a41a:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a41d:   0f b7 c0                        	movzx eax, ax
0x804a420:   89 c1                           	mov ecx, eax
0x804a422:   d3 fa                           	sar edx, cl
0x804a424:   89 d0                           	mov eax, edx
0x804a426:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a42c:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a432:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a435:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a43c:   83 6d 98 04                     	sub dword ptr [ebp - 0x68], 4
0x804a440:   83 7d 98 f7                     	cmp dword ptr [ebp - 0x68], -9
0x804a444:   0f 85 64 ff ff ff               	jne 0x804a3ae <func_1+0xbea>
0x804a44a:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x804a44e:   83 7d dc 11                     	cmp dword ptr [ebp - 0x24], 0x11
0x804a452:   0f 84 b3 f4 ff ff               	je 0x804990b <func_1+0x147>
0x804a458:   eb 04                           	jmp 0x804a45e <func_1+0xc9a>
0x804a45a:   90                              	nop 
0x804a45b:   eb 01                           	jmp 0x804a45e <func_1+0xc9a>
0x804a45d:   90                              	nop 
0x804a45e:   c7 45 94 cc 7c 94 64            	mov dword ptr [ebp - 0x6c], 0x64947ccc
0x804a465:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a469:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x804a46f:   0f be d2                        	movsx edx, dl
0x804a472:   c1 e2 04                        	shl edx, 4
0x804a475:   39 d0                           	cmp eax, edx
0x804a477:   0f 95 c0                        	setne al
0x804a47a:   0f b6 d0                        	movzx edx, al
0x804a47d:   66 83 7d ae 00                  	cmp word ptr [ebp - 0x52], 0
0x804a482:   0f 94 c0                        	sete al
0x804a485:   0f b6 c8                        	movzx ecx, al
0x804a488:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a48c:   31 c8                           	xor eax, ecx
0x804a48e:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x804a492:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x804a499:   74 07                           	je 0x804a4a2 <func_1+0xcde>
0x804a49b:   b9 01 00 00 00                  	mov ecx, 1
0x804a4a0:   eb 05                           	jmp 0x804a4a7 <func_1+0xce3>
0x804a4a2:   b9 00 00 00 00                  	mov ecx, 0
0x804a4a7:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a4ab:   39 c1                           	cmp ecx, eax
0x804a4ad:   0f 9d c0                        	setge al
0x804a4b0:   0f b6 c0                        	movzx eax, al
0x804a4b3:   39 c2                           	cmp edx, eax
0x804a4b5:   0f 9e c0                        	setle al
0x804a4b8:   0f b6 c0                        	movzx eax, al
0x804a4bb:   0b 85 64 ff ff ff               	or eax, dword ptr [ebp - 0x9c]
0x804a4c1:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a4c4:   83 bd 68 ff ff ff 08            	cmp dword ptr [ebp - 0x98], 8
0x804a4cb:   0f 9e c0                        	setle al
0x804a4ce:   0f b6 c0                        	movzx eax, al
0x804a4d1:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a4d4:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a4d7:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a4dd:   0f b7 4d be                     	movzx ecx, word ptr [ebp - 0x42]
0x804a4e1:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a4e4:   98                              	cwde 
0x804a4e5:   8b 95 5c ff ff ff               	mov edx, dword ptr [ebp - 0xa4]
0x804a4eb:   0f bf fa                        	movsx edi, dx
0x804a4ee:   99                              	cdq 
0x804a4ef:   f7 ff                           	idiv edi
0x804a4f1:   0f bf d0                        	movsx edx, ax
0x804a4f4:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a4fa:   98                              	cwde 
0x804a4fb:   29 c2                           	sub edx, eax
0x804a4fd:   89 d0                           	mov eax, edx
0x804a4ff:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a502:   75 07                           	jne 0x804a50b <func_1+0xd47>
0x804a504:   ba 20 89 9e 49                  	mov edx, 0x499e8920
0x804a509:   eb 05                           	jmp 0x804a510 <func_1+0xd4c>
0x804a50b:   ba 21 89 9e 49                  	mov edx, 0x499e8921
0x804a510:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a514:   39 c2                           	cmp edx, eax
0x804a516:   0f 94 c0                        	sete al
0x804a519:   0f b6 c0                        	movzx eax, al
0x804a51c:   39 c1                           	cmp ecx, eax
0x804a51e:   0f 9d c0                        	setge al
0x804a521:   0f b6 d0                        	movzx edx, al
0x804a524:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x804a52b:   89 c1                           	mov ecx, eax
0x804a52d:   d3 fa                           	sar edx, cl
0x804a52f:   89 d0                           	mov eax, edx
0x804a531:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a534:   0f 9d c0                        	setge al
0x804a537:   0f b6 c0                        	movzx eax, al
0x804a53a:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x804a53d:   31 45 90                        	xor dword ptr [ebp - 0x70], eax
0x804a540:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a544:   83 7d e8 1a                     	cmp dword ptr [ebp - 0x18], 0x1a
0x804a548:   0f 8f 88 f3 ff ff               	jg 0x80498d6 <func_1+0x112>
0x804a54e:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a552:   0f be 8d 73 ff ff ff            	movsx ecx, byte ptr [ebp - 0x8d]
0x804a559:   0f bf bd 74 ff ff ff            	movsx edi, word ptr [ebp - 0x8c]
0x804a560:   0f be b5 77 ff ff ff            	movsx esi, byte ptr [ebp - 0x89]
0x804a567:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a56d:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x804a571:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a577:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x804a57b:   89 95 c8 fe ff ff               	mov dword ptr [ebp - 0x138], edx
0x804a581:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a585:   89 b5 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], esi
0x804a58b:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a58f:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x804a595:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a599:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a59d:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a5a1:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a5a4:   50                              	push eax
0x804a5a5:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a5ab:   51                              	push ecx
0x804a5ac:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a5af:   57                              	push edi
0x804a5b0:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a5b6:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a5bc:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a5c2:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a5c8:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a5cb:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a5ce:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a5d4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5d7:   56                              	push esi
0x804a5d8:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a5de:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a5e1:   53                              	push ebx
0x804a5e2:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a5e5:   52                              	push edx
0x804a5e6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5e9:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a5ec:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5ef:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5f2:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a5f5:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5f8:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5fb:   e8 26 f0 ff ff                  	call 0x8049626 <set_var>
0x804a600:   83 c4 6c                        	add esp, 0x6c
0x804a603:   0f b6 85 df fe ff ff            	movzx eax, byte ptr [ebp - 0x121]
0x804a60a:   0f be c0                        	movsx eax, al
0x804a60d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a610:   5b                              	pop ebx
0x804a611:   5e                              	pop esi
0x804a612:   5f                              	pop edi
0x804a613:   5d                              	pop ebp
0x804a614:   c3                              	ret 
; function: main at 0x804a615 -- 0x804a9c9
0x804a615:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a619:   83 e4 f0                        	and esp, 0xfffffff0
0x804a61c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a61f:   55                              	push ebp
0x804a620:   89 e5                           	mov ebp, esp
0x804a622:   53                              	push ebx
0x804a623:   51                              	push ecx
0x804a624:   83 ec 10                        	sub esp, 0x10
0x804a627:   e8 64 dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a62c:   81 c3 d4 29 00 00               	add ebx, 0x29d4
0x804a632:   89 c8                           	mov eax, ecx
0x804a634:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a63b:   83 38 02                        	cmp dword ptr [eax], 2
0x804a63e:   75 26                           	jne 0x804a666 <main+0x51>
0x804a640:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a643:   83 c0 04                        	add eax, 4
0x804a646:   8b 00                           	mov eax, dword ptr [eax]
0x804a648:   83 ec 08                        	sub esp, 8
0x804a64b:   8d 93 a8 da ff ff               	lea edx, [ebx - 0x2558]
0x804a651:   52                              	push edx
0x804a652:   50                              	push eax
0x804a653:   e8 a8 dc ff ff                  	call 0x8048300 <strcmp>
0x804a658:   83 c4 10                        	add esp, 0x10
0x804a65b:   85 c0                           	test eax, eax
0x804a65d:   75 07                           	jne 0x804a666 <main+0x51>
0x804a65f:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a666:   e8 eb dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a66b:   e8 fb ed ff ff                  	call 0x804946b <crc32_gentab>
0x804a670:   e8 4f f1 ff ff                  	call 0x80497c4 <func_1>
0x804a675:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a67b:   89 c2                           	mov edx, eax
0x804a67d:   83 ec 04                        	sub esp, 4
0x804a680:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a683:   8d 83 aa da ff ff               	lea eax, [ebx - 0x2556]
0x804a689:   50                              	push eax
0x804a68a:   52                              	push edx
0x804a68b:   e8 e7 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a690:   83 c4 10                        	add esp, 0x10
0x804a693:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a699:   89 c2                           	mov edx, eax
0x804a69b:   83 ec 04                        	sub esp, 4
0x804a69e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6a1:   8d 83 ae da ff ff               	lea eax, [ebx - 0x2552]
0x804a6a7:   50                              	push eax
0x804a6a8:   52                              	push edx
0x804a6a9:   e8 c9 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6ae:   83 c4 10                        	add esp, 0x10
0x804a6b1:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a6b7:   89 c2                           	mov edx, eax
0x804a6b9:   83 ec 04                        	sub esp, 4
0x804a6bc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6bf:   8d 83 b2 da ff ff               	lea eax, [ebx - 0x254e]
0x804a6c5:   50                              	push eax
0x804a6c6:   52                              	push edx
0x804a6c7:   e8 ab ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6cc:   83 c4 10                        	add esp, 0x10
0x804a6cf:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a6d5:   89 c2                           	mov edx, eax
0x804a6d7:   83 ec 04                        	sub esp, 4
0x804a6da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6dd:   8d 83 b6 da ff ff               	lea eax, [ebx - 0x254a]
0x804a6e3:   50                              	push eax
0x804a6e4:   52                              	push edx
0x804a6e5:   e8 8d ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6ea:   83 c4 10                        	add esp, 0x10
0x804a6ed:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a6f3:   89 c2                           	mov edx, eax
0x804a6f5:   83 ec 04                        	sub esp, 4
0x804a6f8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6fb:   8d 83 ba da ff ff               	lea eax, [ebx - 0x2546]
0x804a701:   50                              	push eax
0x804a702:   52                              	push edx
0x804a703:   e8 6f ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a708:   83 c4 10                        	add esp, 0x10
0x804a70b:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a711:   89 c2                           	mov edx, eax
0x804a713:   83 ec 04                        	sub esp, 4
0x804a716:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a719:   8d 83 be da ff ff               	lea eax, [ebx - 0x2542]
0x804a71f:   50                              	push eax
0x804a720:   52                              	push edx
0x804a721:   e8 51 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a726:   83 c4 10                        	add esp, 0x10
0x804a729:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a72f:   83 ec 04                        	sub esp, 4
0x804a732:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a735:   8d 93 c2 da ff ff               	lea edx, [ebx - 0x253e]
0x804a73b:   52                              	push edx
0x804a73c:   50                              	push eax
0x804a73d:   e8 35 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a742:   83 c4 10                        	add esp, 0x10
0x804a745:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a74c:   0f be c0                        	movsx eax, al
0x804a74f:   83 ec 04                        	sub esp, 4
0x804a752:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a755:   8d 93 c7 da ff ff               	lea edx, [ebx - 0x2539]
0x804a75b:   52                              	push edx
0x804a75c:   50                              	push eax
0x804a75d:   e8 15 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a762:   83 c4 10                        	add esp, 0x10
0x804a765:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a76b:   83 ec 04                        	sub esp, 4
0x804a76e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a771:   8d 93 cc da ff ff               	lea edx, [ebx - 0x2534]
0x804a777:   52                              	push edx
0x804a778:   50                              	push eax
0x804a779:   e8 f9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a77e:   83 c4 10                        	add esp, 0x10
0x804a781:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a788:   0f b6 c0                        	movzx eax, al
0x804a78b:   83 ec 04                        	sub esp, 4
0x804a78e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a791:   8d 93 d1 da ff ff               	lea edx, [ebx - 0x252f]
0x804a797:   52                              	push edx
0x804a798:   50                              	push eax
0x804a799:   e8 d9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a79e:   83 c4 10                        	add esp, 0x10
0x804a7a1:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a7a7:   89 c2                           	mov edx, eax
0x804a7a9:   83 ec 04                        	sub esp, 4
0x804a7ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7af:   8d 83 d7 da ff ff               	lea eax, [ebx - 0x2529]
0x804a7b5:   50                              	push eax
0x804a7b6:   52                              	push edx
0x804a7b7:   e8 bb ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7bc:   83 c4 10                        	add esp, 0x10
0x804a7bf:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a7c5:   89 c2                           	mov edx, eax
0x804a7c7:   83 ec 04                        	sub esp, 4
0x804a7ca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7cd:   8d 83 dd da ff ff               	lea eax, [ebx - 0x2523]
0x804a7d3:   50                              	push eax
0x804a7d4:   52                              	push edx
0x804a7d5:   e8 9d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7da:   83 c4 10                        	add esp, 0x10
0x804a7dd:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a7e4:   0f b7 c0                        	movzx eax, ax
0x804a7e7:   83 ec 04                        	sub esp, 4
0x804a7ea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ed:   8d 93 e3 da ff ff               	lea edx, [ebx - 0x251d]
0x804a7f3:   52                              	push edx
0x804a7f4:   50                              	push eax
0x804a7f5:   e8 7d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7fa:   83 c4 10                        	add esp, 0x10
0x804a7fd:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a803:   83 ec 04                        	sub esp, 4
0x804a806:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a809:   8d 93 e9 da ff ff               	lea edx, [ebx - 0x2517]
0x804a80f:   52                              	push edx
0x804a810:   50                              	push eax
0x804a811:   e8 61 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a816:   83 c4 10                        	add esp, 0x10
0x804a819:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a820:   0f b7 c0                        	movzx eax, ax
0x804a823:   83 ec 04                        	sub esp, 4
0x804a826:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a829:   8d 93 ef da ff ff               	lea edx, [ebx - 0x2511]
0x804a82f:   52                              	push edx
0x804a830:   50                              	push eax
0x804a831:   e8 41 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a836:   83 c4 10                        	add esp, 0x10
0x804a839:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a83f:   83 ec 04                        	sub esp, 4
0x804a842:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a845:   8d 93 f5 da ff ff               	lea edx, [ebx - 0x250b]
0x804a84b:   52                              	push edx
0x804a84c:   50                              	push eax
0x804a84d:   e8 25 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a852:   83 c4 10                        	add esp, 0x10
0x804a855:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a85b:   83 ec 04                        	sub esp, 4
0x804a85e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a861:   8d 93 fb da ff ff               	lea edx, [ebx - 0x2505]
0x804a867:   52                              	push edx
0x804a868:   50                              	push eax
0x804a869:   e8 09 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86e:   83 c4 10                        	add esp, 0x10
0x804a871:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804a878:   0f be c0                        	movsx eax, al
0x804a87b:   83 ec 04                        	sub esp, 4
0x804a87e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a881:   8d 93 01 db ff ff               	lea edx, [ebx - 0x24ff]
0x804a887:   52                              	push edx
0x804a888:   50                              	push eax
0x804a889:   e8 e9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a88e:   83 c4 10                        	add esp, 0x10
0x804a891:   0f b7 83 5e 00 00 00            	movzx eax, word ptr [ebx + 0x5e]
0x804a898:   0f b7 c0                        	movzx eax, ax
0x804a89b:   83 ec 04                        	sub esp, 4
0x804a89e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8a1:   8d 93 07 db ff ff               	lea edx, [ebx - 0x24f9]
0x804a8a7:   52                              	push edx
0x804a8a8:   50                              	push eax
0x804a8a9:   e8 c9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ae:   83 c4 10                        	add esp, 0x10
0x804a8b1:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804a8b8:   0f b7 c0                        	movzx eax, ax
0x804a8bb:   83 ec 04                        	sub esp, 4
0x804a8be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8c1:   8d 93 0d db ff ff               	lea edx, [ebx - 0x24f3]
0x804a8c7:   52                              	push edx
0x804a8c8:   50                              	push eax
0x804a8c9:   e8 a9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ce:   83 c4 10                        	add esp, 0x10
0x804a8d1:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804a8d8:   0f be c0                        	movsx eax, al
0x804a8db:   83 ec 04                        	sub esp, 4
0x804a8de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8e1:   8d 93 13 db ff ff               	lea edx, [ebx - 0x24ed]
0x804a8e7:   52                              	push edx
0x804a8e8:   50                              	push eax
0x804a8e9:   e8 89 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ee:   83 c4 10                        	add esp, 0x10
0x804a8f1:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804a8f8:   98                              	cwde 
0x804a8f9:   83 ec 04                        	sub esp, 4
0x804a8fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ff:   8d 93 19 db ff ff               	lea edx, [ebx - 0x24e7]
0x804a905:   52                              	push edx
0x804a906:   50                              	push eax
0x804a907:   e8 6b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a90c:   83 c4 10                        	add esp, 0x10
0x804a90f:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a915:   83 ec 04                        	sub esp, 4
0x804a918:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a91b:   8d 93 1f db ff ff               	lea edx, [ebx - 0x24e1]
0x804a921:   52                              	push edx
0x804a922:   50                              	push eax
0x804a923:   e8 4f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a928:   83 c4 10                        	add esp, 0x10
0x804a92b:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804a932:   0f be c0                        	movsx eax, al
0x804a935:   83 ec 04                        	sub esp, 4
0x804a938:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a93b:   8d 93 25 db ff ff               	lea edx, [ebx - 0x24db]
0x804a941:   52                              	push edx
0x804a942:   50                              	push eax
0x804a943:   e8 2f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a948:   83 c4 10                        	add esp, 0x10
0x804a94b:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804a951:   83 ec 04                        	sub esp, 4
0x804a954:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a957:   8d 93 2b db ff ff               	lea edx, [ebx - 0x24d5]
0x804a95d:   52                              	push edx
0x804a95e:   50                              	push eax
0x804a95f:   e8 13 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a964:   83 c4 10                        	add esp, 0x10
0x804a967:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804a96e:   0f b7 c0                        	movzx eax, ax
0x804a971:   83 ec 04                        	sub esp, 4
0x804a974:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a977:   8d 93 31 db ff ff               	lea edx, [ebx - 0x24cf]
0x804a97d:   52                              	push edx
0x804a97e:   50                              	push eax
0x804a97f:   e8 f3 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a984:   83 c4 10                        	add esp, 0x10
0x804a987:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804a98d:   83 ec 04                        	sub esp, 4
0x804a990:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a993:   8d 93 37 db ff ff               	lea edx, [ebx - 0x24c9]
0x804a999:   52                              	push edx
0x804a99a:   50                              	push eax
0x804a99b:   e8 d7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a0:   83 c4 10                        	add esp, 0x10
0x804a9a3:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a9a9:   f7 d0                           	not eax
0x804a9ab:   83 ec 08                        	sub esp, 8
0x804a9ae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9b1:   50                              	push eax
0x804a9b2:   e8 af da ff ff                  	call 0x8048466 <platform_main_end>
0x804a9b7:   83 c4 10                        	add esp, 0x10
0x804a9ba:   b8 00 00 00 00                  	mov eax, 0
0x804a9bf:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a9c2:   59                              	pop ecx
0x804a9c3:   5b                              	pop ebx
0x804a9c4:   5d                              	pop ebp
0x804a9c5:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a9c8:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a9c9 -- 0x804a9cd
0x804a9c9:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a9cc:   c3                              	ret 
; data inside code section at 0x804a9cd -- 0x804a9d0
0x804a9cd:   66 90 90                                           |f..             |
; function: __libc_csu_init at 0x804a9d0 -- 0x804aa2d
0x804a9d0:   55                              	push ebp
0x804a9d1:   57                              	push edi
0x804a9d2:   56                              	push esi
0x804a9d3:   53                              	push ebx
0x804a9d4:   e8 b7 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a9d9:   81 c3 27 26 00 00               	add ebx, 0x2627
0x804a9df:   83 ec 0c                        	sub esp, 0xc
0x804a9e2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a9e6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a9ec:   e8 db d8 ff ff                  	call 0x80482cc <_init>
0x804a9f1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a9f7:   29 c6                           	sub esi, eax
0x804a9f9:   c1 fe 02                        	sar esi, 2
0x804a9fc:   85 f6                           	test esi, esi
0x804a9fe:   74 25                           	je 0x804aa25 <__libc_csu_init+0x55>
0x804aa00:   31 ff                           	xor edi, edi
0x804aa02:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aa08:   83 ec 04                        	sub esp, 4
0x804aa0b:   55                              	push ebp
0x804aa0c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa10:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa14:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aa1b:   83 c7 01                        	add edi, 1
0x804aa1e:   83 c4 10                        	add esp, 0x10
0x804aa21:   39 fe                           	cmp esi, edi
0x804aa23:   75 e3                           	jne 0x804aa08 <__libc_csu_init+0x38>
0x804aa25:   83 c4 0c                        	add esp, 0xc
0x804aa28:   5b                              	pop ebx
0x804aa29:   5e                              	pop esi
0x804aa2a:   5f                              	pop edi
0x804aa2b:   5d                              	pop ebp
0x804aa2c:   c3                              	ret 
; data inside code section at 0x804aa2d -- 0x804aa30
0x804aa2d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aa30 -- 0x804aa32
0x804aa30:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aa34 -- 0x804aa48
0x804aa34:   53                              	push ebx
0x804aa35:   83 ec 08                        	sub esp, 8
0x804aa38:   e8 53 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa3d:   81 c3 c3 25 00 00               	add ebx, 0x25c3
0x804aa43:   83 c4 08                        	add esp, 8
0x804aa46:   5b                              	pop ebx
0x804aa47:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 4c aa 04 08  04 00 00 00 11 00 10 00   |....L...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aa48:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aa58:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aa68:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aa78:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aa88:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aa98:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aaa8:   31 00 67 5f 32 00 67 5f  33 00 67 5f 34 00 67 5f   |1.g_2.g_3.g_4.g_|
0x804aab8:   37 00 67 5f 38 00 67 5f  39 00 67 5f 32 37 00 67   |7.g_8.g_9.g_27.g|
0x804aac8:   5f 34 34 00 67 5f 35 38  00 67 5f 31 30 30 00 67   |_44.g_58.g_100.g|
0x804aad8:   5f 31 30 33 00 67 5f 31  30 38 00 67 5f 31 30 39   |_103.g_108.g_109|
0x804aae8:   00 67 5f 31 31 38 00 67  5f 31 33 37 00 67 5f 31   |.g_118.g_137.g_1|
0x804aaf8:   34 36 00 67 5f 31 38 33  00 67 5f 32 30 37 00 67   |46.g_183.g_207.g|
0x804ab08:   5f 32 30 38 00 67 5f 32  30 39 00 67 5f 32 31 32   |_208.g_209.g_212|
0x804ab18:   00 67 5f 32 31 38 00 67  5f 32 33 30 00 67 5f 32   |.g_218.g_230.g_2|
0x804ab28:   33 39 00 67 5f 32 34 31  00 67 5f 33 30 34 00 67   |39.g_241.g_304.g|
0x804ab38:   5f 33 33 37 00 00 00 00  00 00 00 3f ff ff ff 7e   |_337.......?...~|
0x804ab48:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804ab58:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804ab68:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ab78:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ab88:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ab98:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aba8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aba8:   01 1b 03 3b b0 02 00 00  55 00 00 00 48 d7 ff ff   |...;....U...H...|
0x804abb8:   e0 02 00 00 88 d7 ff ff  04 03 00 00 d8 d7 ff ff   |................|
0x804abc8:   cc 02 00 00 ae d8 ff ff  18 03 00 00 be d8 ff ff   |................|
0x804abd8:   38 03 00 00 ec d8 ff ff  5c 03 00 00 0a d9 ff ff   |8.......\.......|
0x804abe8:   7c 03 00 00 32 d9 ff ff  9c 03 00 00 5c d9 ff ff   ||...2.......\...|
0x804abf8:   bc 03 00 00 85 d9 ff ff  dc 03 00 00 c8 d9 ff ff   |................|
0x804ac08:   fc 03 00 00 09 da ff ff  1c 04 00 00 61 da ff ff   |............a...|
0x804ac18:   40 04 00 00 b3 da ff ff  64 04 00 00 f0 da ff ff   |@.......d.......|
0x804ac28:   84 04 00 00 27 db ff ff  a4 04 00 00 46 db ff ff   |....'.......F...|
0x804ac38:   c4 04 00 00 70 db ff ff  e4 04 00 00 9c db ff ff   |....p...........|
0x804ac48:   04 05 00 00 c7 db ff ff  24 05 00 00 10 dc ff ff   |........$.......|
0x804ac58:   44 05 00 00 57 dc ff ff  64 05 00 00 b1 dc ff ff   |D...W...d.......|
0x804ac68:   88 05 00 00 05 dd ff ff  ac 05 00 00 44 dd ff ff   |............D...|
0x804ac78:   cc 05 00 00 7d dd ff ff  ec 05 00 00 9f dd ff ff   |....}...........|
0x804ac88:   0c 06 00 00 ed dd ff ff  2c 06 00 00 29 de ff ff   |........,...)...|
0x804ac98:   4c 06 00 00 b2 de ff ff  6c 06 00 00 e4 de ff ff   |L.......l.......|
0x804aca8:   8c 06 00 00 14 df ff ff  ac 06 00 00 59 df ff ff   |............Y...|
0x804acb8:   cc 06 00 00 98 df ff ff  ec 06 00 00 ca df ff ff   |................|
0x804acc8:   0c 07 00 00 f6 df ff ff  2c 07 00 00 14 e0 ff ff   |........,.......|
0x804acd8:   4c 07 00 00 3c e0 ff ff  6c 07 00 00 61 e0 ff ff   |L...<...l...a...|
0x804ace8:   8c 07 00 00 86 e0 ff ff  ac 07 00 00 bd e0 ff ff   |................|
0x804acf8:   cc 07 00 00 f1 e0 ff ff  ec 07 00 00 43 e1 ff ff   |............C...|
0x804ad08:   10 08 00 00 8f e1 ff ff  34 08 00 00 c6 e1 ff ff   |........4.......|
0x804ad18:   54 08 00 00 f7 e1 ff ff  74 08 00 00 16 e2 ff ff   |T.......t.......|
0x804ad28:   94 08 00 00 40 e2 ff ff  b4 08 00 00 68 e2 ff ff   |....@.......h...|
0x804ad38:   d4 08 00 00 91 e2 ff ff  f4 08 00 00 cd e2 ff ff   |................|
0x804ad48:   14 09 00 00 07 e3 ff ff  34 09 00 00 5a e3 ff ff   |........4...Z...|
0x804ad58:   58 09 00 00 a7 e3 ff ff  7c 09 00 00 df e3 ff ff   |X.......|.......|
0x804ad68:   9c 09 00 00 11 e4 ff ff  bc 09 00 00 25 e4 ff ff   |............%...|
0x804ad78:   dc 09 00 00 3c e4 ff ff  fc 09 00 00 51 e4 ff ff   |....<.......Q...|
0x804ad88:   1c 0a 00 00 67 e4 ff ff  3c 0a 00 00 8e e4 ff ff   |....g...<.......|
0x804ad98:   5c 0a 00 00 b3 e4 ff ff  7c 0a 00 00 f2 e4 ff ff   |\.......|.......|
0x804ada8:   9c 0a 00 00 2b e5 ff ff  bc 0a 00 00 57 e5 ff ff   |....+.......W...|
0x804adb8:   dc 0a 00 00 7d e5 ff ff  fc 0a 00 00 bf e5 ff ff   |....}...........|
0x804adc8:   1c 0b 00 00 01 e6 ff ff  3c 0b 00 00 43 e6 ff ff   |........<...C...|
0x804add8:   5c 0b 00 00 b8 e6 ff ff  7c 0b 00 00 15 e7 ff ff   |\.......|.......|
0x804ade8:   9c 0b 00 00 72 e7 ff ff  bc 0b 00 00 cf e7 ff ff   |....r...........|
0x804adf8:   dc 0b 00 00 5f e8 ff ff  fc 0b 00 00 c3 e8 ff ff   |...._...........|
0x804ae08:   1c 0c 00 00 33 e9 ff ff  3c 0c 00 00 7a e9 ff ff   |....3...<...z...|
0x804ae18:   60 0c 00 00 cf e9 ff ff  80 0c 00 00 16 ea ff ff   |`...............|
0x804ae28:   a4 0c 00 00 7e ea ff ff  c8 0c 00 00 1c ec ff ff   |....~...........|
0x804ae38:   f8 0c 00 00 6d fa ff ff  28 0d 00 00 21 fe ff ff   |....m...(...!...|
0x804ae48:   60 0d 00 00 28 fe ff ff  74 0d 00 00 88 fe ff ff   |`...(...t.......|
0x804ae58:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804ae5c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ae6c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ae7c:   04 d5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804ae8c:   30 00 00 00 60 d4 ff ff  40 00 00 00 00 0e 08 46   |0...`...@......F|
0x804ae9c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804aeac:   10 00 00 00 54 00 00 00  7c d4 ff ff 08 00 00 00   |....T...|.......|
0x804aebc:   00 00 00 00 1c 00 00 00  68 00 00 00 8e d5 ff ff   |........h.......|
0x804aecc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804aedc:   04 04 00 00 20 00 00 00  88 00 00 00 7e d5 ff ff   |.... .......~...|
0x804aeec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804aefc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804af0c:   88 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804af1c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804af2c:   86 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804af3c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804af4c:   8e d5 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804af5c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804af6c:   98 d5 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804af7c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804af8c:   a1 d5 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804af9c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804afac:   c4 d5 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804afbc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804afcc:   e5 d5 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804afdc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804afec:   90 01 00 00 19 d6 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804affc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b00c:   1c 00 00 00 b4 01 00 00  47 d6 ff ff 3d 00 00 00   |........G...=...|
0x804b01c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b02c:   1c 00 00 00 d4 01 00 00  64 d6 ff ff 37 00 00 00   |........d...7...|
0x804b03c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b04c:   1c 00 00 00 f4 01 00 00  7b d6 ff ff 1f 00 00 00   |........{.......|
0x804b05c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b06c:   1c 00 00 00 14 02 00 00  7a d6 ff ff 2a 00 00 00   |........z...*...|
0x804b07c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b08c:   1c 00 00 00 34 02 00 00  84 d6 ff ff 2c 00 00 00   |....4.......,...|
0x804b09c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b0ac:   1c 00 00 00 54 02 00 00  90 d6 ff ff 2b 00 00 00   |....T.......+...|
0x804b0bc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b0cc:   1c 00 00 00 74 02 00 00  9b d6 ff ff 49 00 00 00   |....t.......I...|
0x804b0dc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b0ec:   1c 00 00 00 94 02 00 00  c4 d6 ff ff 47 00 00 00   |............G...|
0x804b0fc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b10c:   20 00 00 00 b4 02 00 00  eb d6 ff ff 5a 00 00 00   | ...........Z...|
0x804b11c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b12c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 21 d7 ff ff   |.... .......!...|
0x804b13c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b14c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b15c:   51 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Q...?....A....B.|
0x804b16c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b17c:   70 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |p...9....A....B.|
0x804b18c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b19c:   89 d7 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b1ac:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b1bc:   8b d7 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b1cc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b1dc:   b9 d7 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b1ec:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b1fc:   d5 d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b20c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b21c:   3e d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |>...2....A....B.|
0x804b22c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b23c:   50 d8 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |P...0....A....B.|
0x804b24c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b25c:   60 d8 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |`...E....A....B.|
0x804b26c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b27c:   85 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b28c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b29c:   a4 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b2ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b2bc:   b6 d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b2cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b2dc:   c2 d8 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b2ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b2fc:   c0 d8 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b30c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b31c:   c8 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b32c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b33c:   cd d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b34c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b35c:   d2 d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b36c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b37c:   e9 d8 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b38c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b39c:   fd d8 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b3ac:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b3bc:   60 05 00 00 2b d9 ff ff  4c 00 00 00 00 41 0e 08   |`...+...L....A..|
0x804b3cc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b3dc:   1c 00 00 00 84 05 00 00  53 d9 ff ff 37 00 00 00   |........S...7...|
0x804b3ec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b3fc:   1c 00 00 00 a4 05 00 00  6a d9 ff ff 31 00 00 00   |........j...1...|
0x804b40c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b41c:   1c 00 00 00 c4 05 00 00  7b d9 ff ff 1f 00 00 00   |........{.......|
0x804b42c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b43c:   1c 00 00 00 e4 05 00 00  7a d9 ff ff 2a 00 00 00   |........z...*...|
0x804b44c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b45c:   1c 00 00 00 04 06 00 00  84 d9 ff ff 28 00 00 00   |............(...|
0x804b46c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b47c:   1c 00 00 00 24 06 00 00  8c d9 ff ff 29 00 00 00   |....$.......)...|
0x804b48c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b49c:   1c 00 00 00 44 06 00 00  95 d9 ff ff 3c 00 00 00   |....D.......<...|
0x804b4ac:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b4bc:   1c 00 00 00 64 06 00 00  b1 d9 ff ff 3a 00 00 00   |....d.......:...|
0x804b4cc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b4dc:   20 00 00 00 84 06 00 00  cb d9 ff ff 53 00 00 00   | ...........S...|
0x804b4ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b4fc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 fa d9 ff ff   |.... ...........|
0x804b50c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b51c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b52c:   23 da ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |#...8....A....B.|
0x804b53c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b54c:   3b da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |;...2....A....B.|
0x804b55c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b56c:   4d da ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804b57c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b58c:   41 da ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |A........A....B.|
0x804b59c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b5ac:   38 da ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804b5bc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b5cc:   2d da ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804b5dc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b5ec:   23 da ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |#...'....A....B.|
0x804b5fc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b60c:   2a da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |*...%....A....B.|
0x804b61c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b62c:   2f da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |/...?....A....B.|
0x804b63c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b64c:   4e da ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |N...9....A....B.|
0x804b65c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b66c:   67 da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |g...,....A....B.|
0x804b67c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b68c:   73 da ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |s...&....A....B.|
0x804b69c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b6ac:   79 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |y...B....A....B.|
0x804b6bc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b6cc:   9b da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b6dc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b6ec:   bd da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b6fc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b70c:   df da ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b71c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b72c:   34 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |4...]....A....B.|
0x804b73c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b74c:   71 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |q...]....A....B.|
0x804b75c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b76c:   ae db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b77c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b78c:   eb db ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b79c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b7ac:   5b dc ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |[...d....A....B.|
0x804b7bc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b7cc:   9f dc ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b7dc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b7ec:   ef dc ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b7fc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b80c:   b0 09 00 00 12 dd ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b81c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b82c:   d0 09 00 00 47 dd ff ff  47 00 00 00 00 41 0e 08   |....G...G....A..|
0x804b83c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b84c:   20 00 00 00 f4 09 00 00  6a dd ff ff 68 00 00 00   | .......j...h...|
0x804b85c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b86c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 ae dd ff ff   |....,...........|
0x804b87c:   9e 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b88c:   86 04 83 05 03 91 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b89c:   04 00 00 00 2c 00 00 00  48 0a 00 00 1c df ff ff   |....,...H.......|
0x804b8ac:   51 0e 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |Q....A....B..I..|
0x804b8bc:   86 04 83 05 03 41 0e c3  41 c6 41 c7 41 c5 0c 04   |.....A..A.A.A...|
0x804b8cc:   04 00 00 00 34 00 00 00  78 0a 00 00 3d ed ff ff   |....4...x...=...|
0x804b8dc:   b4 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b8ec:   0f 03 75 78 06 10 03 02  75 7c 03 9f 03 c1 0c 01   |..ux....u|......|
0x804b8fc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b90c:   b0 0a 00 00 b9 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b91c:   48 00 00 00 c4 0a 00 00  ac f0 ff ff 5d 00 00 00   |H...........]...|
0x804b92c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b93c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b94c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b95c:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b96c:   10 0b 00 00 c0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b97c:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 34 aa 04 08  19 00 00 00 0c cf 04 08   |....4...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 09 00 00 00   |................|
0x804d028:   02 00 00 00 03 00 00 00  75 dc 2e 4d ff ff ff ff   |........u..M....|
0x804d038:   f6 ff ff ff fe 00 00 00  b7 a8 3f 60 57 00 00 00   |..........?`W...|
0x804d048:   ec 2f 6f d8 08 00 00 00  ff ff ff ff 06 00 00 00   |./o.............|
0x804d058:   fa ff ff ff 01 00 f8 ff  01 00 68 00 ff ff 00 00   |..........h.....|
0x804d068:   1b 06 a3 d9 4d 00 00 00  30 ea ea b1 f9 ff 00 00   |....M...0.......|
0x804d078:   ff ff ff ff ??                                     |....?           |
