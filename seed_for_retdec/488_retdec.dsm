;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:32:02
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 20 d9 ff ff               	lea eax, [ebx - 0x26e0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 c0 d8 ff ff               	lea eax, [ebx - 0x2740]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 21 b3 04 08               	mov eax, 0x804b321
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 a4 e0 04 08                  	mov eax, 0x804e0a4
0x80483a5:   3d a4 e0 04 08                  	cmp eax, 0x804e0a4
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 a4 e0 04 08                  	push 0x804e0a4
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 a4 e0 04 08                  	mov eax, 0x804e0a4
0x80483e5:   2d a4 e0 04 08                  	sub eax, 0x804e0a4
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 a4 e0 04 08                  	push 0x804e0a4
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d c0 e0 04 08 00            	cmp byte ptr [0x804e0c0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 c0 e0 04 08 01            	mov byte ptr [0x804e0c0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 4d 34 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 39 34 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 40 d9 ff ff               	lea edx, [eax - 0x26c0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 0c 34 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 ee 33 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 c6 33 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 9c 33 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 73 33 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 30 33 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 ee 32 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 96 32 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 45 32 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 08 32 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 d1 31 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 b2 31 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 88 31 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 5c 31 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 31 31 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 e8 30 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 a0 30 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 46 30 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 f3 2f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 b4 2f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 7e 2f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 5c 2f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 0e 2f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 d2 2e 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 49 2e 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 17 2e 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 e7 2d 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 a2 2d 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 63 2d 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 31 2d 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 02 2d 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 e4 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 bc 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 97 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 72 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 3b 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 06 2c 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 b4 2b 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 69 2b 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 32 2b 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 01 2b 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 e2 2a 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 b8 2a 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 90 2a 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 67 2a 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 2b 2a 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 f0 29 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 9d 29 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 51 29 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 19 29 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 ea 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 d6 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 bf 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 aa 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 94 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 6d 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 48 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 09 28 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 d0 27 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 a4 27 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 7e 27 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 94 da ff ff               	fld dword ptr [eax - 0x256c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 94 da ff ff               	fld dword ptr [eax - 0x256c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 98 da ff ff               	fld dword ptr [eax - 0x2568]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 3c 27 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 94 da ff ff               	fld dword ptr [eax - 0x256c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 94 da ff ff               	fld dword ptr [eax - 0x256c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 98 da ff ff               	fld dword ptr [eax - 0x2568]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 fa 26 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 9c da ff ff               	fld dword ptr [eax - 0x2564]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 a0 da ff ff               	fld dword ptr [eax - 0x2560]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a4 da ff ff               	fld dword ptr [eax - 0x255c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 b8 26 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a8 da ff ff               	fld dword ptr [eax - 0x2558]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 ac da ff ff               	fld dword ptr [eax - 0x2554]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 b0 da ff ff               	fld dword ptr [eax - 0x2550]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 40 26 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b8 da ff ff               	fld qword ptr [eax - 0x2548]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b8 da ff ff               	fld qword ptr [eax - 0x2548]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c0 da ff ff               	fld qword ptr [eax - 0x2540]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 e3 25 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b8 da ff ff               	fld qword ptr [eax - 0x2548]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b8 da ff ff               	fld qword ptr [eax - 0x2548]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c0 da ff ff               	fld qword ptr [eax - 0x2540]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 86 25 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c8 da ff ff               	fld qword ptr [eax - 0x2538]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d0 da ff ff               	fld qword ptr [eax - 0x2530]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d8 da ff ff               	fld qword ptr [eax - 0x2528]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 29 25 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e0 da ff ff               	fld qword ptr [eax - 0x2520]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e8 da ff ff               	fld qword ptr [eax - 0x2518]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f0 da ff ff               	fld qword ptr [eax - 0x2510]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 99 24 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f8 da ff ff               	fld dword ptr [eax - 0x2508]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 fc da ff ff               	fld dword ptr [eax - 0x2504]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 35 24 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 e0 00 00 00            	mov dword ptr [eax + edx*4 + 0xe0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 c4 23 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 e0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xe0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 81 23 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 50 d9 ff ff               	lea eax, [ebx - 0x26b0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 74 d9 ff ff               	lea eax, [ebx - 0x268c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049939
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 78 22 00 00                  	call 0x804b8af <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049646:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049649:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x804964c:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964f:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804967f:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049682:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x8049688:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804968e:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x8049694:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969a:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80496a0:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a6:   8b 85 9c 00 00 00               	mov eax, dword ptr [ebp + 0x9c]
0x80496ac:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496b2:   8b 85 a0 00 00 00               	mov eax, dword ptr [ebp + 0xa0]
0x80496b8:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496be:   8b 85 a4 00 00 00               	mov eax, dword ptr [ebp + 0xa4]
0x80496c4:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496ca:   8b 85 a8 00 00 00               	mov eax, dword ptr [ebp + 0xa8]
0x80496d0:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496d6:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496da:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496dd:   89 c8                           	mov eax, ecx
0x80496df:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496e3:   89 d8                           	mov eax, ebx
0x80496e5:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496e8:   89 f0                           	mov eax, esi
0x80496ea:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496ee:   89 f8                           	mov eax, edi
0x80496f0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496f4:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496f8:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496fc:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x8049700:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x8049703:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x8049707:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x804970a:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x804970e:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x8049712:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049716:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804971a:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x804971e:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x8049721:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049725:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049728:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804972c:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049730:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049737:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x804973b:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x8049742:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049745:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804974c:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049750:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x8049757:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x804975b:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x8049762:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x8049765:   0f b6 85 68 ff ff ff            	movzx eax, byte ptr [ebp - 0x98]
0x804976c:   88 45 a8                        	mov byte ptr [ebp - 0x58], al
0x804976f:   0f b6 85 64 ff ff ff            	movzx eax, byte ptr [ebp - 0x9c]
0x8049776:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x8049779:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804977d:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049783:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049786:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804978c:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049790:   66 89 82 e4 04 00 00            	mov word ptr [edx + 0x4e4], ax
0x8049797:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804979a:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80497a0:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80497a4:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x80497aa:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80497ad:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497b3:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80497b6:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497bc:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80497c0:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x80497c7:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x80497cb:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x80497d2:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x80497d5:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497db:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x80497df:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x80497e6:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497e9:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497ef:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497f2:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497f8:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497fb:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049801:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049804:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804980a:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804980e:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049814:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049818:   88 82 e6 04 00 00               	mov byte ptr [edx + 0x4e6], al
0x804981e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049821:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049827:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804982a:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049830:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049833:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049839:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804983c:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049842:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049846:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x804984d:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049850:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049856:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049859:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x804985f:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049863:   66 89 82 78 00 00 00            	mov word ptr [edx + 0x78], ax
0x804986a:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804986d:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049873:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x8049877:   88 82 80 00 00 00               	mov byte ptr [edx + 0x80], al
0x804987d:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049881:   88 82 e7 04 00 00               	mov byte ptr [edx + 0x4e7], al
0x8049887:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804988a:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x8049890:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049893:   89 82 88 00 00 00               	mov dword ptr [edx + 0x88], eax
0x8049899:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804989d:   66 89 82 8c 00 00 00            	mov word ptr [edx + 0x8c], ax
0x80498a4:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80498a8:   66 89 82 8e 00 00 00            	mov word ptr [edx + 0x8e], ax
0x80498af:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80498b3:   88 82 90 00 00 00               	mov byte ptr [edx + 0x90], al
0x80498b9:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x80498bf:   89 82 e8 04 00 00               	mov dword ptr [edx + 0x4e8], eax
0x80498c5:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80498c9:   66 89 82 92 00 00 00            	mov word ptr [edx + 0x92], ax
0x80498d0:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x80498d6:   89 82 94 00 00 00               	mov dword ptr [edx + 0x94], eax
0x80498dc:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x80498e2:   89 82 98 00 00 00               	mov dword ptr [edx + 0x98], eax
0x80498e8:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80498ec:   66 89 82 ec 04 00 00            	mov word ptr [edx + 0x4ec], ax
0x80498f3:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80498f7:   88 82 9c 00 00 00               	mov byte ptr [edx + 0x9c], al
0x80498fd:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x8049901:   88 82 ee 04 00 00               	mov byte ptr [edx + 0x4ee], al
0x8049907:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x804990b:   88 82 9d 00 00 00               	mov byte ptr [edx + 0x9d], al
0x8049911:   8b 85 ac 00 00 00               	mov eax, dword ptr [ebp + 0xac]
0x8049917:   89 82 a0 00 00 00               	mov dword ptr [edx + 0xa0], eax
0x804991d:   8b 85 b0 00 00 00               	mov eax, dword ptr [ebp + 0xb0]
0x8049923:   89 82 f0 04 00 00               	mov dword ptr [edx + 0x4f0], eax
0x8049929:   b8 00 00 00 00                  	mov eax, 0
0x804992e:   81 c4 90 00 00 00               	add esp, 0x90
0x8049934:   5b                              	pop ebx
0x8049935:   5e                              	pop esi
0x8049936:   5f                              	pop edi
0x8049937:   5d                              	pop ebp
0x8049938:   c3                              	ret 
; function: func_1 at 0x8049939 -- 0x804b321
0x8049939:   55                              	push ebp
0x804993a:   89 e5                           	mov ebp, esp
0x804993c:   57                              	push edi
0x804993d:   56                              	push esi
0x804993e:   53                              	push ebx
0x804993f:   81 ec 18 02 00 00               	sub esp, 0x218
0x8049945:   e8 61 1f 00 00                  	call 0x804b8ab <__x86.get_pc_thunk.ax>
0x804994a:   05 b6 46 00 00                  	add eax, 0x46b6
0x804994f:   c6 85 65 ff ff ff f6            	mov byte ptr [ebp - 0x9b], 0xf6
0x8049956:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x804995d:   66 c7 45 d2 00 00               	mov word ptr [ebp - 0x2e], 0
0x8049963:   c7 45 cc f5 b4 1c 72            	mov dword ptr [ebp - 0x34], 0x721cb4f5
0x804996a:   c6 45 cb 8e                     	mov byte ptr [ebp - 0x35], 0x8e
0x804996e:   c7 45 c4 fa ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffffa
0x8049975:   c7 45 f0 16 e3 33 68            	mov dword ptr [ebp - 0x10], 0x6833e316
0x804997c:   66 c7 45 ee cd e8               	mov word ptr [ebp - 0x12], 0xe8cd
0x8049982:   66 c7 45 ec 01 00               	mov word ptr [ebp - 0x14], 1
0x8049988:   c7 45 e8 e3 82 37 83            	mov dword ptr [ebp - 0x18], 0x833782e3
0x804998f:   66 c7 85 62 ff ff ff b9 35      	mov word ptr [ebp - 0x9e], 0x35b9
0x8049998:   c7 45 e4 ff ff ff ff            	mov dword ptr [ebp - 0x1c], 0xffffffff
0x804999f:   c7 85 5c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffff6
0x80499a9:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x80499b0:   c7 45 dc 08 00 00 00            	mov dword ptr [ebp - 0x24], 8
0x80499b7:   c6 45 db 24                     	mov byte ptr [ebp - 0x25], 0x24
0x80499bb:   c6 45 c3 00                     	mov byte ptr [ebp - 0x3d], 0
0x80499bf:   c7 45 bc 22 37 f9 d9            	mov dword ptr [ebp - 0x44], 0xd9f93722
0x80499c6:   c7 45 b8 fc ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffc
0x80499cd:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x80499d7:   c7 45 b4 fc ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffc
0x80499de:   66 c7 85 56 ff ff ff c0 81      	mov word ptr [ebp - 0xaa], 0x81c0
0x80499e7:   c7 45 b0 3a 5a ef 3e            	mov dword ptr [ebp - 0x50], 0x3eef5a3a
0x80499ee:   c7 45 ac 08 00 00 00            	mov dword ptr [ebp - 0x54], 8
0x80499f5:   66 c7 85 54 ff ff ff ff ff      	mov word ptr [ebp - 0xac], 0xffff
0x80499fe:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x8049a08:   c6 45 ab b1                     	mov byte ptr [ebp - 0x55], 0xb1
0x8049a0c:   c6 85 4f ff ff ff 00            	mov byte ptr [ebp - 0xb1], 0
0x8049a13:   c7 45 a4 02 00 00 00            	mov dword ptr [ebp - 0x5c], 2
0x8049a1a:   c7 45 a0 05 00 00 00            	mov dword ptr [ebp - 0x60], 5
0x8049a21:   66 c7 85 4c ff ff ff 01 00      	mov word ptr [ebp - 0xb4], 1
0x8049a2a:   66 c7 85 4a ff ff ff 08 00      	mov word ptr [ebp - 0xb6], 8
0x8049a33:   c6 85 49 ff ff ff fb            	mov byte ptr [ebp - 0xb7], 0xfb
0x8049a3a:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049a41:   66 c7 85 46 ff ff ff fb a5      	mov word ptr [ebp - 0xba], 0xa5fb
0x8049a4a:   c7 45 98 b5 33 52 f5            	mov dword ptr [ebp - 0x68], 0xf55233b5
0x8049a51:   c7 45 94 05 00 00 00            	mov dword ptr [ebp - 0x6c], 5
0x8049a58:   66 c7 45 92 00 00               	mov word ptr [ebp - 0x6e], 0
0x8049a5e:   c6 45 91 01                     	mov byte ptr [ebp - 0x6f], 1
0x8049a62:   c6 85 45 ff ff ff 00            	mov byte ptr [ebp - 0xbb], 0
0x8049a69:   c6 85 44 ff ff ff 01            	mov byte ptr [ebp - 0xbc], 1
0x8049a70:   c7 45 8c fd ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffffd
0x8049a77:   c7 85 40 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc0], 0
0x8049a81:   c7 45 88 32 d0 4d 07            	mov dword ptr [ebp - 0x78], 0x74dd032
0x8049a88:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x8049a8f:   c7 85 3c ff ff ff 23 fe c6 43   	mov dword ptr [ebp - 0xc4], 0x43c6fe23
0x8049a99:   66 c7 85 3a ff ff ff eb 0c      	mov word ptr [ebp - 0xc6], 0xceb
0x8049aa2:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x8049aac:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x8049ab6:   66 c7 85 2e ff ff ff 05 00      	mov word ptr [ebp - 0xd2], 5
0x8049abf:   c7 85 28 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd8], 0xffffffff
0x8049ac9:   c7 45 80 0f ee f9 10            	mov dword ptr [ebp - 0x80], 0x10f9ee0f
0x8049ad0:   c7 85 7c ff ff ff ed 0b c0 77   	mov dword ptr [ebp - 0x84], 0x77c00bed
0x8049ada:   66 c7 85 26 ff ff ff b8 51      	mov word ptr [ebp - 0xda], 0x51b8
0x8049ae3:   c6 85 25 ff ff ff 08            	mov byte ptr [ebp - 0xdb], 8
0x8049aea:   c6 85 7b ff ff ff 1a            	mov byte ptr [ebp - 0x85], 0x1a
0x8049af1:   c6 85 24 ff ff ff 01            	mov byte ptr [ebp - 0xdc], 1
0x8049af8:   c7 85 20 ff ff ff e5 78 34 1b   	mov dword ptr [ebp - 0xe0], 0x1b3478e5
0x8049b02:   c6 85 1f ff ff ff 00            	mov byte ptr [ebp - 0xe1], 0
0x8049b09:   c7 85 18 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff6
0x8049b13:   c6 85 65 ff ff ff fd            	mov byte ptr [ebp - 0x9b], 0xfd
0x8049b1a:   83 7d 88 fd                     	cmp dword ptr [ebp - 0x78], -3
0x8049b1e:   77 19                           	ja 0x8049b39 <func_1+0x200>
0x8049b20:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049b24:   0f 94 c0                        	sete al
0x8049b27:   0f b6 d0                        	movzx edx, al
0x8049b2a:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049b31:   39 c2                           	cmp edx, eax
0x8049b33:   0f 8d 23 15 00 00               	jge 0x804b05c <func_1+0x1723>
0x8049b39:   c7 85 74 ff ff ff fa be d5 fa   	mov dword ptr [ebp - 0x8c], 0xfad5befa
0x8049b43:   c7 85 e8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x118], 0xffffffff
0x8049b4d:   c7 85 e4 fe ff ff 7b ca 9b 0a   	mov dword ptr [ebp - 0x11c], 0xa9bca7b
0x8049b57:   66 c7 85 e2 fe ff ff d9 53      	mov word ptr [ebp - 0x11e], 0x53d9
0x8049b60:   c7 85 dc fe ff ff cc 36 4f 10   	mov dword ptr [ebp - 0x124], 0x104f36cc
0x8049b6a:   c6 85 db fe ff ff f6            	mov byte ptr [ebp - 0x125], 0xf6
0x8049b71:   66 c7 85 72 ff ff ff e4 de      	mov word ptr [ebp - 0x8e], 0xdee4
0x8049b7a:   66 c7 85 d8 fe ff ff ff ff      	mov word ptr [ebp - 0x128], 0xffff
0x8049b83:   c6 85 d7 fe ff ff 95            	mov byte ptr [ebp - 0x129], 0x95
0x8049b8a:   c7 85 d0 fe ff ff 8a 1f c3 da   	mov dword ptr [ebp - 0x130], 0xdac31f8a
0x8049b94:   66 c7 85 ce fe ff ff 08 00      	mov word ptr [ebp - 0x132], 8
0x8049b9d:   c7 85 c8 fe ff ff 03 47 31 ac   	mov dword ptr [ebp - 0x138], 0xac314703
0x8049ba7:   66 c7 85 c6 fe ff ff 83 50      	mov word ptr [ebp - 0x13a], 0x5083
0x8049bb0:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049bb3:   23 45 88                        	and eax, dword ptr [ebp - 0x78]
0x8049bb6:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049bb9:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049bc0:   c7 85 74 ff ff ff a9 f0 00 00   	mov dword ptr [ebp - 0x8c], 0xf0a9
0x8049bca:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049bd0:   0f 9c c0                        	setl al
0x8049bd3:   0f b6 c0                        	movzx eax, al
0x8049bd6:   31 85 e8 fe ff ff               	xor dword ptr [ebp - 0x118], eax
0x8049bdc:   b8 00 00 00 00                  	mov eax, 0
0x8049be1:   0f b7 c0                        	movzx eax, ax
0x8049be4:   f7 d8                           	neg eax
0x8049be6:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049be9:   0f 9e c0                        	setle al
0x8049bec:   0f b6 c0                        	movzx eax, al
0x8049bef:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x8049bf5:   0f 87 09 06 00 00               	ja 0x804a204 <func_1+0x8cb>
0x8049bfb:   66 c7 85 4e fe ff ff 41 a3      	mov word ptr [ebp - 0x1b2], 0xa341
0x8049c04:   c7 85 48 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x1b8], 0xfffffffc
0x8049c0e:   80 bd 65 ff ff ff 00            	cmp byte ptr [ebp - 0x9b], 0
0x8049c15:   0f 84 2b 01 00 00               	je 0x8049d46 <func_1+0x40d>
0x8049c1b:   c6 85 1f fe ff ff 00            	mov byte ptr [ebp - 0x1e1], 0
0x8049c22:   c7 85 18 fe ff ff 77 6d 6f df   	mov dword ptr [ebp - 0x1e8], 0xdf6f6d77
0x8049c2c:   0f b6 8d 1f fe ff ff            	movzx ecx, byte ptr [ebp - 0x1e1]
0x8049c33:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049c39:   0f b6 d8                        	movzx ebx, al
0x8049c3c:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x8049c42:   21 85 74 ff ff ff               	and dword ptr [ebp - 0x8c], eax
0x8049c48:   0f b6 b5 1f fe ff ff            	movzx esi, byte ptr [ebp - 0x1e1]
0x8049c4f:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049c54:   99                              	cdq 
0x8049c55:   f7 fe                           	idiv esi
0x8049c57:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x8049c5d:   66 83 bd e2 fe ff ff 00         	cmp word ptr [ebp - 0x11e], 0
0x8049c65:   74 07                           	je 0x8049c6e <func_1+0x335>
0x8049c67:   b8 01 00 00 00                  	mov eax, 1
0x8049c6c:   eb 05                           	jmp 0x8049c73 <func_1+0x33a>
0x8049c6e:   b8 00 00 00 00                  	mov eax, 0
0x8049c73:   0f b6 c0                        	movzx eax, al
0x8049c76:   01 d8                           	add eax, ebx
0x8049c78:   29 c1                           	sub ecx, eax
0x8049c7a:   89 ca                           	mov edx, ecx
0x8049c7c:   0f b7 85 4e fe ff ff            	movzx eax, word ptr [ebp - 0x1b2]
0x8049c83:   31 d0                           	xor eax, edx
0x8049c85:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x8049c8b:   76 07                           	jbe 0x8049c94 <func_1+0x35b>
0x8049c8d:   b8 18 b3 40 00                  	mov eax, 0x40b318
0x8049c92:   eb 05                           	jmp 0x8049c99 <func_1+0x360>
0x8049c94:   b8 19 b3 40 00                  	mov eax, 0x40b319
0x8049c99:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x8049c9f:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049ca3:   c7 85 48 fe ff ff db 00 00 00   	mov dword ptr [ebp - 0x1b8], 0xdb
0x8049cad:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049cb3:   34 f7                           	xor al, 0xf7
0x8049cb5:   89 c2                           	mov edx, eax
0x8049cb7:   0f b6 85 1f fe ff ff            	movzx eax, byte ptr [ebp - 0x1e1]
0x8049cbe:   39 c2                           	cmp edx, eax
0x8049cc0:   0f 92 c0                        	setb al
0x8049cc3:   0f b6 c0                        	movzx eax, al
0x8049cc6:   89 85 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], eax
0x8049ccc:   0f b6 95 1f fe ff ff            	movzx edx, byte ptr [ebp - 0x1e1]
0x8049cd3:   0f b7 85 4e fe ff ff            	movzx eax, word ptr [ebp - 0x1b2]
0x8049cda:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049cdd:   0f 93 c0                        	setae al
0x8049ce0:   0f b6 c8                        	movzx ecx, al
0x8049ce3:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049cea:   39 c1                           	cmp ecx, eax
0x8049cec:   0f 94 c0                        	sete al
0x8049cef:   0f b6 c0                        	movzx eax, al
0x8049cf2:   89 c1                           	mov ecx, eax
0x8049cf4:   d3 fa                           	sar edx, cl
0x8049cf6:   89 d0                           	mov eax, edx
0x8049cf8:   85 c0                           	test eax, eax
0x8049cfa:   0f b7 95 4e fe ff ff            	movzx edx, word ptr [ebp - 0x1b2]
0x8049d01:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049d08:   39 c2                           	cmp edx, eax
0x8049d0a:   80 bd 65 ff ff ff 00            	cmp byte ptr [ebp - 0x9b], 0
0x8049d11:   74 07                           	je 0x8049d1a <func_1+0x3e1>
0x8049d13:   83 bd e4 fe ff ff 00            	cmp dword ptr [ebp - 0x11c], 0
0x8049d1a:   80 bd 65 ff ff ff 00            	cmp byte ptr [ebp - 0x9b], 0
0x8049d21:   74 07                           	je 0x8049d2a <func_1+0x3f1>
0x8049d23:   b8 01 00 00 00                  	mov eax, 1
0x8049d28:   eb 05                           	jmp 0x8049d2f <func_1+0x3f6>
0x8049d2a:   b8 00 00 00 00                  	mov eax, 0
0x8049d2f:   0f b6 d0                        	movzx edx, al
0x8049d32:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x8049d39:   0f b6 c0                        	movzx eax, al
0x8049d3c:   01 d0                           	add eax, edx
0x8049d3e:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049d41:   e9 02 14 00 00                  	jmp 0x804b148 <func_1+0x180f>
0x8049d46:   c7 85 44 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x1bc], 0xfffffffd
0x8049d50:   c7 85 40 fe ff ff 2f 9b fc 9c   	mov dword ptr [ebp - 0x1c0], 0x9cfc9b2f
0x8049d5a:   66 c7 85 3e fe ff ff 45 20      	mov word ptr [ebp - 0x1c2], 0x2045
0x8049d63:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x8049d68:   0f 94 c0                        	sete al
0x8049d6b:   0f b6 c8                        	movzx ecx, al
0x8049d6e:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d71:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x8049d74:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d77:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d7a:   f7 d8                           	neg eax
0x8049d7c:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049d7f:   89 d7                           	mov edi, edx
0x8049d81:   ba 00 00 00 00                  	mov edx, 0
0x8049d86:   66 f7 f7                        	div di
0x8049d89:   66 85 c0                        	test ax, ax
0x8049d8c:   8b 85 48 fe ff ff               	mov eax, dword ptr [ebp - 0x1b8]
0x8049d92:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049d95:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049d98:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049d9b:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049d9e:   01 c8                           	add eax, ecx
0x8049da0:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049da3:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049da7:   74 0d                           	je 0x8049db6 <func_1+0x47d>
0x8049da9:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049dad:   74 07                           	je 0x8049db6 <func_1+0x47d>
0x8049daf:   b8 01 00 00 00                  	mov eax, 1
0x8049db4:   eb 05                           	jmp 0x8049dbb <func_1+0x482>
0x8049db6:   b8 00 00 00 00                  	mov eax, 0
0x8049dbb:   3d 32 b2 00 00                  	cmp eax, 0xb232
0x8049dc0:   0f 9e c0                        	setle al
0x8049dc3:   0f b6 d0                        	movzx edx, al
0x8049dc6:   8b 85 44 fe ff ff               	mov eax, dword ptr [ebp - 0x1bc]
0x8049dcc:   98                              	cwde 
0x8049dcd:   29 c2                           	sub edx, eax
0x8049dcf:   89 d0                           	mov eax, edx
0x8049dd1:   83 f8 01                        	cmp eax, 1
0x8049dd4:   0f 9e c0                        	setle al
0x8049dd7:   0f b6 c0                        	movzx eax, al
0x8049dda:   0f b7 95 4e fe ff ff            	movzx edx, word ptr [ebp - 0x1b2]
0x8049de1:   0f be f2                        	movsx esi, dl
0x8049de4:   99                              	cdq 
0x8049de5:   f7 fe                           	idiv esi
0x8049de7:   89 c2                           	mov edx, eax
0x8049de9:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049df0:   39 c2                           	cmp edx, eax
0x8049df2:   0f 8e 55 01 00 00               	jle 0x8049f4d <func_1+0x614>
0x8049df8:   c6 85 2a fe ff ff 98            	mov byte ptr [ebp - 0x1d6], 0x98
0x8049dff:   c7 85 24 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1dc], 1
0x8049e09:   c7 85 20 fe ff ff 1c 3d 02 04   	mov dword ptr [ebp - 0x1e0], 0x4023d1c
0x8049e13:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049e17:   83 c0 01                        	add eax, 1
0x8049e1a:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049e1e:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049e25:   0f 85 ef 00 00 00               	jne 0x8049f1a <func_1+0x5e1>
0x8049e2b:   66 83 bd 4e fe ff ff 00         	cmp word ptr [ebp - 0x1b2], 0
0x8049e33:   0f 85 e4 00 00 00               	jne 0x8049f1d <func_1+0x5e4>
0x8049e39:   0f b7 85 e2 fe ff ff            	movzx eax, word ptr [ebp - 0x11e]
0x8049e40:   88 85 2a fe ff ff               	mov byte ptr [ebp - 0x1d6], al
0x8049e46:   0f be 85 2a fe ff ff            	movsx eax, byte ptr [ebp - 0x1d6]
0x8049e4d:   ba fa ff ff ff                  	mov edx, 0xfffffffa
0x8049e52:   89 c1                           	mov ecx, eax
0x8049e54:   d3 e2                           	shl edx, cl
0x8049e56:   89 d0                           	mov eax, edx
0x8049e58:   85 c0                           	test eax, eax
0x8049e5a:   75 66                           	jne 0x8049ec2 <func_1+0x589>
0x8049e5c:   0f b7 85 4e fe ff ff            	movzx eax, word ptr [ebp - 0x1b2]
0x8049e63:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x8049e69:   0f 94 c0                        	sete al
0x8049e6c:   0f b6 c0                        	movzx eax, al
0x8049e6f:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049e72:   0f 95 c0                        	setne al
0x8049e75:   0f b6 c0                        	movzx eax, al
0x8049e78:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x8049e7e:   83 bd 44 fe ff ff 00            	cmp dword ptr [ebp - 0x1bc], 0
0x8049e85:   74 07                           	je 0x8049e8e <func_1+0x555>
0x8049e87:   b8 01 00 00 00                  	mov eax, 1
0x8049e8c:   eb 05                           	jmp 0x8049e93 <func_1+0x55a>
0x8049e8e:   b8 00 00 00 00                  	mov eax, 0
0x8049e93:   66 89 85 72 ff ff ff            	mov word ptr [ebp - 0x8e], ax
0x8049e9a:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049ea2:   0f 94 c0                        	sete al
0x8049ea5:   0f b6 d0                        	movzx edx, al
0x8049ea8:   0f be 85 2a fe ff ff            	movsx eax, byte ptr [ebp - 0x1d6]
0x8049eaf:   39 c2                           	cmp edx, eax
0x8049eb1:   0f 94 c0                        	sete al
0x8049eb4:   0f b6 d0                        	movzx edx, al
0x8049eb7:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x8049ebe:   39 c2                           	cmp edx, eax
0x8049ec0:   74 07                           	je 0x8049ec9 <func_1+0x590>
0x8049ec2:   b8 01 00 00 00                  	mov eax, 1
0x8049ec7:   eb 05                           	jmp 0x8049ece <func_1+0x595>
0x8049ec9:   b8 00 00 00 00                  	mov eax, 0
0x8049ece:   3d 0e a8 00 00                  	cmp eax, 0xa80e
0x8049ed3:   0f 9f c0                        	setg al
0x8049ed6:   0f b6 c0                        	movzx eax, al
0x8049ed9:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049edc:   74 0d                           	je 0x8049eeb <func_1+0x5b2>
0x8049ede:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049ee2:   74 07                           	je 0x8049eeb <func_1+0x5b2>
0x8049ee4:   b8 01 00 00 00                  	mov eax, 1
0x8049ee9:   eb 05                           	jmp 0x8049ef0 <func_1+0x5b7>
0x8049eeb:   b8 00 00 00 00                  	mov eax, 0
0x8049ef0:   0f bf bd e2 fe ff ff            	movsx edi, word ptr [ebp - 0x11e]
0x8049ef7:   ba 00 00 00 00                  	mov edx, 0
0x8049efc:   f7 f7                           	div edi
0x8049efe:   3d ff 00 00 00                  	cmp eax, 0xff
0x8049f03:   0f 96 c0                        	setbe al
0x8049f06:   0f b6 c0                        	movzx eax, al
0x8049f09:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x8049f0f:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f12:   83 c0 01                        	add eax, 1
0x8049f15:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f18:   eb 04                           	jmp 0x8049f1e <func_1+0x5e5>
0x8049f1a:   90                              	nop 
0x8049f1b:   eb 01                           	jmp 0x8049f1e <func_1+0x5e5>
0x8049f1d:   90                              	nop 
0x8049f1e:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049f21:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x8049f27:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049f2b:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049f2e:   0f 93 c0                        	setae al
0x8049f31:   0f b6 c0                        	movzx eax, al
0x8049f34:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049f37:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x8049f3c:   90                              	nop 
0x8049f3d:   83 ad 20 fe ff ff 01            	sub dword ptr [ebp - 0x1e0], 1
0x8049f44:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x8049f48:   e9 fb 11 00 00                  	jmp 0x804b148 <func_1+0x180f>
0x8049f4d:   c7 85 38 fe ff ff 1b 7a 7d a3   	mov dword ptr [ebp - 0x1c8], 0xa37d7a1b
0x8049f57:   66 c7 85 36 fe ff ff 04 00      	mov word ptr [ebp - 0x1ca], 4
0x8049f60:   c7 85 30 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x1d0], 5
0x8049f6a:   c7 85 2c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1d4], 1
0x8049f74:   0f b7 95 4e fe ff ff            	movzx edx, word ptr [ebp - 0x1b2]
0x8049f7b:   0f bf 85 e2 fe ff ff            	movsx eax, word ptr [ebp - 0x11e]
0x8049f82:   39 c2                           	cmp edx, eax
0x8049f84:   75 07                           	jne 0x8049f8d <func_1+0x654>
0x8049f86:   b8 f8 01 00 00                  	mov eax, 0x1f8
0x8049f8b:   eb 05                           	jmp 0x8049f92 <func_1+0x659>
0x8049f8d:   b8 fc 00 00 00                  	mov eax, 0xfc
0x8049f92:   3b 85 38 fe ff ff               	cmp eax, dword ptr [ebp - 0x1c8]
0x8049f98:   0f 9f c0                        	setg al
0x8049f9b:   0f b6 c0                        	movzx eax, al
0x8049f9e:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049fa1:   83 7d d4 ff                     	cmp dword ptr [ebp - 0x2c], -1
0x8049fa5:   0f 94 c0                        	sete al
0x8049fa8:   0f b6 c0                        	movzx eax, al
0x8049fab:   23 45 84                        	and eax, dword ptr [ebp - 0x7c]
0x8049fae:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x8049fb4:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049fb7:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x8049fbd:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049fc1:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049fc4:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049fc8:   75 69                           	jne 0x804a033 <func_1+0x6fa>
0x8049fca:   8b 85 38 fe ff ff               	mov eax, dword ptr [ebp - 0x1c8]
0x8049fd0:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049fd3:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049fd7:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049fda:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049fdd:   0d 10 df 00 93                  	or eax, 0x9300df10
0x8049fe2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fe5:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049fe8:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049feb:   0f 92 c0                        	setb al
0x8049fee:   0f b6 c0                        	movzx eax, al
0x8049ff1:   66 21 45 ec                     	and word ptr [ebp - 0x14], ax
0x8049ff5:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049ff9:   8d 90 2a 77 00 00               	lea edx, [eax + 0x772a]
0x8049fff:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a006:   39 c2                           	cmp edx, eax
0x804a008:   0f 9f c0                        	setg al
0x804a00b:   0f b6 c0                        	movzx eax, al
0x804a00e:   8b 95 38 fe ff ff               	mov edx, dword ptr [ebp - 0x1c8]
0x804a014:   0f b6 ca                        	movzx ecx, dl
0x804a017:   99                              	cdq 
0x804a018:   f7 f9                           	idiv ecx
0x804a01a:   89 d0                           	mov eax, edx
0x804a01c:   85 c0                           	test eax, eax
0x804a01e:   74 16                           	je 0x804a036 <func_1+0x6fd>
0x804a020:   c6 85 2b fe ff ff 3e            	mov byte ptr [ebp - 0x1d5], 0x3e
0x804a027:   0f b6 85 2b fe ff ff            	movzx eax, byte ptr [ebp - 0x1d5]
0x804a02e:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a031:   eb 39                           	jmp 0x804a06c <func_1+0x733>
0x804a033:   90                              	nop 
0x804a034:   eb 01                           	jmp 0x804a037 <func_1+0x6fe>
0x804a036:   90                              	nop 
0x804a037:   8b 85 40 fe ff ff               	mov eax, dword ptr [ebp - 0x1c0]
0x804a03d:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a040:   0f b7 95 4e fe ff ff            	movzx edx, word ptr [ebp - 0x1b2]
0x804a047:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a04b:   83 c8 01                        	or eax, 1
0x804a04e:   0f be c0                        	movsx eax, al
0x804a051:   23 85 30 fe ff ff               	and eax, dword ptr [ebp - 0x1d0]
0x804a057:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a05a:   0f 97 c0                        	seta al
0x804a05d:   0f b6 c0                        	movzx eax, al
0x804a060:   31 d0                           	xor eax, edx
0x804a062:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a065:   83 ad 2c fe ff ff 01            	sub dword ptr [ebp - 0x1d4], 1
0x804a06c:   c7 45 e8 e3 ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffe3
0x804a073:   83 7d e8 24                     	cmp dword ptr [ebp - 0x18], 0x24
0x804a077:   0f 87 cb 10 00 00               	ja 0x804b148 <func_1+0x180f>
0x804a07d:   0f be 85 44 ff ff ff            	movsx eax, byte ptr [ebp - 0xbc]
0x804a084:   89 85 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], eax
0x804a08a:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x804a091:   89 85 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], eax
0x804a097:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804a09b:   89 85 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], eax
0x804a0a1:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a0a5:   89 85 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], eax
0x804a0ab:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804a0b2:   89 85 00 fe ff ff               	mov dword ptr [ebp - 0x200], eax
0x804a0b8:   0f be 85 49 ff ff ff            	movsx eax, byte ptr [ebp - 0xb7]
0x804a0bf:   89 85 fc fd ff ff               	mov dword ptr [ebp - 0x204], eax
0x804a0c5:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a0cc:   89 85 f8 fd ff ff               	mov dword ptr [ebp - 0x208], eax
0x804a0d2:   0f bf 85 4c ff ff ff            	movsx eax, word ptr [ebp - 0xb4]
0x804a0d9:   89 85 f4 fd ff ff               	mov dword ptr [ebp - 0x20c], eax
0x804a0df:   0f be 95 4f ff ff ff            	movsx edx, byte ptr [ebp - 0xb1]
0x804a0e6:   89 95 f0 fd ff ff               	mov dword ptr [ebp - 0x210], edx
0x804a0ec:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a0f0:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x804a0f7:   89 8d ec fd ff ff               	mov dword ptr [ebp - 0x214], ecx
0x804a0fd:   0f bf 8d 56 ff ff ff            	movsx ecx, word ptr [ebp - 0xaa]
0x804a104:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a108:   89 9d e8 fd ff ff               	mov dword ptr [ebp - 0x218], ebx
0x804a10e:   0f be 5d db                     	movsx ebx, byte ptr [ebp - 0x25]
0x804a112:   0f bf b5 62 ff ff ff            	movsx esi, word ptr [ebp - 0x9e]
0x804a119:   89 b5 e4 fd ff ff               	mov dword ptr [ebp - 0x21c], esi
0x804a11f:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a123:   0f b7 7d ee                     	movzx edi, word ptr [ebp - 0x12]
0x804a127:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804a12d:   0f be 7d cb                     	movsx edi, byte ptr [ebp - 0x35]
0x804a131:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a135:   89 85 dc fd ff ff               	mov dword ptr [ebp - 0x224], eax
0x804a13b:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a142:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a148:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a14b:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a151:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a157:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a15d:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804a163:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a166:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a169:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a16f:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a172:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a178:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a17e:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a184:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a187:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a18a:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a190:   52                              	push edx
0x804a191:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a197:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804a19d:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a1a0:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a1a3:   51                              	push ecx
0x804a1a4:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a1a7:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a1ad:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a1b0:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a1b3:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804a1b9:   53                              	push ebx
0x804a1ba:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a1bd:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a1c0:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a1c6:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a1c9:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804a1cf:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a1d2:   56                              	push esi
0x804a1d3:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804a1d9:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a1dc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a1df:   57                              	push edi
0x804a1e0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a1e3:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804a1e9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a1ec:   50                              	push eax
0x804a1ed:   e8 34 f4 ff ff                  	call 0x8049626 <set_var>
0x804a1f2:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a1f8:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a1ff:   e9 15 11 00 00                  	jmp 0x804b319 <func_1+0x19e0>
0x804a204:   c6 85 c5 fe ff ff 28            	mov byte ptr [ebp - 0x13b], 0x28
0x804a20b:   c6 85 71 ff ff ff e2            	mov byte ptr [ebp - 0x8f], 0xe2
0x804a212:   c7 85 6c ff ff ff 90 32 df 03   	mov dword ptr [ebp - 0x94], 0x3df3290
0x804a21c:   c7 85 68 ff ff ff 80 ea 9c e8   	mov dword ptr [ebp - 0x98], 0xe89cea80
0x804a226:   c6 85 c4 fe ff ff c6            	mov byte ptr [ebp - 0x13c], 0xc6
0x804a22d:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x804a234:   83 7d c4 0a                     	cmp dword ptr [ebp - 0x3c], 0xa
0x804a238:   0f 87 1d 02 00 00               	ja 0x804a45b <func_1+0xb22>
0x804a23e:   66 c7 85 c2 fe ff ff 82 48      	mov word ptr [ebp - 0x13e], 0x4882
0x804a247:   c7 85 bc fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x144], 9
0x804a251:   0f b7 85 d8 fe ff ff            	movzx eax, word ptr [ebp - 0x128]
0x804a258:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a25b:   0f 96 c0                        	setbe al
0x804a25e:   0f b6 c0                        	movzx eax, al
0x804a261:   66 23 85 c2 fe ff ff            	and ax, word ptr [ebp - 0x13e]
0x804a268:   89 c2                           	mov edx, eax
0x804a26a:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a270:   89 c1                           	mov ecx, eax
0x804a272:   89 d0                           	mov eax, edx
0x804a274:   ba 00 00 00 00                  	mov edx, 0
0x804a279:   66 f7 f1                        	div cx
0x804a27c:   89 d0                           	mov eax, edx
0x804a27e:   89 c2                           	mov edx, eax
0x804a280:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804a284:   09 d0                           	or eax, edx
0x804a286:   f7 d0                           	not eax
0x804a288:   89 c2                           	mov edx, eax
0x804a28a:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a291:   89 c1                           	mov ecx, eax
0x804a293:   0f b6 c2                        	movzx eax, dl
0x804a296:   f6 f1                           	div cl
0x804a298:   0f b6 c0                        	movzx eax, al
0x804a29b:   c1 f8 0b                        	sar eax, 0xb
0x804a29e:   83 c8 07                        	or eax, 7
0x804a2a1:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x804a2a4:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a2aa:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804a2ad:   0f b6 85 c5 fe ff ff            	movzx eax, byte ptr [ebp - 0x13b]
0x804a2b4:   88 85 71 ff ff ff               	mov byte ptr [ebp - 0x8f], al
0x804a2ba:   0f be 85 71 ff ff ff            	movsx eax, byte ptr [ebp - 0x8f]
0x804a2c1:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a2c7:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a2cc:   0f 85 88 01 00 00               	jne 0x804a45a <func_1+0xb21>
0x804a2d2:   0f be 85 44 ff ff ff            	movsx eax, byte ptr [ebp - 0xbc]
0x804a2d9:   89 85 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], eax
0x804a2df:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x804a2e6:   89 85 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], eax
0x804a2ec:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804a2f0:   89 85 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], eax
0x804a2f6:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a2fa:   89 85 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], eax
0x804a300:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804a307:   89 85 00 fe ff ff               	mov dword ptr [ebp - 0x200], eax
0x804a30d:   0f be 85 49 ff ff ff            	movsx eax, byte ptr [ebp - 0xb7]
0x804a314:   89 85 fc fd ff ff               	mov dword ptr [ebp - 0x204], eax
0x804a31a:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a321:   89 85 f8 fd ff ff               	mov dword ptr [ebp - 0x208], eax
0x804a327:   0f bf 85 4c ff ff ff            	movsx eax, word ptr [ebp - 0xb4]
0x804a32e:   89 85 f4 fd ff ff               	mov dword ptr [ebp - 0x20c], eax
0x804a334:   0f be 95 4f ff ff ff            	movsx edx, byte ptr [ebp - 0xb1]
0x804a33b:   89 95 f0 fd ff ff               	mov dword ptr [ebp - 0x210], edx
0x804a341:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a345:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x804a34c:   89 8d ec fd ff ff               	mov dword ptr [ebp - 0x214], ecx
0x804a352:   0f bf 8d 56 ff ff ff            	movsx ecx, word ptr [ebp - 0xaa]
0x804a359:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a35d:   89 9d e8 fd ff ff               	mov dword ptr [ebp - 0x218], ebx
0x804a363:   0f be 5d db                     	movsx ebx, byte ptr [ebp - 0x25]
0x804a367:   0f bf b5 62 ff ff ff            	movsx esi, word ptr [ebp - 0x9e]
0x804a36e:   89 b5 e4 fd ff ff               	mov dword ptr [ebp - 0x21c], esi
0x804a374:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a378:   0f b7 7d ee                     	movzx edi, word ptr [ebp - 0x12]
0x804a37c:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804a382:   0f be 7d cb                     	movsx edi, byte ptr [ebp - 0x35]
0x804a386:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a38a:   89 85 dc fd ff ff               	mov dword ptr [ebp - 0x224], eax
0x804a390:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a397:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a39d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a3a0:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a3a6:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a3ac:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a3b2:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804a3b8:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a3bb:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a3be:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a3c4:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a3c7:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a3cd:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a3d3:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a3d9:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a3dc:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a3df:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a3e5:   52                              	push edx
0x804a3e6:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a3ec:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804a3f2:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a3f5:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a3f8:   51                              	push ecx
0x804a3f9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3fc:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a402:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a405:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a408:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804a40e:   53                              	push ebx
0x804a40f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a412:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a415:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a41b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a41e:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804a424:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a427:   56                              	push esi
0x804a428:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804a42e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a431:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a434:   57                              	push edi
0x804a435:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a438:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804a43e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a441:   50                              	push eax
0x804a442:   e8 df f1 ff ff                  	call 0x8049626 <set_var>
0x804a447:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a44d:   66 0f be 85 71 ff ff ff         	movsx ax, byte ptr [ebp - 0x8f]
0x804a455:   e9 bf 0e 00 00                  	jmp 0x804b319 <func_1+0x19e0>
0x804a45a:   90                              	nop 
0x804a45b:   c6 85 d7 fe ff ff ff            	mov byte ptr [ebp - 0x129], 0xff
0x804a462:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a465:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a46b:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a46f:   c6 45 c3 c9                     	mov byte ptr [ebp - 0x3d], 0xc9
0x804a473:   b8 00 00 00 00                  	mov eax, 0
0x804a478:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a47b:   80 bd 71 ff ff ff 00            	cmp byte ptr [ebp - 0x8f], 0
0x804a482:   0f 84 0f 05 00 00               	je 0x804a997 <func_1+0x105e>
0x804a488:   c6 85 b3 fe ff ff fa            	mov byte ptr [ebp - 0x14d], 0xfa
0x804a48f:   c7 85 ac fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x154], 1
0x804a499:   c7 85 a8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x158], 5
0x804a4a3:   c7 85 a4 fe ff ff bb 14 4e 92   	mov dword ptr [ebp - 0x15c], 0x924e14bb
0x804a4ad:   c7 85 a0 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x160], 2
0x804a4b7:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x804a4bb:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a4c2:   e9 2a 02 00 00                  	jmp 0x804a6f1 <func_1+0xdb8>
0x804a4c7:   c7 85 9c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x164], 0
0x804a4d1:   c7 85 98 fe ff ff 89 41 d8 e1   	mov dword ptr [ebp - 0x168], 0xe1d84189
0x804a4db:   c7 85 94 fe ff ff 30 cc 33 24   	mov dword ptr [ebp - 0x16c], 0x2433cc30
0x804a4e5:   c7 85 90 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x170], 0xfffffff6
0x804a4ef:   66 83 7d ec 00                  	cmp word ptr [ebp - 0x14], 0
0x804a4f4:   0f 94 c0                        	sete al
0x804a4f7:   0f b6 c0                        	movzx eax, al
0x804a4fa:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a4fd:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x804a502:   0f 85 e4 01 00 00               	jne 0x804a6ec <func_1+0xdb3>
0x804a508:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a50e:   89 c2                           	mov edx, eax
0x804a510:   80 fa 8c                        	cmp dl, 0x8c
0x804a513:   0f 93 c0                        	setae al
0x804a516:   b9 8c ff ff ff                  	mov ecx, 0xffffff8c
0x804a51b:   0f af c1                        	imul eax, ecx
0x804a51e:   29 c2                           	sub edx, eax
0x804a520:   89 d0                           	mov eax, edx
0x804a522:   80 6d c3 01                     	sub byte ptr [ebp - 0x3d], 1
0x804a526:   38 45 c3                        	cmp byte ptr [ebp - 0x3d], al
0x804a529:   73 1c                           	jae 0x804a547 <func_1+0xc0e>
0x804a52b:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804a52f:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804a533:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a539:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a540:   74 16                           	je 0x804a558 <func_1+0xc1f>
0x804a542:   e9 b7 01 00 00                  	jmp 0x804a6fe <func_1+0xdc5>
0x804a547:   c7 45 f0 4e ba ee 4e            	mov dword ptr [ebp - 0x10], 0x4eeeba4e
0x804a54e:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a552:   0f 85 a5 01 00 00               	jne 0x804a6fd <func_1+0xdc4>
0x804a558:   66 c7 45 ec ed ff               	mov word ptr [ebp - 0x14], 0xffed
0x804a55e:   66 83 7d ec 13                  	cmp word ptr [ebp - 0x14], 0x13
0x804a563:   0f 8e 84 01 00 00               	jle 0x804a6ed <func_1+0xdb4>
0x804a569:   0f be 85 44 ff ff ff            	movsx eax, byte ptr [ebp - 0xbc]
0x804a570:   89 85 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], eax
0x804a576:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x804a57d:   89 85 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], eax
0x804a583:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804a587:   89 85 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], eax
0x804a58d:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a591:   89 85 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], eax
0x804a597:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804a59e:   89 85 00 fe ff ff               	mov dword ptr [ebp - 0x200], eax
0x804a5a4:   0f be 85 49 ff ff ff            	movsx eax, byte ptr [ebp - 0xb7]
0x804a5ab:   89 85 fc fd ff ff               	mov dword ptr [ebp - 0x204], eax
0x804a5b1:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a5b8:   89 85 f8 fd ff ff               	mov dword ptr [ebp - 0x208], eax
0x804a5be:   0f bf 85 4c ff ff ff            	movsx eax, word ptr [ebp - 0xb4]
0x804a5c5:   89 85 f4 fd ff ff               	mov dword ptr [ebp - 0x20c], eax
0x804a5cb:   0f be 95 4f ff ff ff            	movsx edx, byte ptr [ebp - 0xb1]
0x804a5d2:   89 95 f0 fd ff ff               	mov dword ptr [ebp - 0x210], edx
0x804a5d8:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a5dc:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x804a5e3:   89 8d ec fd ff ff               	mov dword ptr [ebp - 0x214], ecx
0x804a5e9:   0f bf 8d 56 ff ff ff            	movsx ecx, word ptr [ebp - 0xaa]
0x804a5f0:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a5f4:   89 9d e8 fd ff ff               	mov dword ptr [ebp - 0x218], ebx
0x804a5fa:   0f be 5d db                     	movsx ebx, byte ptr [ebp - 0x25]
0x804a5fe:   0f bf b5 62 ff ff ff            	movsx esi, word ptr [ebp - 0x9e]
0x804a605:   89 b5 e4 fd ff ff               	mov dword ptr [ebp - 0x21c], esi
0x804a60b:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a60f:   0f b7 7d ee                     	movzx edi, word ptr [ebp - 0x12]
0x804a613:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804a619:   0f be 7d cb                     	movsx edi, byte ptr [ebp - 0x35]
0x804a61d:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a621:   89 85 dc fd ff ff               	mov dword ptr [ebp - 0x224], eax
0x804a627:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a62e:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a634:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a637:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a63d:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a643:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a649:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804a64f:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a652:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a655:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a65b:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a65e:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a664:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a66a:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a670:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a673:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a676:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a67c:   52                              	push edx
0x804a67d:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a683:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804a689:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a68c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a68f:   51                              	push ecx
0x804a690:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a693:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a699:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a69c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a69f:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804a6a5:   53                              	push ebx
0x804a6a6:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6a9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6ac:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a6b2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6b5:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804a6bb:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6be:   56                              	push esi
0x804a6bf:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804a6c5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6c8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6cb:   57                              	push edi
0x804a6cc:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6cf:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804a6d5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6d8:   50                              	push eax
0x804a6d9:   e8 48 ef ff ff                  	call 0x8049626 <set_var>
0x804a6de:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a6e4:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a6e7:   e9 2d 0c 00 00                  	jmp 0x804b319 <func_1+0x19e0>
0x804a6ec:   90                              	nop 
0x804a6ed:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x804a6f1:   83 7d bc 07                     	cmp dword ptr [ebp - 0x44], 7
0x804a6f5:   0f 85 cc fd ff ff               	jne 0x804a4c7 <func_1+0xb8e>
0x804a6fb:   eb 01                           	jmp 0x804a6fe <func_1+0xdc5>
0x804a6fd:   90                              	nop 
0x804a6fe:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a702:   80 bd 71 ff ff ff 00            	cmp byte ptr [ebp - 0x8f], 0
0x804a709:   0f 94 c0                        	sete al
0x804a70c:   0f b6 c0                        	movzx eax, al
0x804a70f:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a712:   0f 9f c0                        	setg al
0x804a715:   0f b6 d0                        	movzx edx, al
0x804a718:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a71f:   0f b7 c0                        	movzx eax, ax
0x804a722:   89 c1                           	mov ecx, eax
0x804a724:   d3 fa                           	sar edx, cl
0x804a726:   89 d0                           	mov eax, edx
0x804a728:   66 31 85 3a ff ff ff            	xor word ptr [ebp - 0xc6], ax
0x804a72f:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a733:   f7 d0                           	not eax
0x804a735:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x804a738:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804a73e:   0f b6 c8                        	movzx ecx, al
0x804a741:   b8 01 00 00 00                  	mov eax, 1
0x804a746:   99                              	cdq 
0x804a747:   f7 f9                           	idiv ecx
0x804a749:   89 d0                           	mov eax, edx
0x804a74b:   89 c2                           	mov edx, eax
0x804a74d:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a753:   21 d0                           	and eax, edx
0x804a755:   89 c1                           	mov ecx, eax
0x804a757:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a75a:   89 c2                           	mov edx, eax
0x804a75c:   89 c8                           	mov eax, ecx
0x804a75e:   0f af c2                        	imul eax, edx
0x804a761:   0f be d0                        	movsx edx, al
0x804a764:   0f b7 85 d8 fe ff ff            	movzx eax, word ptr [ebp - 0x128]
0x804a76b:   0f be c0                        	movsx eax, al
0x804a76e:   89 c1                           	mov ecx, eax
0x804a770:   d3 fa                           	sar edx, cl
0x804a772:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a775:   0f bf d8                        	movsx ebx, ax
0x804a778:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a77c:   21 d0                           	and eax, edx
0x804a77e:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x804a782:   0f b7 4d ee                     	movzx ecx, word ptr [ebp - 0x12]
0x804a786:   b8 01 00 00 00                  	mov eax, 1
0x804a78b:   99                              	cdq 
0x804a78c:   f7 f9                           	idiv ecx
0x804a78e:   89 d0                           	mov eax, edx
0x804a790:   98                              	cwde 
0x804a791:   89 c1                           	mov ecx, eax
0x804a793:   d3 fb                           	sar ebx, cl
0x804a795:   89 da                           	mov edx, ebx
0x804a797:   0f be 85 b3 fe ff ff            	movsx eax, byte ptr [ebp - 0x14d]
0x804a79e:   39 c2                           	cmp edx, eax
0x804a7a0:   75 0d                           	jne 0x804a7af <func_1+0xe76>
0x804a7a2:   80 bd 65 ff ff ff 00            	cmp byte ptr [ebp - 0x9b], 0
0x804a7a9:   0f 84 a3 01 00 00               	je 0x804a952 <func_1+0x1019>
0x804a7af:   c6 85 8e fe ff ff fa            	mov byte ptr [ebp - 0x172], 0xfa
0x804a7b6:   c7 85 88 fe ff ff 52 d5 51 00   	mov dword ptr [ebp - 0x178], 0x51d552
0x804a7c0:   c7 85 84 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x17c], 5
0x804a7ca:   c7 85 80 fe ff ff 8a ef 76 6c   	mov dword ptr [ebp - 0x180], 0x6c76ef8a
0x804a7d4:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a7da:   0f be c0                        	movsx eax, al
0x804a7dd:   f7 d8                           	neg eax
0x804a7df:   31 85 74 ff ff ff               	xor dword ptr [ebp - 0x8c], eax
0x804a7e5:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a7e9:   74 07                           	je 0x804a7f2 <func_1+0xeb9>
0x804a7eb:   80 bd 8e fe ff ff 00            	cmp byte ptr [ebp - 0x172], 0
0x804a7f2:   0f b6 55 c3                     	movzx edx, byte ptr [ebp - 0x3d]
0x804a7f6:   0f b7 85 ce fe ff ff            	movzx eax, word ptr [ebp - 0x132]
0x804a7fd:   0f b6 c0                        	movzx eax, al
0x804a800:   89 c1                           	mov ecx, eax
0x804a802:   d3 e2                           	shl edx, cl
0x804a804:   89 d0                           	mov eax, edx
0x804a806:   83 c0 01                        	add eax, 1
0x804a809:   c0 f8 03                        	sar al, 3
0x804a80c:   0f b6 95 65 ff ff ff            	movzx edx, byte ptr [ebp - 0x9b]
0x804a813:   0f af c2                        	imul eax, edx
0x804a816:   0f be c0                        	movsx eax, al
0x804a819:   f7 d8                           	neg eax
0x804a81b:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a81e:   66 83 bd 3a ff ff ff 00         	cmp word ptr [ebp - 0xc6], 0
0x804a826:   90                              	nop 
0x804a827:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804a82e:   eb 54                           	jmp 0x804a884 <func_1+0xf4b>
0x804a830:   c6 85 73 fe ff ff 8b            	mov byte ptr [ebp - 0x18d], 0x8b
0x804a837:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a83b:   21 45 84                        	and dword ptr [ebp - 0x7c], eax
0x804a83e:   66 83 bd e2 fe ff ff 01         	cmp word ptr [ebp - 0x11e], 1
0x804a846:   0f 9f c0                        	setg al
0x804a849:   0f b6 c0                        	movzx eax, al
0x804a84c:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a84f:   0f 94 c0                        	sete al
0x804a852:   0f b6 c0                        	movzx eax, al
0x804a855:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a85b:   0f b6 85 73 fe ff ff            	movzx eax, byte ptr [ebp - 0x18d]
0x804a862:   0f b6 c0                        	movzx eax, al
0x804a865:   01 c0                           	add eax, eax
0x804a867:   89 c2                           	mov edx, eax
0x804a869:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a86c:   01 d0                           	add eax, edx
0x804a86e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a871:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a878:   74 02                           	je 0x804a87c <func_1+0xf43>
0x804a87a:   eb ab                           	jmp 0x804a827 <func_1+0xeee>
0x804a87c:   80 45 ab 01                     	add byte ptr [ebp - 0x55], 1
0x804a880:   83 45 ac 08                     	add dword ptr [ebp - 0x54], 8
0x804a884:   83 7d ac 30                     	cmp dword ptr [ebp - 0x54], 0x30
0x804a888:   75 a6                           	jne 0x804a830 <func_1+0xef7>
0x804a88a:   0f be 85 71 ff ff ff            	movsx eax, byte ptr [ebp - 0x8f]
0x804a891:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a897:   0f 92 c0                        	setb al
0x804a89a:   0f b6 c0                        	movzx eax, al
0x804a89d:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804a8a0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a8a3:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a8a6:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a8a9:   0f b7 d0                        	movzx edx, ax
0x804a8ac:   66 0f be 45 cb                  	movsx ax, byte ptr [ebp - 0x35]
0x804a8b1:   0f b7 c0                        	movzx eax, ax
0x804a8b4:   89 c1                           	mov ecx, eax
0x804a8b6:   d3 fa                           	sar edx, cl
0x804a8b8:   89 d0                           	mov eax, edx
0x804a8ba:   85 c0                           	test eax, eax
0x804a8bc:   74 10                           	je 0x804a8ce <func_1+0xf95>
0x804a8be:   c7 85 74 fe ff ff c5 b2 08 7c   	mov dword ptr [ebp - 0x18c], 0x7c08b2c5
0x804a8c8:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a8cc:   eb 7a                           	jmp 0x804a948 <func_1+0x100f>
0x804a8ce:   c7 85 7c fe ff ff 81 e0 5b 3f   	mov dword ptr [ebp - 0x184], 0x3f5be081
0x804a8d8:   c7 85 78 fe ff ff 62 46 9a ea   	mov dword ptr [ebp - 0x188], 0xea9a4662
0x804a8e2:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a8e6:   0f be d0                        	movsx edx, al
0x804a8e9:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a8ed:   32 85 71 ff ff ff               	xor al, byte ptr [ebp - 0x8f]
0x804a8f3:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x804a8f6:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a8fa:   0f be c0                        	movsx eax, al
0x804a8fd:   89 c1                           	mov ecx, eax
0x804a8ff:   d3 fa                           	sar edx, cl
0x804a901:   89 d0                           	mov eax, edx
0x804a903:   89 c2                           	mov edx, eax
0x804a905:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x804a90b:   33 45 cc                        	xor eax, dword ptr [ebp - 0x34]
0x804a90e:   09 d0                           	or eax, edx
0x804a910:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a916:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x804a91d:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a924:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a927:   0f 9d c0                        	setge al
0x804a92a:   0f b6 d0                        	movzx edx, al
0x804a92d:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a931:   39 c2                           	cmp edx, eax
0x804a933:   0f 9e c0                        	setle al
0x804a936:   0f b6 c0                        	movzx eax, al
0x804a939:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a93c:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a942:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a948:   66 83 45 92 01                  	add word ptr [ebp - 0x6e], 1
0x804a94d:   e9 83 02 00 00                  	jmp 0x804abd5 <func_1+0x129c>
0x804a952:   c6 85 8f fe ff ff b5            	mov byte ptr [ebp - 0x171], 0xb5
0x804a959:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x804a963:   0f b6 85 8f fe ff ff            	movzx eax, byte ptr [ebp - 0x171]
0x804a96a:   31 85 a0 fe ff ff               	xor dword ptr [ebp - 0x160], eax
0x804a970:   66 c7 85 26 ff ff ff 01 00      	mov word ptr [ebp - 0xda], 1
0x804a979:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a97d:   0f 94 c0                        	sete al
0x804a980:   0f b6 c0                        	movzx eax, al
0x804a983:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804a986:   83 f8 ff                        	cmp eax, -1
0x804a989:   0f 94 c0                        	sete al
0x804a98c:   0f b6 c0                        	movzx eax, al
0x804a98f:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a992:   e9 3e 02 00 00                  	jmp 0x804abd5 <func_1+0x129c>
0x804a997:   c6 85 67 ff ff ff ff            	mov byte ptr [ebp - 0x99], 0xff
0x804a99e:   66 c7 85 ba fe ff ff a2 76      	mov word ptr [ebp - 0x146], 0x76a2
0x804a9a7:   0f be 85 71 ff ff ff            	movsx eax, byte ptr [ebp - 0x8f]
0x804a9ae:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a9b4:   0f 9c c0                        	setl al
0x804a9b7:   0f b6 d0                        	movzx edx, al
0x804a9ba:   80 45 c3 01                     	add byte ptr [ebp - 0x3d], 1
0x804a9be:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804a9c2:   75 07                           	jne 0x804a9cb <func_1+0x1092>
0x804a9c4:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x804a9c9:   74 07                           	je 0x804a9d2 <func_1+0x1099>
0x804a9cb:   b8 01 00 00 00                  	mov eax, 1
0x804a9d0:   eb 05                           	jmp 0x804a9d7 <func_1+0x109e>
0x804a9d2:   b8 00 00 00 00                  	mov eax, 0
0x804a9d7:   c1 e0 04                        	shl eax, 4
0x804a9da:   0f b6 c8                        	movzx ecx, al
0x804a9dd:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a9e3:   3b 45 80                        	cmp eax, dword ptr [ebp - 0x80]
0x804a9e6:   0f 9c c0                        	setl al
0x804a9e9:   0f b6 c0                        	movzx eax, al
0x804a9ec:   0f af c1                        	imul eax, ecx
0x804a9ef:   85 c0                           	test eax, eax
0x804a9f1:   75 09                           	jne 0x804a9fc <func_1+0x10c3>
0x804a9f3:   83 bd e4 fe ff ff 00            	cmp dword ptr [ebp - 0x11c], 0
0x804a9fa:   74 07                           	je 0x804aa03 <func_1+0x10ca>
0x804a9fc:   b8 01 00 00 00                  	mov eax, 1
0x804aa01:   eb 05                           	jmp 0x804aa08 <func_1+0x10cf>
0x804aa03:   b8 00 00 00 00                  	mov eax, 0
0x804aa08:   89 c1                           	mov ecx, eax
0x804aa0a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804aa0d:   09 c8                           	or eax, ecx
0x804aa0f:   f7 d0                           	not eax
0x804aa11:   0f b7 c0                        	movzx eax, ax
0x804aa14:   89 c1                           	mov ecx, eax
0x804aa16:   d3 e2                           	shl edx, cl
0x804aa18:   89 d0                           	mov eax, edx
0x804aa1a:   85 c0                           	test eax, eax
0x804aa1c:   0f 84 d2 00 00 00               	je 0x804aaf4 <func_1+0x11bb>
0x804aa22:   c7 85 b4 fe ff ff 32 4d 13 90   	mov dword ptr [ebp - 0x14c], 0x90134d32
0x804aa2c:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804aa33:   e9 b0 00 00 00                  	jmp 0x804aae8 <func_1+0x11af>
0x804aa38:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804aa3e:   89 c1                           	mov ecx, eax
0x804aa40:   81 7d d4 ed 00 00 00            	cmp dword ptr [ebp - 0x2c], 0xed
0x804aa47:   0f 96 c0                        	setbe al
0x804aa4a:   0f b6 c0                        	movzx eax, al
0x804aa4d:   31 45 84                        	xor dword ptr [ebp - 0x7c], eax
0x804aa50:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804aa53:   f7 d0                           	not eax
0x804aa55:   0a 85 71 ff ff ff               	or al, byte ptr [ebp - 0x8f]
0x804aa5b:   83 f0 de                        	xor eax, 0xffffffde
0x804aa5e:   89 c2                           	mov edx, eax
0x804aa60:   0f b6 c1                        	movzx eax, cl
0x804aa63:   f6 f2                           	div dl
0x804aa65:   0f b6 c4                        	movzx eax, ah
0x804aa68:   0f b6 c0                        	movzx eax, al
0x804aa6b:   0d c7 00 39 93                  	or eax, 0x933900c7
0x804aa70:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804aa73:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804aa79:   31 85 6c ff ff ff               	xor dword ptr [ebp - 0x94], eax
0x804aa7f:   66 0f be 85 25 ff ff ff         	movsx ax, byte ptr [ebp - 0xdb]
0x804aa87:   66 39 85 e2 fe ff ff            	cmp word ptr [ebp - 0x11e], ax
0x804aa8e:   75 10                           	jne 0x804aaa0 <func_1+0x1167>
0x804aa90:   83 bd b4 fe ff ff 00            	cmp dword ptr [ebp - 0x14c], 0
0x804aa97:   74 07                           	je 0x804aaa0 <func_1+0x1167>
0x804aa99:   b8 01 00 00 00                  	mov eax, 1
0x804aa9e:   eb 05                           	jmp 0x804aaa5 <func_1+0x116c>
0x804aaa0:   b8 00 00 00 00                  	mov eax, 0
0x804aaa5:   f7 d8                           	neg eax
0x804aaa7:   0f b6 d0                        	movzx edx, al
0x804aaaa:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804aaad:   0f b6 c0                        	movzx eax, al
0x804aab0:   0f af c2                        	imul eax, edx
0x804aab3:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804aab6:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804aab9:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x804aabc:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804aabf:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804aac2:   89 c1                           	mov ecx, eax
0x804aac4:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x804aacb:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804aace:   0f 92 c0                        	setb al
0x804aad1:   0f b6 c0                        	movzx eax, al
0x804aad4:   89 c2                           	mov edx, eax
0x804aad6:   89 c8                           	mov eax, ecx
0x804aad8:   0f af c2                        	imul eax, edx
0x804aadb:   83 e8 01                        	sub eax, 1
0x804aade:   88 85 67 ff ff ff               	mov byte ptr [ebp - 0x99], al
0x804aae4:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x804aae8:   83 7d 88 36                     	cmp dword ptr [ebp - 0x78], 0x36
0x804aaec:   0f 86 46 ff ff ff               	jbe 0x804aa38 <func_1+0x10ff>
0x804aaf2:   eb 21                           	jmp 0x804ab15 <func_1+0x11dc>
0x804aaf4:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804aaf7:   88 85 7b ff ff ff               	mov byte ptr [ebp - 0x85], al
0x804aafd:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804ab04:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804ab07:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804ab0a:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804ab0d:   80 bd d7 fe ff ff 00            	cmp byte ptr [ebp - 0x129], 0
0x804ab14:   90                              	nop 
0x804ab15:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804ab18:   8d 50 01                        	lea edx, [eax + 1]
0x804ab1b:   89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x804ab1e:   83 7d 80 01                     	cmp dword ptr [ebp - 0x80], 1
0x804ab22:   0f bf 95 ba fe ff ff            	movsx edx, word ptr [ebp - 0x146]
0x804ab29:   8b 4d 98                        	mov ecx, dword ptr [ebp - 0x68]
0x804ab2c:   0f bf c9                        	movsx ecx, cx
0x804ab2f:   83 c1 01                        	add ecx, 1
0x804ab32:   21 ca                           	and edx, ecx
0x804ab34:   21 95 74 ff ff ff               	and dword ptr [ebp - 0x8c], edx
0x804ab3a:   83 bd 74 ff ff ff 7f            	cmp dword ptr [ebp - 0x8c], 0x7f
0x804ab41:   0f 94 c2                        	sete dl
0x804ab44:   0f b6 d2                        	movzx edx, dl
0x804ab47:   09 c2                           	or edx, eax
0x804ab49:   0f be 85 71 ff ff ff            	movsx eax, byte ptr [ebp - 0x8f]
0x804ab50:   39 c2                           	cmp edx, eax
0x804ab52:   0f 97 c0                        	seta al
0x804ab55:   0f b6 c0                        	movzx eax, al
0x804ab58:   8b 95 e4 fe ff ff               	mov edx, dword ptr [ebp - 0x11c]
0x804ab5e:   0f bf f2                        	movsx esi, dx
0x804ab61:   99                              	cdq 
0x804ab62:   f7 fe                           	idiv esi
0x804ab64:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804ab67:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x804ab71:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804ab75:   74 07                           	je 0x804ab7e <func_1+0x1245>
0x804ab77:   ba 01 00 00 00                  	mov edx, 1
0x804ab7c:   eb 05                           	jmp 0x804ab83 <func_1+0x124a>
0x804ab7e:   ba 00 00 00 00                  	mov edx, 0
0x804ab83:   0f bf 85 e2 fe ff ff            	movsx eax, word ptr [ebp - 0x11e]
0x804ab8a:   39 c2                           	cmp edx, eax
0x804ab8c:   0f 9f c0                        	setg al
0x804ab8f:   89 c2                           	mov edx, eax
0x804ab91:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804ab98:   31 d0                           	xor eax, edx
0x804ab9a:   0f be c0                        	movsx eax, al
0x804ab9d:   0f be bd 71 ff ff ff            	movsx edi, byte ptr [ebp - 0x8f]
0x804aba4:   99                              	cdq 
0x804aba5:   f7 ff                           	idiv edi
0x804aba7:   89 c2                           	mov edx, eax
0x804aba9:   0f b7 85 d8 fe ff ff            	movzx eax, word ptr [ebp - 0x128]
0x804abb0:   39 c2                           	cmp edx, eax
0x804abb2:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804abb9:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804abc0:   23 45 ac                        	and eax, dword ptr [ebp - 0x54]
0x804abc3:   85 c0                           	test eax, eax
0x804abc5:   74 04                           	je 0x804abcb <func_1+0x1292>
0x804abc7:   80 7d cb 00                     	cmp byte ptr [ebp - 0x35], 0
0x804abcb:   c7 85 68 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x98], 5
0x804abd5:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804abdc:   0f 84 fb 01 00 00               	je 0x804addd <func_1+0x14a4>
0x804abe2:   c6 85 5f fe ff ff bb            	mov byte ptr [ebp - 0x1a1], 0xbb
0x804abe9:   66 c7 45 d2 00 00               	mov word ptr [ebp - 0x2e], 0
0x804abef:   e9 d9 01 00 00                  	jmp 0x804adcd <func_1+0x1494>
0x804abf4:   c7 85 58 fe ff ff 99 22 39 94   	mov dword ptr [ebp - 0x1a8], 0x94392299
0x804abfe:   c7 85 54 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x1ac], 9
0x804ac08:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804ac0e:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x804ac12:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804ac18:   0f b7 d8                        	movzx ebx, ax
0x804ac1b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804ac1e:   88 85 10 fe ff ff               	mov byte ptr [ebp - 0x1f0], al
0x804ac24:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804ac2a:   0f bf d0                        	movsx edx, ax
0x804ac2d:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804ac31:   89 c1                           	mov ecx, eax
0x804ac33:   d3 e2                           	shl edx, cl
0x804ac35:   89 d0                           	mov eax, edx
0x804ac37:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804ac3a:   0f 92 c0                        	setb al
0x804ac3d:   0f b6 c0                        	movzx eax, al
0x804ac40:   89 c2                           	mov edx, eax
0x804ac42:   0f b6 85 10 fe ff ff            	movzx eax, byte ptr [ebp - 0x1f0]
0x804ac49:   0f af c2                        	imul eax, edx
0x804ac4c:   0f b6 d0                        	movzx edx, al
0x804ac4f:   89 d0                           	mov eax, edx
0x804ac51:   c1 e0 04                        	shl eax, 4
0x804ac54:   29 d0                           	sub eax, edx
0x804ac56:   c1 e0 02                        	shl eax, 2
0x804ac59:   0f b7 c0                        	movzx eax, ax
0x804ac5c:   0f af c3                        	imul eax, ebx
0x804ac5f:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804ac65:   0f 92 c0                        	setb al
0x804ac68:   0f b6 c0                        	movzx eax, al
0x804ac6b:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804ac71:   0f b6 85 5f fe ff ff            	movzx eax, byte ptr [ebp - 0x1a1]
0x804ac78:   23 85 58 fe ff ff               	and eax, dword ptr [ebp - 0x1a8]
0x804ac7e:   39 85 54 fe ff ff               	cmp dword ptr [ebp - 0x1ac], eax
0x804ac84:   0f 95 c0                        	setne al
0x804ac87:   0f b6 d0                        	movzx edx, al
0x804ac8a:   0f b6 85 5f fe ff ff            	movzx eax, byte ptr [ebp - 0x1a1]
0x804ac91:   89 c1                           	mov ecx, eax
0x804ac93:   d3 fa                           	sar edx, cl
0x804ac95:   89 d0                           	mov eax, edx
0x804ac97:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804ac9a:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804ac9e:   0b 85 34 ff ff ff               	or eax, dword ptr [ebp - 0xcc]
0x804aca4:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804acaa:   0f 95 c0                        	setne al
0x804acad:   0f b6 c0                        	movzx eax, al
0x804acb0:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x804acb3:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804acb6:   21 85 68 ff ff ff               	and dword ptr [ebp - 0x98], eax
0x804acbc:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804acbf:   0f b7 c0                        	movzx eax, ax
0x804acc2:   ba 01 00 00 00                  	mov edx, 1
0x804acc7:   29 c2                           	sub edx, eax
0x804acc9:   0f be 85 c5 fe ff ff            	movsx eax, byte ptr [ebp - 0x13b]
0x804acd0:   39 c2                           	cmp edx, eax
0x804acd2:   7e 07                           	jle 0x804acdb <func_1+0x13a2>
0x804acd4:   b8 fa 01 00 00                  	mov eax, 0x1fa
0x804acd9:   eb 05                           	jmp 0x804ace0 <func_1+0x13a7>
0x804acdb:   b8 fd 00 00 00                  	mov eax, 0xfd
0x804ace0:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804ace6:   c7 85 50 fe ff ff bc ba d8 8a   	mov dword ptr [ebp - 0x1b0], 0x8ad8babc
0x804acf0:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804acf7:   74 10                           	je 0x804ad09 <func_1+0x13d0>
0x804acf9:   83 bd 50 fe ff ff 00            	cmp dword ptr [ebp - 0x1b0], 0
0x804ad00:   74 07                           	je 0x804ad09 <func_1+0x13d0>
0x804ad02:   b9 01 00 00 00                  	mov ecx, 1
0x804ad07:   eb 05                           	jmp 0x804ad0e <func_1+0x13d5>
0x804ad09:   b9 00 00 00 00                  	mov ecx, 0
0x804ad0e:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804ad11:   99                              	cdq 
0x804ad12:   f7 7d 98                        	idiv dword ptr [ebp - 0x68]
0x804ad15:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804ad1c:   39 c2                           	cmp edx, eax
0x804ad1e:   0f 95 c0                        	setne al
0x804ad21:   88 85 24 ff ff ff               	mov byte ptr [ebp - 0xdc], al
0x804ad27:   0f b6 85 24 ff ff ff            	movzx eax, byte ptr [ebp - 0xdc]
0x804ad2e:   23 45 cc                        	and eax, dword ptr [ebp - 0x34]
0x804ad31:   89 c2                           	mov edx, eax
0x804ad33:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804ad37:   39 c2                           	cmp edx, eax
0x804ad39:   0f 92 c0                        	setb al
0x804ad3c:   0f b6 c0                        	movzx eax, al
0x804ad3f:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x804ad42:   0f b7 f2                        	movzx esi, dx
0x804ad45:   99                              	cdq 
0x804ad46:   f7 fe                           	idiv esi
0x804ad48:   39 c1                           	cmp ecx, eax
0x804ad4a:   0f 9e c0                        	setle al
0x804ad4d:   0f b6 c0                        	movzx eax, al
0x804ad50:   39 85 50 fe ff ff               	cmp dword ptr [ebp - 0x1b0], eax
0x804ad56:   0f 95 c0                        	setne al
0x804ad59:   0f b6 c0                        	movzx eax, al
0x804ad5c:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804ad5f:   0f 9f c0                        	setg al
0x804ad62:   0f b6 d0                        	movzx edx, al
0x804ad65:   0f b6 85 5f fe ff ff            	movzx eax, byte ptr [ebp - 0x1a1]
0x804ad6c:   39 c2                           	cmp edx, eax
0x804ad6e:   0f 94 c0                        	sete al
0x804ad71:   0f b6 c0                        	movzx eax, al
0x804ad74:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x804ad77:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804ad7a:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804ad7d:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ad80:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804ad86:   8b 95 54 fe ff ff               	mov edx, dword ptr [ebp - 0x1ac]
0x804ad8c:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804ad8f:   29 c2                           	sub edx, eax
0x804ad91:   89 d0                           	mov eax, edx
0x804ad93:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804ad96:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x804ada0:   c7 45 ac e4 ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffe4
0x804ada7:   eb 0b                           	jmp 0x804adb4 <func_1+0x147b>
0x804ada9:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804adad:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804adb0:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804adb4:   83 7d ac 34                     	cmp dword ptr [ebp - 0x54], 0x34
0x804adb8:   76 ef                           	jbe 0x804ada9 <func_1+0x1470>
0x804adba:   66 83 bd 54 ff ff ff 00         	cmp word ptr [ebp - 0xac], 0
0x804adc2:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804adc6:   83 e8 09                        	sub eax, 9
0x804adc9:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804adcd:   66 83 7d d2 f7                  	cmp word ptr [ebp - 0x2e], -9
0x804add2:   0f 85 1c fe ff ff               	jne 0x804abf4 <func_1+0x12bb>
0x804add8:   e9 6b 03 00 00                  	jmp 0x804b148 <func_1+0x180f>
0x804addd:   c6 85 72 fe ff ff 71            	mov byte ptr [ebp - 0x18e], 0x71
0x804ade4:   66 c7 85 70 fe ff ff a9 f3      	mov word ptr [ebp - 0x190], 0xf3a9
0x804aded:   c6 85 66 ff ff ff 5e            	mov byte ptr [ebp - 0x9a], 0x5e
0x804adf4:   c7 85 6c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x194], 0xffffffff
0x804adfe:   66 c7 85 6a fe ff ff 72 15      	mov word ptr [ebp - 0x196], 0x1572
0x804ae07:   66 c7 85 68 fe ff ff 01 00      	mov word ptr [ebp - 0x198], 1
0x804ae10:   c6 85 67 fe ff ff 00            	mov byte ptr [ebp - 0x199], 0
0x804ae17:   83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x804ae1b:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804ae1e:   83 c8 d2                        	or eax, 0xffffffd2
0x804ae21:   89 c2                           	mov edx, eax
0x804ae23:   0f b6 85 72 fe ff ff            	movzx eax, byte ptr [ebp - 0x18e]
0x804ae2a:   01 d0                           	add eax, edx
0x804ae2c:   0f b6 d0                        	movzx edx, al
0x804ae2f:   0f b6 85 c5 fe ff ff            	movzx eax, byte ptr [ebp - 0x13b]
0x804ae36:   0f b6 c0                        	movzx eax, al
0x804ae39:   89 c1                           	mov ecx, eax
0x804ae3b:   d3 e2                           	shl edx, cl
0x804ae3d:   89 d0                           	mov eax, edx
0x804ae3f:   0f b6 d0                        	movzx edx, al
0x804ae42:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804ae49:   0f b6 c0                        	movzx eax, al
0x804ae4c:   29 c2                           	sub edx, eax
0x804ae4e:   89 d0                           	mov eax, edx
0x804ae50:   66 83 45 ee 01                  	add word ptr [ebp - 0x12], 1
0x804ae55:   89 c2                           	mov edx, eax
0x804ae57:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804ae5b:   21 d0                           	and eax, edx
0x804ae5d:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x804ae60:   b8 98 7b 32 c2                  	mov eax, 0xc2327b98
0x804ae65:   23 85 6c ff ff ff               	and eax, dword ptr [ebp - 0x94]
0x804ae6b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804ae6e:   0f bf 85 70 fe ff ff            	movsx eax, word ptr [ebp - 0x190]
0x804ae75:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804ae7b:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804ae82:   75 4f                           	jne 0x804aed3 <func_1+0x159a>
0x804ae84:   0f b6 85 72 fe ff ff            	movzx eax, byte ptr [ebp - 0x18e]
0x804ae8b:   ba 73 00 00 00                  	mov edx, 0x73
0x804ae90:   0f af c2                        	imul eax, edx
0x804ae93:   0f be c0                        	movsx eax, al
0x804ae96:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x804ae9a:   0f be fa                        	movsx edi, dl
0x804ae9d:   99                              	cdq 
0x804ae9e:   f7 ff                           	idiv edi
0x804aea0:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804aea6:   0f 96 c0                        	setbe al
0x804aea9:   0f b6 d0                        	movzx edx, al
0x804aeac:   0f b6 85 c4 fe ff ff            	movzx eax, byte ptr [ebp - 0x13c]
0x804aeb3:   09 d0                           	or eax, edx
0x804aeb5:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804aebb:   7c 19                           	jl 0x804aed6 <func_1+0x159d>
0x804aebd:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804aec1:   75 13                           	jne 0x804aed6 <func_1+0x159d>
0x804aec3:   66 83 bd 62 ff ff ff 00         	cmp word ptr [ebp - 0x9e], 0
0x804aecb:   0f 84 77 01 00 00               	je 0x804b048 <func_1+0x170f>
0x804aed1:   eb 03                           	jmp 0x804aed6 <func_1+0x159d>
0x804aed3:   90                              	nop 
0x804aed4:   eb 01                           	jmp 0x804aed7 <func_1+0x159e>
0x804aed6:   90                              	nop 
0x804aed7:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804aedb:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x804aee1:   66 c7 45 ec 01 00               	mov word ptr [ebp - 0x14], 1
0x804aee7:   80 bd 4f ff ff ff 00            	cmp byte ptr [ebp - 0xb1], 0
0x804aeee:   75 08                           	jne 0x804aef8 <func_1+0x15bf>
0x804aef0:   66 83 bd d8 fe ff ff 00         	cmp word ptr [ebp - 0x128], 0
0x804aef8:   90                              	nop 
0x804aef9:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804aeff:   0f b7 c0                        	movzx eax, ax
0x804af02:   ba 04 00 00 00                  	mov edx, 4
0x804af07:   89 c1                           	mov ecx, eax
0x804af09:   d3 e2                           	shl edx, cl
0x804af0b:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804af0f:   09 d0                           	or eax, edx
0x804af11:   3d c0 0f 66 8d                  	cmp eax, 0x8d660fc0
0x804af16:   0f 97 c0                        	seta al
0x804af19:   0f b6 c0                        	movzx eax, al
0x804af1c:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x804af1f:   85 c0                           	test eax, eax
0x804af21:   0f 95 c0                        	setne al
0x804af24:   0f b6 c0                        	movzx eax, al
0x804af27:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804af2d:   0f be 85 72 fe ff ff            	movsx eax, byte ptr [ebp - 0x18e]
0x804af34:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804af3a:   0f be 85 71 ff ff ff            	movsx eax, byte ptr [ebp - 0x8f]
0x804af41:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804af44:   66 c7 85 72 ff ff ff 00 00      	mov word ptr [ebp - 0x8e], 0
0x804af4d:   e9 e6 00 00 00                  	jmp 0x804b038 <func_1+0x16ff>
0x804af52:   66 c7 85 64 fe ff ff 01 00      	mov word ptr [ebp - 0x19c], 1
0x804af5b:   c7 85 60 fe ff ff 3c b8 2d 51   	mov dword ptr [ebp - 0x1a0], 0x512db83c
0x804af65:   80 ad 66 ff ff ff 01            	sub byte ptr [ebp - 0x9a], 1
0x804af6c:   c7 85 6c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x194], 0xffffffff
0x804af76:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804af79:   89 c2                           	mov edx, eax
0x804af7b:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804af7e:   f7 d8                           	neg eax
0x804af80:   83 f8 fe                        	cmp eax, -2
0x804af83:   0f 94 c0                        	sete al
0x804af86:   0f b6 c0                        	movzx eax, al
0x804af89:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804af8c:   0f 92 c0                        	setb al
0x804af8f:   0f b6 c0                        	movzx eax, al
0x804af92:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804af98:   83 bd 60 fe ff ff 00            	cmp dword ptr [ebp - 0x1a0], 0
0x804af9f:   74 1a                           	je 0x804afbb <func_1+0x1682>
0x804afa1:   66 83 bd 68 fe ff ff 00         	cmp word ptr [ebp - 0x198], 0
0x804afa9:   74 10                           	je 0x804afbb <func_1+0x1682>
0x804afab:   80 bd 67 fe ff ff 00            	cmp byte ptr [ebp - 0x199], 0
0x804afb2:   74 07                           	je 0x804afbb <func_1+0x1682>
0x804afb4:   b8 01 00 00 00                  	mov eax, 1
0x804afb9:   eb 05                           	jmp 0x804afc0 <func_1+0x1687>
0x804afbb:   b8 00 00 00 00                  	mov eax, 0
0x804afc0:   83 f8 fb                        	cmp eax, -5
0x804afc3:   0f 9d c0                        	setge al
0x804afc6:   0f b6 c0                        	movzx eax, al
0x804afc9:   01 d0                           	add eax, edx
0x804afcb:   0f b7 c0                        	movzx eax, ax
0x804afce:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804afd4:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804afda:   89 c2                           	mov edx, eax
0x804afdc:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804afe3:   29 c2                           	sub edx, eax
0x804afe5:   89 d0                           	mov eax, edx
0x804afe7:   0f b7 d0                        	movzx edx, ax
0x804afea:   0f b6 85 c4 fe ff ff            	movzx eax, byte ptr [ebp - 0x13c]
0x804aff1:   89 c1                           	mov ecx, eax
0x804aff3:   d3 e2                           	shl edx, cl
0x804aff5:   89 d0                           	mov eax, edx
0x804aff7:   d0 e8                           	shr al, 1
0x804aff9:   0f b6 c0                        	movzx eax, al
0x804affc:   66 69 c0 bb 00                  	imul ax, ax, 0xbb
0x804b001:   66 c1 e8 08                     	shr ax, 8
0x804b005:   c0 e8 03                        	shr al, 3
0x804b008:   0f b6 d0                        	movzx edx, al
0x804b00b:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804b012:   0f b6 c0                        	movzx eax, al
0x804b015:   89 c1                           	mov ecx, eax
0x804b017:   d3 fa                           	sar edx, cl
0x804b019:   89 d0                           	mov eax, edx
0x804b01b:   8b 75 c4                        	mov esi, dword ptr [ebp - 0x3c]
0x804b01e:   99                              	cdq 
0x804b01f:   f7 fe                           	idiv esi
0x804b021:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804b027:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804b02e:   83 c0 01                        	add eax, 1
0x804b031:   66 89 85 72 ff ff ff            	mov word ptr [ebp - 0x8e], ax
0x804b038:   66 83 bd 72 ff ff ff 05         	cmp word ptr [ebp - 0x8e], 5
0x804b040:   0f 86 0c ff ff ff               	jbe 0x804af52 <func_1+0x1619>
0x804b046:   eb 0f                           	jmp 0x804b057 <func_1+0x171e>
0x804b048:   0f bf 85 70 fe ff ff            	movsx eax, word ptr [ebp - 0x190]
0x804b04f:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804b052:   e9 f1 00 00 00                  	jmp 0x804b148 <func_1+0x180f>
0x804b057:   e9 ec 00 00 00                  	jmp 0x804b148 <func_1+0x180f>
0x804b05c:   c7 85 14 ff ff ff 6f 37 47 1a   	mov dword ptr [ebp - 0xec], 0x1a47376f
0x804b066:   c7 85 10 ff ff ff aa 9c 0a e5   	mov dword ptr [ebp - 0xf0], 0xe50a9caa
0x804b070:   c7 85 0c ff ff ff 0b ee 73 4f   	mov dword ptr [ebp - 0xf4], 0x4f73ee0b
0x804b07a:   c7 85 08 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf8], 1
0x804b084:   c7 85 04 ff ff ff 04 f4 a5 90   	mov dword ptr [ebp - 0xfc], 0x90a5f404
0x804b08e:   c7 85 00 ff ff ff 0d 87 61 73   	mov dword ptr [ebp - 0x100], 0x7361870d
0x804b098:   83 85 14 ff ff ff 01            	add dword ptr [ebp - 0xec], 1
0x804b09f:   c6 45 cb ee                     	mov byte ptr [ebp - 0x35], 0xee
0x804b0a3:   e9 94 00 00 00                  	jmp 0x804b13c <func_1+0x1803>
0x804b0a8:   c7 85 fc fe ff ff 45 51 31 dc   	mov dword ptr [ebp - 0x104], 0xdc315145
0x804b0b2:   c7 85 f8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffc
0x804b0bc:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x804b0c6:   c7 85 f0 fe ff ff cd 69 df 2d   	mov dword ptr [ebp - 0x110], 0x2ddf69cd
0x804b0d0:   c7 85 ec fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffffa
0x804b0da:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804b0e0:   89 c2                           	mov edx, eax
0x804b0e2:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804b0e9:   09 d0                           	or eax, edx
0x804b0eb:   0f bf d0                        	movsx edx, ax
0x804b0ee:   81 bd fc fe ff ff f6 f7 ac 3b   	cmp dword ptr [ebp - 0x104], 0x3bacf7f6
0x804b0f8:   0f 94 c0                        	sete al
0x804b0fb:   0f b6 c0                        	movzx eax, al
0x804b0fe:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804b104:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804b10a:   98                              	cwde 
0x804b10b:   0f af c2                        	imul eax, edx
0x804b10e:   83 c8 49                        	or eax, 0x49
0x804b111:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804b117:   80 6d 91 01                     	sub byte ptr [ebp - 0x6f], 1
0x804b11b:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804b122:   23 85 f0 fe ff ff               	and eax, dword ptr [ebp - 0x110]
0x804b128:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804b12e:   83 6d 8c 01                     	sub dword ptr [ebp - 0x74], 1
0x804b132:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804b136:   83 c0 01                        	add eax, 1
0x804b139:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804b13c:   80 7d cb 09                     	cmp byte ptr [ebp - 0x35], 9
0x804b140:   0f 8e 62 ff ff ff               	jle 0x804b0a8 <func_1+0x176f>
0x804b146:   eb 01                           	jmp 0x804b149 <func_1+0x1810>
0x804b148:   90                              	nop 
0x804b149:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804b14d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804b150:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804b153:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804b156:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804b159:   33 85 3c ff ff ff               	xor eax, dword ptr [ebp - 0xc4]
0x804b15f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804b162:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804b169:   74 1a                           	je 0x804b185 <func_1+0x184c>
0x804b16b:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804b16f:   74 07                           	je 0x804b178 <func_1+0x183f>
0x804b171:   b8 01 00 00 00                  	mov eax, 1
0x804b176:   eb 05                           	jmp 0x804b17d <func_1+0x1844>
0x804b178:   b8 00 00 00 00                  	mov eax, 0
0x804b17d:   0f be c0                        	movsx eax, al
0x804b180:   c1 e0 02                        	shl eax, 2
0x804b183:   85 c0                           	test eax, eax
0x804b185:   81 8d 28 ff ff ff b5 94 7c 0f   	or dword ptr [ebp - 0xd8], 0xf7c94b5
0x804b18f:   83 ad 40 ff ff ff 01            	sub dword ptr [ebp - 0xc0], 1
0x804b196:   0f be 85 44 ff ff ff            	movsx eax, byte ptr [ebp - 0xbc]
0x804b19d:   89 85 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], eax
0x804b1a3:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x804b1aa:   89 85 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], eax
0x804b1b0:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804b1b4:   89 85 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], eax
0x804b1ba:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804b1be:   89 85 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], eax
0x804b1c4:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804b1cb:   89 85 00 fe ff ff               	mov dword ptr [ebp - 0x200], eax
0x804b1d1:   0f be 85 49 ff ff ff            	movsx eax, byte ptr [ebp - 0xb7]
0x804b1d8:   89 85 fc fd ff ff               	mov dword ptr [ebp - 0x204], eax
0x804b1de:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804b1e5:   89 85 f8 fd ff ff               	mov dword ptr [ebp - 0x208], eax
0x804b1eb:   0f bf 85 4c ff ff ff            	movsx eax, word ptr [ebp - 0xb4]
0x804b1f2:   89 85 f4 fd ff ff               	mov dword ptr [ebp - 0x20c], eax
0x804b1f8:   0f be 95 4f ff ff ff            	movsx edx, byte ptr [ebp - 0xb1]
0x804b1ff:   89 95 f0 fd ff ff               	mov dword ptr [ebp - 0x210], edx
0x804b205:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804b209:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x804b210:   89 8d ec fd ff ff               	mov dword ptr [ebp - 0x214], ecx
0x804b216:   0f bf 8d 56 ff ff ff            	movsx ecx, word ptr [ebp - 0xaa]
0x804b21d:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804b221:   89 9d e8 fd ff ff               	mov dword ptr [ebp - 0x218], ebx
0x804b227:   0f be 5d db                     	movsx ebx, byte ptr [ebp - 0x25]
0x804b22b:   0f bf b5 62 ff ff ff            	movsx esi, word ptr [ebp - 0x9e]
0x804b232:   89 b5 e4 fd ff ff               	mov dword ptr [ebp - 0x21c], esi
0x804b238:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804b23c:   0f b7 7d ee                     	movzx edi, word ptr [ebp - 0x12]
0x804b240:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804b246:   0f be 7d cb                     	movsx edi, byte ptr [ebp - 0x35]
0x804b24a:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804b24e:   89 85 dc fd ff ff               	mov dword ptr [ebp - 0x224], eax
0x804b254:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804b25b:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804b261:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804b264:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804b26a:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804b270:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804b276:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804b27c:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804b27f:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804b282:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804b288:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804b28b:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804b291:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804b297:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804b29d:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804b2a0:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804b2a3:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804b2a9:   52                              	push edx
0x804b2aa:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804b2b0:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804b2b6:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804b2b9:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804b2bc:   51                              	push ecx
0x804b2bd:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804b2c0:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804b2c6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804b2c9:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804b2cc:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804b2d2:   53                              	push ebx
0x804b2d3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804b2d6:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804b2d9:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804b2df:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804b2e2:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804b2e8:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804b2eb:   56                              	push esi
0x804b2ec:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804b2f2:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804b2f5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804b2f8:   57                              	push edi
0x804b2f9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804b2fc:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804b302:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804b305:   50                              	push eax
0x804b306:   e8 1b e3 ff ff                  	call 0x8049626 <set_var>
0x804b30b:   81 c4 ac 00 00 00               	add esp, 0xac
0x804b311:   66 0f be 85 49 ff ff ff         	movsx ax, byte ptr [ebp - 0xb7]
0x804b319:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804b31c:   5b                              	pop ebx
0x804b31d:   5e                              	pop esi
0x804b31e:   5f                              	pop edi
0x804b31f:   5d                              	pop ebp
0x804b320:   c3                              	ret 
; function: main at 0x804b321 -- 0x804b8ab
0x804b321:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804b325:   83 e4 f0                        	and esp, 0xfffffff0
0x804b328:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804b32b:   55                              	push ebp
0x804b32c:   89 e5                           	mov ebp, esp
0x804b32e:   53                              	push ebx
0x804b32f:   51                              	push ecx
0x804b330:   83 ec 10                        	sub esp, 0x10
0x804b333:   e8 58 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b338:   81 c3 c8 2c 00 00               	add ebx, 0x2cc8
0x804b33e:   89 c8                           	mov eax, ecx
0x804b340:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804b347:   83 38 02                        	cmp dword ptr [eax], 2
0x804b34a:   75 26                           	jne 0x804b372 <main+0x51>
0x804b34c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804b34f:   83 c0 04                        	add eax, 4
0x804b352:   8b 00                           	mov eax, dword ptr [eax]
0x804b354:   83 ec 08                        	sub esp, 8
0x804b357:   8d 93 98 d9 ff ff               	lea edx, [ebx - 0x2668]
0x804b35d:   52                              	push edx
0x804b35e:   50                              	push eax
0x804b35f:   e8 9c cf ff ff                  	call 0x8048300 <strcmp>
0x804b364:   83 c4 10                        	add esp, 0x10
0x804b367:   85 c0                           	test eax, eax
0x804b369:   75 07                           	jne 0x804b372 <main+0x51>
0x804b36b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804b372:   e8 df d0 ff ff                  	call 0x8048456 <platform_main_begin>
0x804b377:   e8 ef e0 ff ff                  	call 0x804946b <crc32_gentab>
0x804b37c:   e8 b8 e5 ff ff                  	call 0x8049939 <func_1>
0x804b381:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804b388:   0f be c0                        	movsx eax, al
0x804b38b:   83 ec 04                        	sub esp, 4
0x804b38e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b391:   8d 93 9a d9 ff ff               	lea edx, [ebx - 0x2666]
0x804b397:   52                              	push edx
0x804b398:   50                              	push eax
0x804b399:   e8 d9 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b39e:   83 c4 10                        	add esp, 0x10
0x804b3a1:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804b3a7:   83 ec 04                        	sub esp, 4
0x804b3aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3ad:   8d 93 9e d9 ff ff               	lea edx, [ebx - 0x2662]
0x804b3b3:   52                              	push edx
0x804b3b4:   50                              	push eax
0x804b3b5:   e8 bd e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3ba:   83 c4 10                        	add esp, 0x10
0x804b3bd:   0f b7 83 e4 04 00 00            	movzx eax, word ptr [ebx + 0x4e4]
0x804b3c4:   98                              	cwde 
0x804b3c5:   83 ec 04                        	sub esp, 4
0x804b3c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3cb:   8d 93 a3 d9 ff ff               	lea edx, [ebx - 0x265d]
0x804b3d1:   52                              	push edx
0x804b3d2:   50                              	push eax
0x804b3d3:   e8 9f e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3d8:   83 c4 10                        	add esp, 0x10
0x804b3db:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804b3e1:   83 ec 04                        	sub esp, 4
0x804b3e4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3e7:   8d 93 a8 d9 ff ff               	lea edx, [ebx - 0x2658]
0x804b3ed:   52                              	push edx
0x804b3ee:   50                              	push eax
0x804b3ef:   e8 83 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3f4:   83 c4 10                        	add esp, 0x10
0x804b3f7:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804b3fe:   0f be c0                        	movsx eax, al
0x804b401:   83 ec 04                        	sub esp, 4
0x804b404:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b407:   8d 93 ad d9 ff ff               	lea edx, [ebx - 0x2653]
0x804b40d:   52                              	push edx
0x804b40e:   50                              	push eax
0x804b40f:   e8 63 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b414:   83 c4 10                        	add esp, 0x10
0x804b417:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804b41d:   83 ec 04                        	sub esp, 4
0x804b420:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b423:   8d 93 b2 d9 ff ff               	lea edx, [ebx - 0x264e]
0x804b429:   52                              	push edx
0x804b42a:   50                              	push eax
0x804b42b:   e8 47 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b430:   83 c4 10                        	add esp, 0x10
0x804b433:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804b439:   89 c2                           	mov edx, eax
0x804b43b:   83 ec 04                        	sub esp, 4
0x804b43e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b441:   8d 83 b7 d9 ff ff               	lea eax, [ebx - 0x2649]
0x804b447:   50                              	push eax
0x804b448:   52                              	push edx
0x804b449:   e8 29 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b44e:   83 c4 10                        	add esp, 0x10
0x804b451:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804b458:   0f b7 c0                        	movzx eax, ax
0x804b45b:   83 ec 04                        	sub esp, 4
0x804b45e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b461:   8d 93 bc d9 ff ff               	lea edx, [ebx - 0x2644]
0x804b467:   52                              	push edx
0x804b468:   50                              	push eax
0x804b469:   e8 09 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b46e:   83 c4 10                        	add esp, 0x10
0x804b471:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804b478:   98                              	cwde 
0x804b479:   83 ec 04                        	sub esp, 4
0x804b47c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b47f:   8d 93 c1 d9 ff ff               	lea edx, [ebx - 0x263f]
0x804b485:   52                              	push edx
0x804b486:   50                              	push eax
0x804b487:   e8 eb e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b48c:   83 c4 10                        	add esp, 0x10
0x804b48f:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804b495:   83 ec 04                        	sub esp, 4
0x804b498:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b49b:   8d 93 c7 d9 ff ff               	lea edx, [ebx - 0x2639]
0x804b4a1:   52                              	push edx
0x804b4a2:   50                              	push eax
0x804b4a3:   e8 cf e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4a8:   83 c4 10                        	add esp, 0x10
0x804b4ab:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804b4b2:   98                              	cwde 
0x804b4b3:   83 ec 04                        	sub esp, 4
0x804b4b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4b9:   8d 93 cd d9 ff ff               	lea edx, [ebx - 0x2633]
0x804b4bf:   52                              	push edx
0x804b4c0:   50                              	push eax
0x804b4c1:   e8 b1 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4c6:   83 c4 10                        	add esp, 0x10
0x804b4c9:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b4cf:   83 ec 04                        	sub esp, 4
0x804b4d2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4d5:   8d 93 d3 d9 ff ff               	lea edx, [ebx - 0x262d]
0x804b4db:   52                              	push edx
0x804b4dc:   50                              	push eax
0x804b4dd:   e8 95 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4e2:   83 c4 10                        	add esp, 0x10
0x804b4e5:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b4eb:   83 ec 04                        	sub esp, 4
0x804b4ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4f1:   8d 93 d9 d9 ff ff               	lea edx, [ebx - 0x2627]
0x804b4f7:   52                              	push edx
0x804b4f8:   50                              	push eax
0x804b4f9:   e8 79 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4fe:   83 c4 10                        	add esp, 0x10
0x804b501:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b507:   83 ec 04                        	sub esp, 4
0x804b50a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b50d:   8d 93 df d9 ff ff               	lea edx, [ebx - 0x2621]
0x804b513:   52                              	push edx
0x804b514:   50                              	push eax
0x804b515:   e8 5d e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b51a:   83 c4 10                        	add esp, 0x10
0x804b51d:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b523:   83 ec 04                        	sub esp, 4
0x804b526:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b529:   8d 93 e5 d9 ff ff               	lea edx, [ebx - 0x261b]
0x804b52f:   52                              	push edx
0x804b530:   50                              	push eax
0x804b531:   e8 41 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b536:   83 c4 10                        	add esp, 0x10
0x804b539:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804b540:   0f be c0                        	movsx eax, al
0x804b543:   83 ec 04                        	sub esp, 4
0x804b546:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b549:   8d 93 eb d9 ff ff               	lea edx, [ebx - 0x2615]
0x804b54f:   52                              	push edx
0x804b550:   50                              	push eax
0x804b551:   e8 21 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b556:   83 c4 10                        	add esp, 0x10
0x804b559:   0f b6 83 e6 04 00 00            	movzx eax, byte ptr [ebx + 0x4e6]
0x804b560:   0f b6 c0                        	movzx eax, al
0x804b563:   83 ec 04                        	sub esp, 4
0x804b566:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b569:   8d 93 f1 d9 ff ff               	lea edx, [ebx - 0x260f]
0x804b56f:   52                              	push edx
0x804b570:   50                              	push eax
0x804b571:   e8 01 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b576:   83 c4 10                        	add esp, 0x10
0x804b579:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b57f:   83 ec 04                        	sub esp, 4
0x804b582:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b585:   8d 93 f7 d9 ff ff               	lea edx, [ebx - 0x2609]
0x804b58b:   52                              	push edx
0x804b58c:   50                              	push eax
0x804b58d:   e8 e5 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b592:   83 c4 10                        	add esp, 0x10
0x804b595:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b59b:   89 c2                           	mov edx, eax
0x804b59d:   83 ec 04                        	sub esp, 4
0x804b5a0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5a3:   8d 83 fd d9 ff ff               	lea eax, [ebx - 0x2603]
0x804b5a9:   50                              	push eax
0x804b5aa:   52                              	push edx
0x804b5ab:   e8 c7 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5b0:   83 c4 10                        	add esp, 0x10
0x804b5b3:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b5b9:   89 c2                           	mov edx, eax
0x804b5bb:   83 ec 04                        	sub esp, 4
0x804b5be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5c1:   8d 83 03 da ff ff               	lea eax, [ebx - 0x25fd]
0x804b5c7:   50                              	push eax
0x804b5c8:   52                              	push edx
0x804b5c9:   e8 a9 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5ce:   83 c4 10                        	add esp, 0x10
0x804b5d1:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b5d7:   83 ec 04                        	sub esp, 4
0x804b5da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5dd:   8d 93 09 da ff ff               	lea edx, [ebx - 0x25f7]
0x804b5e3:   52                              	push edx
0x804b5e4:   50                              	push eax
0x804b5e5:   e8 8d df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5ea:   83 c4 10                        	add esp, 0x10
0x804b5ed:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804b5f4:   98                              	cwde 
0x804b5f5:   83 ec 04                        	sub esp, 4
0x804b5f8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5fb:   8d 93 0f da ff ff               	lea edx, [ebx - 0x25f1]
0x804b601:   52                              	push edx
0x804b602:   50                              	push eax
0x804b603:   e8 6f df ff ff                  	call 0x8049577 <transparent_crc>
0x804b608:   83 c4 10                        	add esp, 0x10
0x804b60b:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b611:   83 ec 04                        	sub esp, 4
0x804b614:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b617:   8d 93 15 da ff ff               	lea edx, [ebx - 0x25eb]
0x804b61d:   52                              	push edx
0x804b61e:   50                              	push eax
0x804b61f:   e8 53 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b624:   83 c4 10                        	add esp, 0x10
0x804b627:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b62d:   83 ec 04                        	sub esp, 4
0x804b630:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b633:   8d 93 1b da ff ff               	lea edx, [ebx - 0x25e5]
0x804b639:   52                              	push edx
0x804b63a:   50                              	push eax
0x804b63b:   e8 37 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b640:   83 c4 10                        	add esp, 0x10
0x804b643:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804b64a:   98                              	cwde 
0x804b64b:   83 ec 04                        	sub esp, 4
0x804b64e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b651:   8d 93 21 da ff ff               	lea edx, [ebx - 0x25df]
0x804b657:   52                              	push edx
0x804b658:   50                              	push eax
0x804b659:   e8 19 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b65e:   83 c4 10                        	add esp, 0x10
0x804b661:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b667:   89 c2                           	mov edx, eax
0x804b669:   83 ec 04                        	sub esp, 4
0x804b66c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b66f:   8d 83 27 da ff ff               	lea eax, [ebx - 0x25d9]
0x804b675:   50                              	push eax
0x804b676:   52                              	push edx
0x804b677:   e8 fb de ff ff                  	call 0x8049577 <transparent_crc>
0x804b67c:   83 c4 10                        	add esp, 0x10
0x804b67f:   0f b6 83 80 00 00 00            	movzx eax, byte ptr [ebx + 0x80]
0x804b686:   0f b6 c0                        	movzx eax, al
0x804b689:   83 ec 04                        	sub esp, 4
0x804b68c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b68f:   8d 93 2d da ff ff               	lea edx, [ebx - 0x25d3]
0x804b695:   52                              	push edx
0x804b696:   50                              	push eax
0x804b697:   e8 db de ff ff                  	call 0x8049577 <transparent_crc>
0x804b69c:   83 c4 10                        	add esp, 0x10
0x804b69f:   0f b6 83 e7 04 00 00            	movzx eax, byte ptr [ebx + 0x4e7]
0x804b6a6:   0f be c0                        	movsx eax, al
0x804b6a9:   83 ec 04                        	sub esp, 4
0x804b6ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b6af:   8d 93 33 da ff ff               	lea edx, [ebx - 0x25cd]
0x804b6b5:   52                              	push edx
0x804b6b6:   50                              	push eax
0x804b6b7:   e8 bb de ff ff                  	call 0x8049577 <transparent_crc>
0x804b6bc:   83 c4 10                        	add esp, 0x10
0x804b6bf:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804b6c5:   83 ec 04                        	sub esp, 4
0x804b6c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b6cb:   8d 93 39 da ff ff               	lea edx, [ebx - 0x25c7]
0x804b6d1:   52                              	push edx
0x804b6d2:   50                              	push eax
0x804b6d3:   e8 9f de ff ff                  	call 0x8049577 <transparent_crc>
0x804b6d8:   83 c4 10                        	add esp, 0x10
0x804b6db:   8b 83 88 00 00 00               	mov eax, dword ptr [ebx + 0x88]
0x804b6e1:   89 c2                           	mov edx, eax
0x804b6e3:   83 ec 04                        	sub esp, 4
0x804b6e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b6e9:   8d 83 3f da ff ff               	lea eax, [ebx - 0x25c1]
0x804b6ef:   50                              	push eax
0x804b6f0:   52                              	push edx
0x804b6f1:   e8 81 de ff ff                  	call 0x8049577 <transparent_crc>
0x804b6f6:   83 c4 10                        	add esp, 0x10
0x804b6f9:   0f b7 83 8c 00 00 00            	movzx eax, word ptr [ebx + 0x8c]
0x804b700:   98                              	cwde 
0x804b701:   83 ec 04                        	sub esp, 4
0x804b704:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b707:   8d 93 45 da ff ff               	lea edx, [ebx - 0x25bb]
0x804b70d:   52                              	push edx
0x804b70e:   50                              	push eax
0x804b70f:   e8 63 de ff ff                  	call 0x8049577 <transparent_crc>
0x804b714:   83 c4 10                        	add esp, 0x10
0x804b717:   0f b7 83 8e 00 00 00            	movzx eax, word ptr [ebx + 0x8e]
0x804b71e:   98                              	cwde 
0x804b71f:   83 ec 04                        	sub esp, 4
0x804b722:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b725:   8d 93 4b da ff ff               	lea edx, [ebx - 0x25b5]
0x804b72b:   52                              	push edx
0x804b72c:   50                              	push eax
0x804b72d:   e8 45 de ff ff                  	call 0x8049577 <transparent_crc>
0x804b732:   83 c4 10                        	add esp, 0x10
0x804b735:   0f b6 83 90 00 00 00            	movzx eax, byte ptr [ebx + 0x90]
0x804b73c:   0f be c0                        	movsx eax, al
0x804b73f:   83 ec 04                        	sub esp, 4
0x804b742:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b745:   8d 93 51 da ff ff               	lea edx, [ebx - 0x25af]
0x804b74b:   52                              	push edx
0x804b74c:   50                              	push eax
0x804b74d:   e8 25 de ff ff                  	call 0x8049577 <transparent_crc>
0x804b752:   83 c4 10                        	add esp, 0x10
0x804b755:   8b 83 e8 04 00 00               	mov eax, dword ptr [ebx + 0x4e8]
0x804b75b:   89 c2                           	mov edx, eax
0x804b75d:   83 ec 04                        	sub esp, 4
0x804b760:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b763:   8d 83 57 da ff ff               	lea eax, [ebx - 0x25a9]
0x804b769:   50                              	push eax
0x804b76a:   52                              	push edx
0x804b76b:   e8 07 de ff ff                  	call 0x8049577 <transparent_crc>
0x804b770:   83 c4 10                        	add esp, 0x10
0x804b773:   0f b7 83 92 00 00 00            	movzx eax, word ptr [ebx + 0x92]
0x804b77a:   98                              	cwde 
0x804b77b:   83 ec 04                        	sub esp, 4
0x804b77e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b781:   8d 93 5d da ff ff               	lea edx, [ebx - 0x25a3]
0x804b787:   52                              	push edx
0x804b788:   50                              	push eax
0x804b789:   e8 e9 dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b78e:   83 c4 10                        	add esp, 0x10
0x804b791:   8b 83 94 00 00 00               	mov eax, dword ptr [ebx + 0x94]
0x804b797:   89 c2                           	mov edx, eax
0x804b799:   83 ec 04                        	sub esp, 4
0x804b79c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b79f:   8d 83 63 da ff ff               	lea eax, [ebx - 0x259d]
0x804b7a5:   50                              	push eax
0x804b7a6:   52                              	push edx
0x804b7a7:   e8 cb dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b7ac:   83 c4 10                        	add esp, 0x10
0x804b7af:   8b 83 98 00 00 00               	mov eax, dword ptr [ebx + 0x98]
0x804b7b5:   89 c2                           	mov edx, eax
0x804b7b7:   83 ec 04                        	sub esp, 4
0x804b7ba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b7bd:   8d 83 69 da ff ff               	lea eax, [ebx - 0x2597]
0x804b7c3:   50                              	push eax
0x804b7c4:   52                              	push edx
0x804b7c5:   e8 ad dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b7ca:   83 c4 10                        	add esp, 0x10
0x804b7cd:   0f b7 83 ec 04 00 00            	movzx eax, word ptr [ebx + 0x4ec]
0x804b7d4:   0f b7 c0                        	movzx eax, ax
0x804b7d7:   83 ec 04                        	sub esp, 4
0x804b7da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b7dd:   8d 93 6f da ff ff               	lea edx, [ebx - 0x2591]
0x804b7e3:   52                              	push edx
0x804b7e4:   50                              	push eax
0x804b7e5:   e8 8d dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b7ea:   83 c4 10                        	add esp, 0x10
0x804b7ed:   0f b6 83 9c 00 00 00            	movzx eax, byte ptr [ebx + 0x9c]
0x804b7f4:   0f b6 c0                        	movzx eax, al
0x804b7f7:   83 ec 04                        	sub esp, 4
0x804b7fa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b7fd:   8d 93 75 da ff ff               	lea edx, [ebx - 0x258b]
0x804b803:   52                              	push edx
0x804b804:   50                              	push eax
0x804b805:   e8 6d dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b80a:   83 c4 10                        	add esp, 0x10
0x804b80d:   0f b6 83 ee 04 00 00            	movzx eax, byte ptr [ebx + 0x4ee]
0x804b814:   0f be c0                        	movsx eax, al
0x804b817:   83 ec 04                        	sub esp, 4
0x804b81a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b81d:   8d 93 7b da ff ff               	lea edx, [ebx - 0x2585]
0x804b823:   52                              	push edx
0x804b824:   50                              	push eax
0x804b825:   e8 4d dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b82a:   83 c4 10                        	add esp, 0x10
0x804b82d:   0f b6 83 9d 00 00 00            	movzx eax, byte ptr [ebx + 0x9d]
0x804b834:   0f be c0                        	movsx eax, al
0x804b837:   83 ec 04                        	sub esp, 4
0x804b83a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b83d:   8d 93 81 da ff ff               	lea edx, [ebx - 0x257f]
0x804b843:   52                              	push edx
0x804b844:   50                              	push eax
0x804b845:   e8 2d dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b84a:   83 c4 10                        	add esp, 0x10
0x804b84d:   8b 83 a0 00 00 00               	mov eax, dword ptr [ebx + 0xa0]
0x804b853:   83 ec 04                        	sub esp, 4
0x804b856:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b859:   8d 93 87 da ff ff               	lea edx, [ebx - 0x2579]
0x804b85f:   52                              	push edx
0x804b860:   50                              	push eax
0x804b861:   e8 11 dd ff ff                  	call 0x8049577 <transparent_crc>
0x804b866:   83 c4 10                        	add esp, 0x10
0x804b869:   8b 83 f0 04 00 00               	mov eax, dword ptr [ebx + 0x4f0]
0x804b86f:   83 ec 04                        	sub esp, 4
0x804b872:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b875:   8d 93 8d da ff ff               	lea edx, [ebx - 0x2573]
0x804b87b:   52                              	push edx
0x804b87c:   50                              	push eax
0x804b87d:   e8 f5 dc ff ff                  	call 0x8049577 <transparent_crc>
0x804b882:   83 c4 10                        	add esp, 0x10
0x804b885:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b88b:   f7 d0                           	not eax
0x804b88d:   83 ec 08                        	sub esp, 8
0x804b890:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b893:   50                              	push eax
0x804b894:   e8 cd cb ff ff                  	call 0x8048466 <platform_main_end>
0x804b899:   83 c4 10                        	add esp, 0x10
0x804b89c:   b8 00 00 00 00                  	mov eax, 0
0x804b8a1:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b8a4:   59                              	pop ecx
0x804b8a5:   5b                              	pop ebx
0x804b8a6:   5d                              	pop ebp
0x804b8a7:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b8aa:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b8ab -- 0x804b8af
0x804b8ab:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b8ae:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b8af -- 0x804b8b3
0x804b8af:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b8b2:   c3                              	ret 
; data inside code section at 0x804b8b3 -- 0x804b8c0
0x804b8b3:   66 90 66 90 66 90 66 90  66 90 66 90 90            |f.f.f.f.f.f..   |
; function: __libc_csu_init at 0x804b8c0 -- 0x804b91d
0x804b8c0:   55                              	push ebp
0x804b8c1:   57                              	push edi
0x804b8c2:   56                              	push esi
0x804b8c3:   53                              	push ebx
0x804b8c4:   e8 c7 ca ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b8c9:   81 c3 37 27 00 00               	add ebx, 0x2737
0x804b8cf:   83 ec 0c                        	sub esp, 0xc
0x804b8d2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b8d6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b8dc:   e8 eb c9 ff ff                  	call 0x80482cc <_init>
0x804b8e1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b8e7:   29 c6                           	sub esi, eax
0x804b8e9:   c1 fe 02                        	sar esi, 2
0x804b8ec:   85 f6                           	test esi, esi
0x804b8ee:   74 25                           	je 0x804b915 <__libc_csu_init+0x55>
0x804b8f0:   31 ff                           	xor edi, edi
0x804b8f2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b8f8:   83 ec 04                        	sub esp, 4
0x804b8fb:   55                              	push ebp
0x804b8fc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b900:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b904:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b90b:   83 c7 01                        	add edi, 1
0x804b90e:   83 c4 10                        	add esp, 0x10
0x804b911:   39 fe                           	cmp esi, edi
0x804b913:   75 e3                           	jne 0x804b8f8 <__libc_csu_init+0x38>
0x804b915:   83 c4 0c                        	add esp, 0xc
0x804b918:   5b                              	pop ebx
0x804b919:   5e                              	pop esi
0x804b91a:   5f                              	pop edi
0x804b91b:   5d                              	pop ebp
0x804b91c:   c3                              	ret 
; data inside code section at 0x804b91d -- 0x804b920
0x804b91d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b920 -- 0x804b922
0x804b920:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b924 -- 0x804b938
0x804b924:   53                              	push ebx
0x804b925:   83 ec 08                        	sub esp, 8
0x804b928:   e8 63 ca ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b92d:   81 c3 d3 26 00 00               	add ebx, 0x26d3
0x804b933:   83 c4 08                        	add esp, 8
0x804b936:   5b                              	pop ebx
0x804b937:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 3c b9 04 08  04 00 00 00 11 00 10 00   |....<...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b938:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b948:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b958:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b968:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b978:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b988:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b998:   31 00 67 5f 32 00 67 5f  33 33 00 67 5f 35 33 00   |1.g_2.g_33.g_53.|
0x804b9a8:   67 5f 35 37 00 67 5f 37  39 00 67 5f 38 32 00 67   |g_57.g_79.g_82.g|
0x804b9b8:   5f 39 32 00 67 5f 39 34  00 67 5f 31 30 38 00 67   |_92.g_94.g_108.g|
0x804b9c8:   5f 31 31 30 00 67 5f 31  34 30 00 67 5f 31 34 31   |_110.g_140.g_141|
0x804b9d8:   00 67 5f 31 35 35 00 67  5f 31 36 34 00 67 5f 31   |.g_155.g_164.g_1|
0x804b9e8:   37 31 00 67 5f 31 37 36  00 67 5f 32 30 31 00 67   |71.g_176.g_201.g|
0x804b9f8:   5f 32 30 32 00 67 5f 32  33 31 00 67 5f 32 33 32   |_202.g_231.g_232|
0x804ba08:   00 67 5f 32 33 33 00 67  5f 32 34 37 00 67 5f 32   |.g_233.g_247.g_2|
0x804ba18:   34 38 00 67 5f 32 35 35  00 67 5f 33 30 32 00 67   |48.g_255.g_302.g|
0x804ba28:   5f 33 30 34 00 67 5f 33  30 35 00 67 5f 33 31 34   |_304.g_305.g_314|
0x804ba38:   00 67 5f 33 31 35 00 67  5f 33 32 36 00 67 5f 33   |.g_315.g_326.g_3|
0x804ba48:   32 38 00 67 5f 33 32 39  00 67 5f 33 33 30 00 67   |28.g_329.g_330.g|
0x804ba58:   5f 33 33 33 00 67 5f 33  33 35 00 67 5f 33 33 36   |_333.g_335.g_336|
0x804ba68:   00 67 5f 33 33 37 00 67  5f 33 34 32 00 67 5f 35   |.g_337.g_342.g_5|
0x804ba78:   33 37 00 67 5f 35 34 33  00 67 5f 35 34 34 00 67   |37.g_543.g_544.g|
0x804ba88:   5f 35 34 35 00 67 5f 35  35 33 00 00 00 00 00 3f   |_545.g_553.....?|
0x804ba98:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804baa8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804bab8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804bac8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804bad8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804bae8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804baf8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804bb00:   01 1b 03 3b b8 02 00 00  56 00 00 00 f0 c7 ff ff   |...;....V.......|
0x804bb10:   e8 02 00 00 30 c8 ff ff  0c 03 00 00 80 c8 ff ff   |....0...........|
0x804bb20:   d4 02 00 00 56 c9 ff ff  20 03 00 00 66 c9 ff ff   |....V... ...f...|
0x804bb30:   40 03 00 00 94 c9 ff ff  64 03 00 00 b2 c9 ff ff   |@.......d.......|
0x804bb40:   84 03 00 00 da c9 ff ff  a4 03 00 00 04 ca ff ff   |................|
0x804bb50:   c4 03 00 00 2d ca ff ff  e4 03 00 00 70 ca ff ff   |....-.......p...|
0x804bb60:   04 04 00 00 b1 ca ff ff  24 04 00 00 09 cb ff ff   |........$.......|
0x804bb70:   48 04 00 00 5b cb ff ff  6c 04 00 00 98 cb ff ff   |H...[...l.......|
0x804bb80:   8c 04 00 00 cf cb ff ff  ac 04 00 00 ee cb ff ff   |................|
0x804bb90:   cc 04 00 00 18 cc ff ff  ec 04 00 00 44 cc ff ff   |............D...|
0x804bba0:   0c 05 00 00 6f cc ff ff  2c 05 00 00 b8 cc ff ff   |....o...,.......|
0x804bbb0:   4c 05 00 00 ff cc ff ff  6c 05 00 00 59 cd ff ff   |L.......l...Y...|
0x804bbc0:   90 05 00 00 ad cd ff ff  b4 05 00 00 ec cd ff ff   |................|
0x804bbd0:   d4 05 00 00 25 ce ff ff  f4 05 00 00 47 ce ff ff   |....%.......G...|
0x804bbe0:   14 06 00 00 95 ce ff ff  34 06 00 00 d1 ce ff ff   |........4.......|
0x804bbf0:   54 06 00 00 5a cf ff ff  74 06 00 00 8c cf ff ff   |T...Z...t.......|
0x804bc00:   94 06 00 00 bc cf ff ff  b4 06 00 00 01 d0 ff ff   |................|
0x804bc10:   d4 06 00 00 40 d0 ff ff  f4 06 00 00 72 d0 ff ff   |....@.......r...|
0x804bc20:   14 07 00 00 9e d0 ff ff  34 07 00 00 bc d0 ff ff   |........4.......|
0x804bc30:   54 07 00 00 e4 d0 ff ff  74 07 00 00 09 d1 ff ff   |T.......t.......|
0x804bc40:   94 07 00 00 2e d1 ff ff  b4 07 00 00 65 d1 ff ff   |............e...|
0x804bc50:   d4 07 00 00 99 d1 ff ff  f4 07 00 00 eb d1 ff ff   |................|
0x804bc60:   18 08 00 00 37 d2 ff ff  3c 08 00 00 6e d2 ff ff   |....7...<...n...|
0x804bc70:   5c 08 00 00 9f d2 ff ff  7c 08 00 00 be d2 ff ff   |\.......|.......|
0x804bc80:   9c 08 00 00 e8 d2 ff ff  bc 08 00 00 10 d3 ff ff   |................|
0x804bc90:   dc 08 00 00 39 d3 ff ff  fc 08 00 00 75 d3 ff ff   |....9.......u...|
0x804bca0:   1c 09 00 00 af d3 ff ff  3c 09 00 00 02 d4 ff ff   |........<.......|
0x804bcb0:   60 09 00 00 4f d4 ff ff  84 09 00 00 87 d4 ff ff   |`...O...........|
0x804bcc0:   a4 09 00 00 b9 d4 ff ff  c4 09 00 00 cd d4 ff ff   |................|
0x804bcd0:   e4 09 00 00 e4 d4 ff ff  04 0a 00 00 f9 d4 ff ff   |................|
0x804bce0:   24 0a 00 00 0f d5 ff ff  44 0a 00 00 36 d5 ff ff   |$.......D...6...|
0x804bcf0:   64 0a 00 00 5b d5 ff ff  84 0a 00 00 9a d5 ff ff   |d...[...........|
0x804bd00:   a4 0a 00 00 d3 d5 ff ff  c4 0a 00 00 ff d5 ff ff   |................|
0x804bd10:   e4 0a 00 00 25 d6 ff ff  04 0b 00 00 67 d6 ff ff   |....%.......g...|
0x804bd20:   24 0b 00 00 a9 d6 ff ff  44 0b 00 00 eb d6 ff ff   |$.......D.......|
0x804bd30:   64 0b 00 00 60 d7 ff ff  84 0b 00 00 bd d7 ff ff   |d...`...........|
0x804bd40:   a4 0b 00 00 1a d8 ff ff  c4 0b 00 00 77 d8 ff ff   |............w...|
0x804bd50:   e4 0b 00 00 07 d9 ff ff  04 0c 00 00 6b d9 ff ff   |............k...|
0x804bd60:   24 0c 00 00 db d9 ff ff  44 0c 00 00 22 da ff ff   |$.......D..."...|
0x804bd70:   68 0c 00 00 77 da ff ff  88 0c 00 00 be da ff ff   |h...w...........|
0x804bd80:   ac 0c 00 00 26 db ff ff  d0 0c 00 00 39 de ff ff   |....&.......9...|
0x804bd90:   00 0d 00 00 21 f8 ff ff  30 0d 00 00 ab fd ff ff   |....!...0.......|
0x804bda0:   68 0d 00 00 af fd ff ff  7c 0d 00 00 c0 fd ff ff   |h.......|.......|
0x804bdb0:   90 0d 00 00 20 fe ff ff  dc 0d 00 00 14            |.... ........   |
; section: .eh_frame
0x804bdbc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804bdcc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804bddc:   a4 c5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804bdec:   30 00 00 00 00 c5 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804bdfc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804be0c:   10 00 00 00 54 00 00 00  1c c5 ff ff 08 00 00 00   |....T...........|
0x804be1c:   00 00 00 00 1c 00 00 00  68 00 00 00 2e c6 ff ff   |........h.......|
0x804be2c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804be3c:   04 04 00 00 20 00 00 00  88 00 00 00 1e c6 ff ff   |.... ...........|
0x804be4c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804be5c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804be6c:   28 c6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |(........A....B.|
0x804be7c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804be8c:   26 c6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |&...(....A....B.|
0x804be9c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804beac:   2e c6 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804bebc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804becc:   38 c6 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |8...)....A....B.|
0x804bedc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804beec:   41 c6 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |A...C....A....B.|
0x804befc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804bf0c:   64 c6 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |d...A....A....B.|
0x804bf1c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804bf2c:   85 c6 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804bf3c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804bf4c:   90 01 00 00 b9 c6 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804bf5c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804bf6c:   1c 00 00 00 b4 01 00 00  e7 c6 ff ff 3d 00 00 00   |............=...|
0x804bf7c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804bf8c:   1c 00 00 00 d4 01 00 00  04 c7 ff ff 37 00 00 00   |............7...|
0x804bf9c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bfac:   1c 00 00 00 f4 01 00 00  1b c7 ff ff 1f 00 00 00   |................|
0x804bfbc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bfcc:   1c 00 00 00 14 02 00 00  1a c7 ff ff 2a 00 00 00   |............*...|
0x804bfdc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bfec:   1c 00 00 00 34 02 00 00  24 c7 ff ff 2c 00 00 00   |....4...$...,...|
0x804bffc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804c00c:   1c 00 00 00 54 02 00 00  30 c7 ff ff 2b 00 00 00   |....T...0...+...|
0x804c01c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804c02c:   1c 00 00 00 74 02 00 00  3b c7 ff ff 49 00 00 00   |....t...;...I...|
0x804c03c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804c04c:   1c 00 00 00 94 02 00 00  64 c7 ff ff 47 00 00 00   |........d...G...|
0x804c05c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804c06c:   20 00 00 00 b4 02 00 00  8b c7 ff ff 5a 00 00 00   | ...........Z...|
0x804c07c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804c08c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c1 c7 ff ff   |.... ...........|
0x804c09c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804c0ac:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804c0bc:   f1 c7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c0cc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804c0dc:   10 c8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c0ec:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804c0fc:   29 c8 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |)..."....A....B.|
0x804c10c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804c11c:   2b c8 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |+...N....A....B.|
0x804c12c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804c13c:   59 c8 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |Y...<....A....B.|
0x804c14c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804c15c:   75 c8 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804c16c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804c17c:   de c8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c18c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804c19c:   f0 c8 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804c1ac:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804c1bc:   00 c9 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804c1cc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804c1dc:   25 c9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |%...?....A....B.|
0x804c1ec:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804c1fc:   44 c9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |D...2....A....B.|
0x804c20c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804c21c:   56 c9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |V...,....A....B.|
0x804c22c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804c23c:   62 c9 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |b........A....B.|
0x804c24c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804c25c:   60 c9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |`...(....A....B.|
0x804c26c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804c27c:   68 c9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |h...%....A....B.|
0x804c28c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804c29c:   6d c9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |m...%....A....B.|
0x804c2ac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804c2bc:   72 c9 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |r...7....A....B.|
0x804c2cc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804c2dc:   89 c9 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804c2ec:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804c2fc:   9d c9 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804c30c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804c31c:   60 05 00 00 cb c9 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804c32c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804c33c:   1c 00 00 00 84 05 00 00  f3 c9 ff ff 37 00 00 00   |............7...|
0x804c34c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804c35c:   1c 00 00 00 a4 05 00 00  0a ca ff ff 31 00 00 00   |............1...|
0x804c36c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804c37c:   1c 00 00 00 c4 05 00 00  1b ca ff ff 1f 00 00 00   |................|
0x804c38c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804c39c:   1c 00 00 00 e4 05 00 00  1a ca ff ff 2a 00 00 00   |............*...|
0x804c3ac:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804c3bc:   1c 00 00 00 04 06 00 00  24 ca ff ff 28 00 00 00   |........$...(...|
0x804c3cc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804c3dc:   1c 00 00 00 24 06 00 00  2c ca ff ff 29 00 00 00   |....$...,...)...|
0x804c3ec:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804c3fc:   1c 00 00 00 44 06 00 00  35 ca ff ff 3c 00 00 00   |....D...5...<...|
0x804c40c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804c41c:   1c 00 00 00 64 06 00 00  51 ca ff ff 3a 00 00 00   |....d...Q...:...|
0x804c42c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804c43c:   20 00 00 00 84 06 00 00  6b ca ff ff 53 00 00 00   | .......k...S...|
0x804c44c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804c45c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 9a ca ff ff   |.... ...........|
0x804c46c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804c47c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804c48c:   c3 ca ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804c49c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804c4ac:   db ca ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c4bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804c4cc:   ed ca ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c4dc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804c4ec:   e1 ca ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c4fc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804c50c:   d8 ca ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c51c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804c52c:   cd ca ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c53c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804c54c:   c3 ca ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804c55c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c56c:   ca ca ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804c57c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c58c:   cf ca ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c59c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c5ac:   ee ca ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c5bc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c5cc:   07 cb ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804c5dc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c5ec:   13 cb ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804c5fc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c60c:   19 cb ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c61c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c62c:   3b cb ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |;...B....A....B.|
0x804c63c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c64c:   5d cb ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |]...B....A....B.|
0x804c65c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c66c:   7f cb ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c67c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c68c:   d4 cb ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c69c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c6ac:   11 cc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c6bc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c6cc:   4e cc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |N...]....A....B.|
0x804c6dc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c6ec:   8b cc ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c6fc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c70c:   fb cc ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c71c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c72c:   3f cd ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |?...p....A....B.|
0x804c73c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c74c:   8f cd ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c75c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c76c:   b0 09 00 00 b2 cd ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c77c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c78c:   d0 09 00 00 e7 cd ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c79c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c7ac:   20 00 00 00 f4 09 00 00  0a ce ff ff 68 00 00 00   | ...........h...|
0x804c7bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c7cc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 4e ce ff ff   |....,.......N...|
0x804c7dc:   13 03 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c7ec:   86 04 83 05 03 03 03 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c7fc:   04 00 00 00 2c 00 00 00  48 0a 00 00 31 d1 ff ff   |....,...H...1...|
0x804c80c:   e8 19 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c81c:   86 04 83 05 03 d8 19 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c82c:   04 00 00 00 34 00 00 00  78 0a 00 00 e9 ea ff ff   |....4...x.......|
0x804c83c:   8a 05 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c84c:   0f 03 75 78 06 10 03 02  75 7c 03 75 05 c1 0c 01   |..ux....u|.u....|
0x804c85c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c86c:   b0 0a 00 00 3b f0 ff ff  04 00 00 00 00 00 00 00   |....;...........|
0x804c87c:   10 00 00 00 c4 0a 00 00  2b f0 ff ff 04 00 00 00   |........+.......|
0x804c88c:   00 00 00 00 48 00 00 00  d8 0a 00 00 28 f0 ff ff   |....H.......(...|
0x804c89c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c8ac:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c8bc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c8cc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c8dc:   10 00 00 00 24 0b 00 00  3c f0 ff ff 02 00 00 00   |....$...<.......|
0x804c8ec:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 24 b9 04 08  19 00 00 00 0c df 04 08   |....$...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff f6 00 00 00   |................|
0x804e028:   ff ff ff ff f5 b4 1c 72  8e 00 00 00 fa ff ff ff   |.......r........|
0x804e038:   16 e3 33 68 cd e8 01 00  e3 82 37 83 b9 35 00 00   |..3h......7..5..|
0x804e048:   ff ff ff ff f6 ff ff ff  01 00 00 00 08 00 00 00   |................|
0x804e058:   24 00 00 00 22 37 f9 d9  fc ff ff ff 01 00 00 00   |$..."7..........|
0x804e068:   fc ff ff ff c0 81 00 00  3a 5a ef 3e 08 00 00 00   |........:Z.>....|
0x804e078:   ff ff 00 00 01 00 00 00  b1 00 00 00 02 00 00 00   |................|
0x804e088:   05 00 00 00 01 00 08 00  fb 00 fb a5 b5 33 52 f5   |.............3R.|
0x804e098:   05 00 00 00 01 01 00 00  fd ff ff ff ??            |............?   |
