;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:03:40
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 b0 d0 ff ff               	lea eax, [ebx - 0x2f50]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 d0 ff ff               	lea eax, [ebx - 0x2fb0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 33 ac 04 08               	mov eax, 0x804ac33
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483a5:   3d 88 e0 04 08                  	cmp eax, 0x804e088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 e0 04 08                  	push 0x804e088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483e5:   2d 88 e0 04 08                  	sub eax, 0x804e088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 e0 04 08                  	push 0x804e088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 dd 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 c9 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 d0 ff ff               	lea edx, [eax - 0x2f30]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 9c 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 7e 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 56 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 2c 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 03 2b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c0 2a 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 7e 2a 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 26 2a 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 d5 29 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 98 29 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 61 29 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 42 29 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 18 29 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 ec 28 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c1 28 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 78 28 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 30 28 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 d6 27 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 83 27 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 44 27 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 0e 27 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 ec 26 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 9e 26 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 62 26 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 d9 25 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 a7 25 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 77 25 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 32 25 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 f3 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c1 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 92 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 74 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 4c 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 27 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 02 24 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 cb 23 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 96 23 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 44 23 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 f9 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c2 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 91 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 72 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 48 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 20 22 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 f7 21 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 bb 21 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 80 21 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 2d 21 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e1 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 a9 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 7a 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 66 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 4f 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 3a 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 24 20 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 fd 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 d8 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 99 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 60 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 34 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 0e 1f 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 d8 d1 ff ff               	fld dword ptr [eax - 0x2e28]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 d8 d1 ff ff               	fld dword ptr [eax - 0x2e28]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 dc d1 ff ff               	fld dword ptr [eax - 0x2e24]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 cc 1e 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 d8 d1 ff ff               	fld dword ptr [eax - 0x2e28]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 d8 d1 ff ff               	fld dword ptr [eax - 0x2e28]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 dc d1 ff ff               	fld dword ptr [eax - 0x2e24]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 8a 1e 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 e0 d1 ff ff               	fld dword ptr [eax - 0x2e20]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 e4 d1 ff ff               	fld dword ptr [eax - 0x2e1c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 e8 d1 ff ff               	fld dword ptr [eax - 0x2e18]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 48 1e 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 f0 d1 ff ff               	fld dword ptr [eax - 0x2e10]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 f4 d1 ff ff               	fld dword ptr [eax - 0x2e0c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d0 1d 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 00 d2 ff ff               	fld qword ptr [eax - 0x2e00]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 73 1d 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 00 d2 ff ff               	fld qword ptr [eax - 0x2e00]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 16 1d 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 08 d2 ff ff               	fld qword ptr [eax - 0x2df8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 10 d2 ff ff               	fld qword ptr [eax - 0x2df0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 18 d2 ff ff               	fld qword ptr [eax - 0x2de8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 b9 1c 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 30 d2 ff ff               	fld qword ptr [eax - 0x2dd0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 29 1c 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 c5 1b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 54 1b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 11 1b 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 d0 ff ff               	lea eax, [ebx - 0x2f20]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 d1 ff ff               	lea eax, [ebx - 0x2efc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497fe
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 0b 1a 00 00                  	call 0x804b03f <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804963d:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049640:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049643:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049646:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x8049649:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964c:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964f:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049652:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049655:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049658:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x804965b:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965e:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049661:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049664:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x8049667:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804966a:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x804966d:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x8049670:   8b 7d 68                        	mov edi, dword ptr [ebp + 0x68]
0x8049673:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049676:   8b 7d 70                        	mov edi, dword ptr [ebp + 0x70]
0x8049679:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804967c:   89 c8                           	mov eax, ecx
0x804967e:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049682:   89 d8                           	mov eax, ebx
0x8049684:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049687:   89 f0                           	mov eax, esi
0x8049689:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804968d:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049691:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049695:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049699:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x804969c:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a0:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496a4:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a8:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ab:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496af:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496b2:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b6:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ba:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496be:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496c1:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c5:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496cf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496d2:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x80496d8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496db:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496e1:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496e5:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x80496eb:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496ef:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x80496f6:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80496fa:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049700:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049704:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x804970b:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804970e:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049714:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049717:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804971d:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049720:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049726:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804972a:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049731:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049734:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804973a:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804973e:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x8049744:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049747:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804974d:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049751:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049758:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804975b:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049761:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049764:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804976a:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804976d:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049773:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049777:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x804977d:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049780:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049786:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049789:   89 82 c8 04 00 00               	mov dword ptr [edx + 0x4c8], eax
0x804978f:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049793:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x8049799:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804979c:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497a2:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497a6:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497ad:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497b1:   88 82 6e 00 00 00               	mov byte ptr [edx + 0x6e], al
0x80497b7:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497bb:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x80497c2:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497c5:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497cb:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497cf:   66 89 82 78 00 00 00            	mov word ptr [edx + 0x78], ax
0x80497d6:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80497d9:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x80497df:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x80497e2:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x80497e8:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x80497eb:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x80497f1:   b8 00 00 00 00                  	mov eax, 0
0x80497f6:   83 c4 54                        	add esp, 0x54
0x80497f9:   5b                              	pop ebx
0x80497fa:   5e                              	pop esi
0x80497fb:   5f                              	pop edi
0x80497fc:   5d                              	pop ebp
0x80497fd:   c3                              	ret 
; function: func_1 at 0x80497fe -- 0x804ac33
0x80497fe:   55                              	push ebp
0x80497ff:   89 e5                           	mov ebp, esp
0x8049801:   57                              	push edi
0x8049802:   56                              	push esi
0x8049803:   53                              	push ebx
0x8049804:   81 ec 8c 01 00 00               	sub esp, 0x18c
0x804980a:   e8 2c 18 00 00                  	call 0x804b03b <__x86.get_pc_thunk.ax>
0x804980f:   05 f1 47 00 00                  	add eax, 0x47f1
0x8049814:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804981b:   c7 45 ec 6b ed aa 49            	mov dword ptr [ebp - 0x14], 0x49aaed6b
0x8049822:   c6 45 eb ff                     	mov byte ptr [ebp - 0x15], 0xff
0x8049826:   66 c7 45 e8 27 8d               	mov word ptr [ebp - 0x18], 0x8d27
0x804982c:   c6 45 d5 02                     	mov byte ptr [ebp - 0x2b], 2
0x8049830:   66 c7 45 e6 ff ff               	mov word ptr [ebp - 0x1a], 0xffff
0x8049836:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x804983d:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x8049844:   c7 45 d8 72 b6 c9 07            	mov dword ptr [ebp - 0x28], 0x7c9b672
0x804984b:   66 c7 45 d6 01 00               	mov word ptr [ebp - 0x2a], 1
0x8049851:   c7 85 78 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x88], 0xffffffff
0x804985b:   c6 45 d4 b0                     	mov byte ptr [ebp - 0x2c], 0xb0
0x804985f:   c7 45 d0 61 6f fa 2a            	mov dword ptr [ebp - 0x30], 0x2afa6f61
0x8049866:   66 c7 45 ce fa ff               	mov word ptr [ebp - 0x32], 0xfffa
0x804986c:   c7 45 c8 06 00 00 00            	mov dword ptr [ebp - 0x38], 6
0x8049873:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x804987a:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x8049884:   c6 45 c3 fe                     	mov byte ptr [ebp - 0x3d], 0xfe
0x8049888:   c7 45 bc 01 00 00 00            	mov dword ptr [ebp - 0x44], 1
0x804988f:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049896:   c6 45 b7 a7                     	mov byte ptr [ebp - 0x49], 0xa7
0x804989a:   c7 85 70 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x90], 0xfffffffd
0x80498a4:   66 c7 85 6e ff ff ff ff ff      	mov word ptr [ebp - 0x92], 0xffff
0x80498ad:   c6 45 b6 ee                     	mov byte ptr [ebp - 0x4a], 0xee
0x80498b1:   66 c7 85 6c ff ff ff fc ff      	mov word ptr [ebp - 0x94], 0xfffc
0x80498ba:   c7 85 68 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x98], 0xffffffff
0x80498c4:   66 c7 85 66 ff ff ff f1 8d      	mov word ptr [ebp - 0x9a], 0x8df1
0x80498cd:   c7 85 60 ff ff ff 6a 66 6b a7   	mov dword ptr [ebp - 0xa0], 0xa76b666a
0x80498d7:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x80498e1:   c7 85 58 ff ff ff e8 f9 72 fe   	mov dword ptr [ebp - 0xa8], 0xfe72f9e8
0x80498eb:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x80498f5:   c7 45 b0 94 b1 3a 96            	mov dword ptr [ebp - 0x50], 0x963ab194
0x80498fc:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049903:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804990a:   c7 85 50 ff ff ff ae 5f cc c9   	mov dword ptr [ebp - 0xb0], 0xc9cc5fae
0x8049914:   c6 85 4f ff ff ff 00            	mov byte ptr [ebp - 0xb1], 0
0x804991b:   66 c7 85 4c ff ff ff ff ff      	mov word ptr [ebp - 0xb4], 0xffff
0x8049924:   66 c7 85 4a ff ff ff f6 ff      	mov word ptr [ebp - 0xb6], 0xfff6
0x804992d:   c7 45 a4 b9 4f 13 3b            	mov dword ptr [ebp - 0x5c], 0x3b134fb9
0x8049934:   c7 85 44 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xbc], 0
0x804993e:   66 c7 85 42 ff ff ff 1c c3      	mov word ptr [ebp - 0xbe], 0xc31c
0x8049947:   c6 85 41 ff ff ff 05            	mov byte ptr [ebp - 0xbf], 5
0x804994e:   c7 85 3c ff ff ff 33 90 3c 15   	mov dword ptr [ebp - 0xc4], 0x153c9033
0x8049958:   c7 85 38 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc8], 0xffffffff
0x8049962:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049965:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049968:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804996b:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804996e:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049974:   89 c1                           	mov ecx, eax
0x8049976:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049979:   89 c2                           	mov edx, eax
0x804997b:   89 c8                           	mov eax, ecx
0x804997d:   0f af c2                        	imul eax, edx
0x8049980:   0f b6 d0                        	movzx edx, al
0x8049983:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049989:   0f b6 c0                        	movzx eax, al
0x804998c:   29 c2                           	sub edx, eax
0x804998e:   89 d0                           	mov eax, edx
0x8049990:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x8049993:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049996:   0f 9c c0                        	setl al
0x8049999:   0f b6 d0                        	movzx edx, al
0x804999c:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804999f:   0f b6 c0                        	movzx eax, al
0x80499a2:   0f af c2                        	imul eax, edx
0x80499a5:   3d 0b de ee 97                  	cmp eax, 0x97eede0b
0x80499aa:   77 07                           	ja 0x80499b3 <func_1+0x1b5>
0x80499ac:   b8 10 00 00 00                  	mov eax, 0x10
0x80499b1:   eb 05                           	jmp 0x80499b8 <func_1+0x1ba>
0x80499b3:   b8 00 00 00 00                  	mov eax, 0
0x80499b8:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x80499bb:   0f 95 c0                        	setne al
0x80499be:   0f b6 c0                        	movzx eax, al
0x80499c1:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x80499c4:   85 c0                           	test eax, eax
0x80499c6:   0f 84 3f 01 00 00               	je 0x8049b0b <func_1+0x30d>
0x80499cc:   c7 85 8c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x174], 0xffffffff
0x80499d6:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80499dd:   eb 30                           	jmp 0x8049a0f <func_1+0x211>
0x80499df:   c6 85 8b fe ff ff f1            	mov byte ptr [ebp - 0x175], 0xf1
0x80499e6:   c7 85 84 fe ff ff a6 1b 49 ee   	mov dword ptr [ebp - 0x17c], 0xee491ba6
0x80499f0:   80 bd 8b fe ff ff 00            	cmp byte ptr [ebp - 0x175], 0
0x80499f7:   75 1e                           	jne 0x8049a17 <func_1+0x219>
0x80499f9:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x80499fd:   75 0b                           	jne 0x8049a0a <func_1+0x20c>
0x80499ff:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x8049a05:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049a08:   eb 01                           	jmp 0x8049a0b <func_1+0x20d>
0x8049a0a:   90                              	nop 
0x8049a0b:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049a0f:   83 7d ec 18                     	cmp dword ptr [ebp - 0x14], 0x18
0x8049a13:   77 ca                           	ja 0x80499df <func_1+0x1e1>
0x8049a15:   eb 01                           	jmp 0x8049a18 <func_1+0x21a>
0x8049a17:   90                              	nop 
0x8049a18:   80 75 eb 01                     	xor byte ptr [ebp - 0x15], 1
0x8049a1c:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x8049a23:   0f bf 95 6c ff ff ff            	movsx edx, word ptr [ebp - 0x94]
0x8049a2a:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x8049a2e:   0f bf 9d 6e ff ff ff            	movsx ebx, word ptr [ebp - 0x92]
0x8049a35:   0f b6 75 b7                     	movzx esi, byte ptr [ebp - 0x49]
0x8049a39:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x8049a3d:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049a43:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049a47:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x8049a4d:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x8049a51:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x8049a57:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x8049a5b:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049a61:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049a65:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x8049a6b:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x8049a6f:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x8049a75:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x8049a79:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049a7f:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x8049a83:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049a89:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049a8f:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049a95:   50                              	push eax
0x8049a96:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049a9c:   52                              	push edx
0x8049a9d:   51                              	push ecx
0x8049a9e:   53                              	push ebx
0x8049a9f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049aa5:   56                              	push esi
0x8049aa6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049aa9:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049aac:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049ab2:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049ab8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049abb:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049abe:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049ac4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049ac7:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049acd:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049ad3:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049ad9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049adc:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049adf:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ae2:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049ae8:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049aee:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049af4:   57                              	push edi
0x8049af5:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049af8:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049afb:   e8 26 fb ff ff                  	call 0x8049626 <set_var>
0x8049b00:   83 c4 78                        	add esp, 0x78
0x8049b03:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049b06:   e9 20 11 00 00                  	jmp 0x804ac2b <func_1+0x142d>
0x8049b0b:   66 c7 85 36 ff ff ff fb ff      	mov word ptr [ebp - 0xca], 0xfffb
0x8049b14:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x8049b1e:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049b22:   75 0a                           	jne 0x8049b2e <func_1+0x330>
0x8049b24:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x8049b2c:   74 07                           	je 0x8049b35 <func_1+0x337>
0x8049b2e:   b8 01 00 00 00                  	mov eax, 1
0x8049b33:   eb 05                           	jmp 0x8049b3a <func_1+0x33c>
0x8049b35:   b8 00 00 00 00                  	mov eax, 0
0x8049b3a:   8b 95 54 ff ff ff               	mov edx, dword ptr [ebp - 0xac]
0x8049b40:   0f b6 d2                        	movzx edx, dl
0x8049b43:   bb f8 00 00 00                  	mov ebx, 0xf8
0x8049b48:   89 d1                           	mov ecx, edx
0x8049b4a:   d3 e3                           	shl ebx, cl
0x8049b4c:   89 de                           	mov esi, ebx
0x8049b4e:   99                              	cdq 
0x8049b4f:   f7 fe                           	idiv esi
0x8049b51:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049b55:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049b59:   c1 e0 0c                        	shl eax, 0xc
0x8049b5c:   85 c0                           	test eax, eax
0x8049b5e:   0f 95 c0                        	setne al
0x8049b61:   0f b6 c0                        	movzx eax, al
0x8049b64:   20 45 d5                        	and byte ptr [ebp - 0x2b], al
0x8049b67:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b6a:   98                              	cwde 
0x8049b6b:   c1 e0 09                        	shl eax, 9
0x8049b6e:   89 c3                           	mov ebx, eax
0x8049b70:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049b74:   74 18                           	je 0x8049b8e <func_1+0x390>
0x8049b76:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049b7a:   c1 e0 05                        	shl eax, 5
0x8049b7d:   89 c2                           	mov edx, eax
0x8049b7f:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049b83:   39 c2                           	cmp edx, eax
0x8049b85:   7c 07                           	jl 0x8049b8e <func_1+0x390>
0x8049b87:   b8 01 00 00 00                  	mov eax, 1
0x8049b8c:   eb 05                           	jmp 0x8049b93 <func_1+0x395>
0x8049b8e:   b8 00 00 00 00                  	mov eax, 0
0x8049b93:   0f be c0                        	movsx eax, al
0x8049b96:   c1 e0 02                        	shl eax, 2
0x8049b99:   83 f8 2d                        	cmp eax, 0x2d
0x8049b9c:   0f 94 c0                        	sete al
0x8049b9f:   0f b6 d0                        	movzx edx, al
0x8049ba2:   66 0f be 45 d5                  	movsx ax, byte ptr [ebp - 0x2b]
0x8049ba7:   0f b7 c0                        	movzx eax, ax
0x8049baa:   89 c1                           	mov ecx, eax
0x8049bac:   d3 e2                           	shl edx, cl
0x8049bae:   89 d0                           	mov eax, edx
0x8049bb0:   0f bf d0                        	movsx edx, ax
0x8049bb3:   0f bf 85 36 ff ff ff            	movsx eax, word ptr [ebp - 0xca]
0x8049bba:   01 d0                           	add eax, edx
0x8049bbc:   01 d8                           	add eax, ebx
0x8049bbe:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x8049bc4:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049bc8:   74 05                           	je 0x8049bcf <func_1+0x3d1>
0x8049bca:   e9 93 fd ff ff                  	jmp 0x8049962 <func_1+0x164>
0x8049bcf:   c6 45 eb 0c                     	mov byte ptr [ebp - 0x15], 0xc
0x8049bd3:   eb 54                           	jmp 0x8049c29 <func_1+0x42b>
0x8049bd5:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049bd9:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x8049bdc:   89 c2                           	mov edx, eax
0x8049bde:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049be2:   75 12                           	jne 0x8049bf6 <func_1+0x3f8>
0x8049be4:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x8049beb:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049bef:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x8049bf4:   74 07                           	je 0x8049bfd <func_1+0x3ff>
0x8049bf6:   b8 01 00 00 00                  	mov eax, 1
0x8049bfb:   eb 05                           	jmp 0x8049c02 <func_1+0x404>
0x8049bfd:   b8 00 00 00 00                  	mov eax, 0
0x8049c02:   39 d0                           	cmp eax, edx
0x8049c04:   0f 9f c0                        	setg al
0x8049c07:   0f b6 c0                        	movzx eax, al
0x8049c0a:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x8049c10:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x8049c16:   83 c8 09                        	or eax, 9
0x8049c19:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049c1c:   0f 9c c0                        	setl al
0x8049c1f:   0f b6 c0                        	movzx eax, al
0x8049c22:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049c25:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x8049c29:   80 7d eb 09                     	cmp byte ptr [ebp - 0x15], 9
0x8049c2d:   77 a6                           	ja 0x8049bd5 <func_1+0x3d7>
0x8049c2f:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x8049c39:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c3c:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x8049c3f:   0f 95 c0                        	setne al
0x8049c42:   89 c3                           	mov ebx, eax
0x8049c44:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049c4a:   89 c2                           	mov edx, eax
0x8049c4c:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c4f:   89 c1                           	mov ecx, eax
0x8049c51:   89 d0                           	mov eax, edx
0x8049c53:   ba 00 00 00 00                  	mov edx, 0
0x8049c58:   66 f7 f1                        	div cx
0x8049c5b:   89 d0                           	mov eax, edx
0x8049c5d:   0f be d0                        	movsx edx, al
0x8049c60:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049c64:   89 c1                           	mov ecx, eax
0x8049c66:   d3 e2                           	shl edx, cl
0x8049c68:   89 d0                           	mov eax, edx
0x8049c6a:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049c6d:   0f 9e c0                        	setle al
0x8049c70:   29 c3                           	sub ebx, eax
0x8049c72:   89 d8                           	mov eax, ebx
0x8049c74:   0f be c0                        	movsx eax, al
0x8049c77:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x8049c7b:   99                              	cdq 
0x8049c7c:   f7 fe                           	idiv esi
0x8049c7e:   0f bf d0                        	movsx edx, ax
0x8049c81:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049c85:   01 d0                           	add eax, edx
0x8049c87:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049c8a:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049c8e:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049c91:   0f 95 c0                        	setne al
0x8049c94:   0f b6 c0                        	movzx eax, al
0x8049c97:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x8049c9d:   0f 93 c0                        	setae al
0x8049ca0:   0f b6 c0                        	movzx eax, al
0x8049ca3:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ca6:   0f 97 c0                        	seta al
0x8049ca9:   0f b6 c0                        	movzx eax, al
0x8049cac:   66 09 45 e6                     	or word ptr [ebp - 0x1a], ax
0x8049cb0:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049cb5:   74 16                           	je 0x8049ccd <func_1+0x4cf>
0x8049cb7:   90                              	nop 
0x8049cb8:   eb 01                           	jmp 0x8049cbb <func_1+0x4bd>
0x8049cba:   90                              	nop 
0x8049cbb:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049cbe:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049cc1:   c7 45 f0 59 47 7e 87            	mov dword ptr [ebp - 0x10], 0x877e4759
0x8049cc8:   e9 99 02 00 00                  	jmp 0x8049f66 <func_1+0x768>
0x8049ccd:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x8049cd7:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049cde:   c7 85 28 ff ff ff af dc df 95   	mov dword ptr [ebp - 0xd8], 0x95dfdcaf
0x8049ce8:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049cef:   e9 65 02 00 00                  	jmp 0x8049f59 <func_1+0x75b>
0x8049cf4:   c7 85 24 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xdc], 1
0x8049cfe:   c7 85 20 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xe0], 2
0x8049d08:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049d0b:   0f be c8                        	movsx ecx, al
0x8049d0e:   b8 67 00 00 00                  	mov eax, 0x67
0x8049d13:   99                              	cdq 
0x8049d14:   f7 f9                           	idiv ecx
0x8049d16:   89 d0                           	mov eax, edx
0x8049d18:   0f be d0                        	movsx edx, al
0x8049d1b:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049d1e:   0f be c0                        	movsx eax, al
0x8049d21:   89 c1                           	mov ecx, eax
0x8049d23:   d3 fa                           	sar edx, cl
0x8049d25:   89 d0                           	mov eax, edx
0x8049d27:   0f be d0                        	movsx edx, al
0x8049d2a:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049d30:   0f be c0                        	movsx eax, al
0x8049d33:   01 d0                           	add eax, edx
0x8049d35:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d38:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d3b:   89 c2                           	mov edx, eax
0x8049d3d:   66 0f be 45 d5                  	movsx ax, byte ptr [ebp - 0x2b]
0x8049d42:   66 39 c2                        	cmp dx, ax
0x8049d45:   0f 95 c0                        	setne al
0x8049d48:   0f b6 c0                        	movzx eax, al
0x8049d4b:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049d51:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049d58:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049d5e:   30 45 d5                        	xor byte ptr [ebp - 0x2b], al
0x8049d61:   0f be 55 d5                     	movsx edx, byte ptr [ebp - 0x2b]
0x8049d65:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049d6b:   0f b6 d8                        	movzx ebx, al
0x8049d6e:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049d74:   0f be f0                        	movsx esi, al
0x8049d77:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d7a:   0f be c0                        	movsx eax, al
0x8049d7d:   89 c1                           	mov ecx, eax
0x8049d7f:   d3 e6                           	shl esi, cl
0x8049d81:   89 f0                           	mov eax, esi
0x8049d83:   0f b6 c0                        	movzx eax, al
0x8049d86:   0f af d8                        	imul ebx, eax
0x8049d89:   89 d9                           	mov ecx, ebx
0x8049d8b:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049d8f:   09 c8                           	or eax, ecx
0x8049d91:   21 d0                           	and eax, edx
0x8049d93:   3d 68 95 00 00                  	cmp eax, 0x9568
0x8049d98:   0f 84 9f 01 00 00               	je 0x8049f3d <func_1+0x73f>
0x8049d9e:   c6 85 17 ff ff ff 02            	mov byte ptr [ebp - 0xe9], 2
0x8049da5:   c7 45 ac 82 b8 00 00            	mov dword ptr [ebp - 0x54], 0xb882
0x8049dac:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049db2:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049db8:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049dbe:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049dc1:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049dc5:   88 85 17 ff ff ff               	mov byte ptr [ebp - 0xe9], al
0x8049dcb:   0f be 85 17 ff ff ff            	movsx eax, byte ptr [ebp - 0xe9]
0x8049dd2:   23 45 a0                        	and eax, dword ptr [ebp - 0x60]
0x8049dd5:   3d de 00 00 00                  	cmp eax, 0xde
0x8049dda:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049dde:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049de4:   0f 9e c0                        	setle al
0x8049de7:   0f b6 c0                        	movzx eax, al
0x8049dea:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049ded:   80 bd 17 ff ff ff 00            	cmp byte ptr [ebp - 0xe9], 0
0x8049df4:   74 07                           	je 0x8049dfd <func_1+0x5ff>
0x8049df6:   b8 01 00 00 00                  	mov eax, 1
0x8049dfb:   eb 05                           	jmp 0x8049e02 <func_1+0x604>
0x8049dfd:   b8 00 00 00 00                  	mov eax, 0
0x8049e02:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e05:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049e09:   0f 85 56 01 00 00               	jne 0x8049f65 <func_1+0x767>
0x8049e0f:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049e16:   83 7d a0 05                     	cmp dword ptr [ebp - 0x60], 5
0x8049e1a:   0f 86 35 01 00 00               	jbe 0x8049f55 <func_1+0x757>
0x8049e20:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049e26:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049e2a:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049e2e:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049e31:   0f 94 c0                        	sete al
0x8049e34:   0f b6 c0                        	movzx eax, al
0x8049e37:   0f b6 d0                        	movzx edx, al
0x8049e3a:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x8049e41:   0f b6 c0                        	movzx eax, al
0x8049e44:   29 c2                           	sub edx, eax
0x8049e46:   89 d0                           	mov eax, edx
0x8049e48:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x8049e4b:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x8049e52:   0f bf 95 6c ff ff ff            	movsx edx, word ptr [ebp - 0x94]
0x8049e59:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x8049e5d:   0f bf 9d 6e ff ff ff            	movsx ebx, word ptr [ebp - 0x92]
0x8049e64:   0f b6 75 b7                     	movzx esi, byte ptr [ebp - 0x49]
0x8049e68:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x8049e6c:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049e72:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049e76:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x8049e7c:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x8049e80:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x8049e86:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x8049e8a:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049e90:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049e94:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x8049e9a:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x8049e9e:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x8049ea4:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x8049ea8:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049eae:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x8049eb2:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049eb8:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049ebe:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049ec4:   50                              	push eax
0x8049ec5:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049ecb:   52                              	push edx
0x8049ecc:   51                              	push ecx
0x8049ecd:   53                              	push ebx
0x8049ece:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049ed4:   56                              	push esi
0x8049ed5:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ed8:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049edb:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049ee1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049ee7:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049eea:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049eed:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049ef3:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049ef6:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049efc:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049f02:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049f08:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049f0b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049f0e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049f11:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049f17:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049f1d:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049f23:   57                              	push edi
0x8049f24:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f27:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049f2a:   e8 f7 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f2f:   83 c4 78                        	add esp, 0x78
0x8049f32:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049f38:   e9 ee 0c 00 00                  	jmp 0x804ac2b <func_1+0x142d>
0x8049f3d:   c7 85 1c ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff9
0x8049f47:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x8049f51:   83 6d d8 01                     	sub dword ptr [ebp - 0x28], 1
0x8049f55:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x8049f59:   83 7d a8 08                     	cmp dword ptr [ebp - 0x58], 8
0x8049f5d:   0f 86 91 fd ff ff               	jbe 0x8049cf4 <func_1+0x4f6>
0x8049f63:   eb 01                           	jmp 0x8049f66 <func_1+0x768>
0x8049f65:   90                              	nop 
0x8049f66:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f69:   0f b6 d0                        	movzx edx, al
0x8049f6c:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049f70:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049f73:   0f 94 c0                        	sete al
0x8049f76:   0f b6 c8                        	movzx ecx, al
0x8049f79:   0f be 85 4f ff ff ff            	movsx eax, byte ptr [ebp - 0xb1]
0x8049f80:   39 c1                           	cmp ecx, eax
0x8049f82:   0f 9d c0                        	setge al
0x8049f85:   0f b6 c0                        	movzx eax, al
0x8049f88:   0f af c2                        	imul eax, edx
0x8049f8b:   85 c0                           	test eax, eax
0x8049f8d:   74 57                           	je 0x8049fe6 <func_1+0x7e8>
0x8049f8f:   c7 85 90 fe ff ff 2f 65 71 0c   	mov dword ptr [ebp - 0x170], 0xc71652f
0x8049f99:   66 81 75 e6 7a 2f               	xor word ptr [ebp - 0x1a], 0x2f7a
0x8049f9f:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049fa3:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049fa6:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049faa:   75 18                           	jne 0x8049fc4 <func_1+0x7c6>
0x8049fac:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049fb0:   88 45 d5                        	mov byte ptr [ebp - 0x2b], al
0x8049fb3:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049fb7:   39 85 90 fe ff ff               	cmp dword ptr [ebp - 0x170], eax
0x8049fbd:   74 05                           	je 0x8049fc4 <func_1+0x7c6>
0x8049fbf:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049fc3:   90                              	nop 
0x8049fc4:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049fca:   39 85 90 fe ff ff               	cmp dword ptr [ebp - 0x170], eax
0x8049fd0:   0f 96 c0                        	setbe al
0x8049fd3:   0f b6 c0                        	movzx eax, al
0x8049fd6:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049fda:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049fde:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fe1:   e9 4d 0b 00 00                  	jmp 0x804ab33 <func_1+0x1335>
0x8049fe6:   c7 85 10 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf0], 1
0x8049ff0:   c7 45 9c e9 e2 2f 8b            	mov dword ptr [ebp - 0x64], 0x8b2fe2e9
0x8049ff7:   c7 45 98 bb 02 e1 39            	mov dword ptr [ebp - 0x68], 0x39e102bb
0x8049ffe:   66 c7 85 0e ff ff ff 31 c6      	mov word ptr [ebp - 0xf2], 0xc631
0x804a007:   c7 85 08 ff ff ff df 6f fa bf   	mov dword ptr [ebp - 0xf8], 0xbffa6fdf
0x804a011:   c7 85 04 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xfc], 7
0x804a01b:   c7 85 00 ff ff ff cf 04 f1 13   	mov dword ptr [ebp - 0x100], 0x13f104cf
0x804a025:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a02f:   66 c7 85 fa fe ff ff 00 00      	mov word ptr [ebp - 0x106], 0
0x804a038:   c7 85 f4 fe ff ff 63 30 e1 e1   	mov dword ptr [ebp - 0x10c], 0xe1e13063
0x804a042:   83 bd 10 ff ff ff 00            	cmp dword ptr [ebp - 0xf0], 0
0x804a049:   0f 84 9b 0a 00 00               	je 0x804aaea <func_1+0x12ec>
0x804a04f:   c7 45 94 97 23 e6 bb            	mov dword ptr [ebp - 0x6c], 0xbbe62397
0x804a056:   c7 45 90 02 00 00 00            	mov dword ptr [ebp - 0x70], 2
0x804a05d:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x804a064:   66 c7 85 ea fe ff ff 09 00      	mov word ptr [ebp - 0x116], 9
0x804a06d:   66 c7 85 e8 fe ff ff fe ff      	mov word ptr [ebp - 0x118], 0xfffe
0x804a076:   c6 85 e7 fe ff ff 23            	mov byte ptr [ebp - 0x119], 0x23
0x804a07d:   66 c7 85 e4 fe ff ff d2 e3      	mov word ptr [ebp - 0x11c], 0xe3d2
0x804a086:   81 7d dc 9f 00 00 00            	cmp dword ptr [ebp - 0x24], 0x9f
0x804a08d:   66 0f be 45 d5                  	movsx ax, byte ptr [ebp - 0x2b]
0x804a092:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a096:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a09a:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a09d:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a0a1:   74 0d                           	je 0x804a0b0 <func_1+0x8b2>
0x804a0a3:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a0a7:   74 07                           	je 0x804a0b0 <func_1+0x8b2>
0x804a0a9:   b8 01 00 00 00                  	mov eax, 1
0x804a0ae:   eb 05                           	jmp 0x804a0b5 <func_1+0x8b7>
0x804a0b0:   b8 00 00 00 00                  	mov eax, 0
0x804a0b5:   89 c2                           	mov edx, eax
0x804a0b7:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a0bb:   21 d0                           	and eax, edx
0x804a0bd:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a0c0:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a0c6:   f6 65 eb                        	mul byte ptr [ebp - 0x15]
0x804a0c9:   0f b6 d0                        	movzx edx, al
0x804a0cc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0cf:   0f b6 c0                        	movzx eax, al
0x804a0d2:   89 c1                           	mov ecx, eax
0x804a0d4:   d3 e2                           	shl edx, cl
0x804a0d6:   89 d0                           	mov eax, edx
0x804a0d8:   0f bf d0                        	movsx edx, ax
0x804a0db:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a0e1:   98                              	cwde 
0x804a0e2:   0f af c2                        	imul eax, edx
0x804a0e5:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a0e8:   c7 45 94 57 00 00 00            	mov dword ptr [ebp - 0x6c], 0x57
0x804a0ef:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a0f2:   89 c2                           	mov edx, eax
0x804a0f4:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a0f7:   38 c2                           	cmp dl, al
0x804a0f9:   0f 85 cd 00 00 00               	jne 0x804a1cc <func_1+0x9ce>
0x804a0ff:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x804a109:   c7 85 b0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x150], 0xffffffff
0x804a113:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804a11a:   e9 9e 00 00 00                  	jmp 0x804a1bd <func_1+0x9bf>
0x804a11f:   c7 45 88 fb ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffffb
0x804a126:   c7 85 ac fe ff ff 10 22 a7 6a   	mov dword ptr [ebp - 0x154], 0x6aa72210
0x804a130:   c7 45 ec 10 00 00 00            	mov dword ptr [ebp - 0x14], 0x10
0x804a137:   eb 3b                           	jmp 0x804a174 <func_1+0x976>
0x804a139:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a140:   0f 85 74 fb ff ff               	jne 0x8049cba <func_1+0x4bc>
0x804a146:   83 6d 88 01                     	sub dword ptr [ebp - 0x78], 1
0x804a14a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a14d:   98                              	cwde 
0x804a14e:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804a152:   99                              	cdq 
0x804a153:   f7 f9                           	idiv ecx
0x804a155:   89 d0                           	mov eax, edx
0x804a157:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a15a:   0f 92 c0                        	setb al
0x804a15d:   0f b6 c0                        	movzx eax, al
0x804a160:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a163:   0f 93 c0                        	setae al
0x804a166:   0f b6 c0                        	movzx eax, al
0x804a169:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a16c:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x804a170:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x804a174:   83 7d ec 35                     	cmp dword ptr [ebp - 0x14], 0x35
0x804a178:   75 bf                           	jne 0x804a139 <func_1+0x93b>
0x804a17a:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a17e:   75 38                           	jne 0x804a1b8 <func_1+0x9ba>
0x804a180:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x804a185:   83 7d 98 01                     	cmp dword ptr [ebp - 0x68], 1
0x804a189:   0f 94 c0                        	sete al
0x804a18c:   0f b6 c0                        	movzx eax, al
0x804a18f:   8b 95 ac fe ff ff               	mov edx, dword ptr [ebp - 0x154]
0x804a195:   39 55 d8                        	cmp dword ptr [ebp - 0x28], edx
0x804a198:   0f 94 c2                        	sete dl
0x804a19b:   0f b6 d2                        	movzx edx, dl
0x804a19e:   39 55 94                        	cmp dword ptr [ebp - 0x6c], edx
0x804a1a1:   0f 9f c2                        	setg dl
0x804a1a4:   0f b6 d2                        	movzx edx, dl
0x804a1a7:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804a1aa:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a1ad:   0f 94 c0                        	sete al
0x804a1b0:   0f b6 c0                        	movzx eax, al
0x804a1b3:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a1b6:   eb 01                           	jmp 0x804a1b9 <func_1+0x9bb>
0x804a1b8:   90                              	nop 
0x804a1b9:   83 45 9c 09                     	add dword ptr [ebp - 0x64], 9
0x804a1bd:   83 7d 9c 1d                     	cmp dword ptr [ebp - 0x64], 0x1d
0x804a1c1:   0f 8e 58 ff ff ff               	jle 0x804a11f <func_1+0x921>
0x804a1c7:   e9 34 07 00 00                  	jmp 0x804a900 <func_1+0x1102>
0x804a1cc:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a1d6:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804a1dd:   c7 85 dc fe ff ff 40 b4 4b 4c   	mov dword ptr [ebp - 0x124], 0x4c4bb440
0x804a1e7:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a1ea:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x804a1ed:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a1f3:   3c d4                           	cmp al, 0xd4
0x804a1f5:   0f 84 bf 03 00 00               	je 0x804a5ba <func_1+0xdbc>
0x804a1fb:   c7 85 d4 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x12c], 8
0x804a205:   c7 85 d0 fe ff ff 1c 78 8c f3   	mov dword ptr [ebp - 0x130], 0xf38c781c
0x804a20f:   c7 45 f0 8e ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffff8e
0x804a216:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a219:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804a21c:   0f 92 c0                        	setb al
0x804a21f:   0f b6 c0                        	movzx eax, al
0x804a222:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804a226:   0f be f2                        	movsx esi, dl
0x804a229:   99                              	cdq 
0x804a22a:   f7 fe                           	idiv esi
0x804a22c:   0f b7 c0                        	movzx eax, ax
0x804a22f:   25 37 a8 00 00                  	and eax, 0xa837
0x804a234:   89 c2                           	mov edx, eax
0x804a236:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a23c:   0f b7 c0                        	movzx eax, ax
0x804a23f:   89 c1                           	mov ecx, eax
0x804a241:   d3 fa                           	sar edx, cl
0x804a243:   89 d0                           	mov eax, edx
0x804a245:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a248:   0f 84 e9 01 00 00               	je 0x804a437 <func_1+0xc39>
0x804a24e:   c7 85 c4 fe ff ff 2b 6b c9 5b   	mov dword ptr [ebp - 0x13c], 0x5bc96b2b
0x804a258:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804a25c:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a262:   98                              	cwde 
0x804a263:   c1 e0 0a                        	shl eax, 0xa
0x804a266:   89 c3                           	mov ebx, eax
0x804a268:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a26e:   89 c2                           	mov edx, eax
0x804a270:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a276:   89 c1                           	mov ecx, eax
0x804a278:   89 d0                           	mov eax, edx
0x804a27a:   ba 00 00 00 00                  	mov edx, 0
0x804a27f:   66 f7 f1                        	div cx
0x804a282:   66 83 f8 fc                     	cmp ax, -4
0x804a286:   0f 96 c0                        	setbe al
0x804a289:   0f b6 c0                        	movzx eax, al
0x804a28c:   89 c2                           	mov edx, eax
0x804a28e:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a294:   0f b6 c0                        	movzx eax, al
0x804a297:   0f af c2                        	imul eax, edx
0x804a29a:   98                              	cwde 
0x804a29b:   01 c0                           	add eax, eax
0x804a29d:   85 c0                           	test eax, eax
0x804a29f:   74 10                           	je 0x804a2b1 <func_1+0xab3>
0x804a2a1:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a2a8:   74 07                           	je 0x804a2b1 <func_1+0xab3>
0x804a2aa:   b8 01 00 00 00                  	mov eax, 1
0x804a2af:   eb 05                           	jmp 0x804a2b6 <func_1+0xab8>
0x804a2b1:   b8 00 00 00 00                  	mov eax, 0
0x804a2b6:   66 0f be 4d d4                  	movsx cx, byte ptr [ebp - 0x2c]
0x804a2bb:   ba 00 00 00 00                  	mov edx, 0
0x804a2c0:   66 f7 f1                        	div cx
0x804a2c3:   89 d0                           	mov eax, edx
0x804a2c5:   98                              	cwde 
0x804a2c6:   8b 95 c4 fe ff ff               	mov edx, dword ptr [ebp - 0x13c]
0x804a2cc:   0f bf ca                        	movsx ecx, dx
0x804a2cf:   99                              	cdq 
0x804a2d0:   f7 f9                           	idiv ecx
0x804a2d2:   89 d0                           	mov eax, edx
0x804a2d4:   0f b7 d0                        	movzx edx, ax
0x804a2d7:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a2da:   0f b7 c0                        	movzx eax, ax
0x804a2dd:   89 c1                           	mov ecx, eax
0x804a2df:   d3 e2                           	shl edx, cl
0x804a2e1:   89 d0                           	mov eax, edx
0x804a2e3:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a2e6:   0f 9c c0                        	setl al
0x804a2e9:   0f b6 d0                        	movzx edx, al
0x804a2ec:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804a2f0:   39 c2                           	cmp edx, eax
0x804a2f2:   0f 9e c0                        	setle al
0x804a2f5:   21 d8                           	and eax, ebx
0x804a2f7:   0f be c0                        	movsx eax, al
0x804a2fa:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a2fd:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a303:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a307:   ba 00 00 00 00                  	mov edx, 0
0x804a30c:   66 f7 f1                        	div cx
0x804a30f:   89 d0                           	mov eax, edx
0x804a311:   0f bf c8                        	movsx ecx, ax
0x804a314:   b8 83 b8 ff ff                  	mov eax, 0xffffb883
0x804a319:   99                              	cdq 
0x804a31a:   f7 f9                           	idiv ecx
0x804a31c:   89 d0                           	mov eax, edx
0x804a31e:   89 c2                           	mov edx, eax
0x804a320:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a326:   01 d0                           	add eax, edx
0x804a328:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x804a32b:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x804a32f:   66 0f be c2                     	movsx ax, dl
0x804a333:   6b c0 93                        	imul eax, eax, -0x6d
0x804a336:   66 c1 e8 08                     	shr ax, 8
0x804a33a:   01 d0                           	add eax, edx
0x804a33c:   c0 f8 05                        	sar al, 5
0x804a33f:   89 c1                           	mov ecx, eax
0x804a341:   89 d0                           	mov eax, edx
0x804a343:   c0 f8 07                        	sar al, 7
0x804a346:   29 c1                           	sub ecx, eax
0x804a348:   89 c8                           	mov eax, ecx
0x804a34a:   b9 38 00 00 00                  	mov ecx, 0x38
0x804a34f:   0f af c1                        	imul eax, ecx
0x804a352:   29 c2                           	sub edx, eax
0x804a354:   89 d0                           	mov eax, edx
0x804a356:   0f be c0                        	movsx eax, al
0x804a359:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a35c:   83 bd e0 fe ff ff 01            	cmp dword ptr [ebp - 0x120], 1
0x804a363:   0f b6 45 d5                     	movzx eax, byte ptr [ebp - 0x2b]
0x804a367:   0f b6 c0                        	movzx eax, al
0x804a36a:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a36d:   0f b6 ca                        	movzx ecx, dl
0x804a370:   99                              	cdq 
0x804a371:   f7 f9                           	idiv ecx
0x804a373:   89 d1                           	mov ecx, edx
0x804a375:   ba bb d5 a4 03                  	mov edx, 0x3a4d5bb
0x804a37a:   89 c8                           	mov eax, ecx
0x804a37c:   f7 ea                           	imul edx
0x804a37e:   89 d0                           	mov eax, edx
0x804a380:   c1 f8 15                        	sar eax, 0x15
0x804a383:   c1 f9 1f                        	sar ecx, 0x1f
0x804a386:   89 ca                           	mov edx, ecx
0x804a388:   29 c2                           	sub edx, eax
0x804a38a:   89 d0                           	mov eax, edx
0x804a38c:   89 c1                           	mov ecx, eax
0x804a38e:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a394:   89 c2                           	mov edx, eax
0x804a396:   0f b6 c1                        	movzx eax, cl
0x804a399:   f6 f2                           	div dl
0x804a39b:   0f b6 d0                        	movzx edx, al
0x804a39e:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x804a3a2:   89 c1                           	mov ecx, eax
0x804a3a4:   d3 fa                           	sar edx, cl
0x804a3a6:   89 d0                           	mov eax, edx
0x804a3a8:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a3ab:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a3ae:   0f be d8                        	movsx ebx, al
0x804a3b1:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a3b6:   0f 94 c0                        	sete al
0x804a3b9:   0f b6 c0                        	movzx eax, al
0x804a3bc:   88 85 80 fe ff ff               	mov byte ptr [ebp - 0x180], al
0x804a3c2:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a3c6:   8d 50 01                        	lea edx, [eax + 1]
0x804a3c9:   88 55 eb                        	mov byte ptr [ebp - 0x15], dl
0x804a3cc:   0f b6 d0                        	movzx edx, al
0x804a3cf:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a3d3:   0f be f0                        	movsx esi, al
0x804a3d6:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a3da:   0f be f8                        	movsx edi, al
0x804a3dd:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a3e3:   0f be c0                        	movsx eax, al
0x804a3e6:   89 c1                           	mov ecx, eax
0x804a3e8:   d3 e7                           	shl edi, cl
0x804a3ea:   89 f8                           	mov eax, edi
0x804a3ec:   0f be c0                        	movsx eax, al
0x804a3ef:   89 c1                           	mov ecx, eax
0x804a3f1:   d3 fe                           	sar esi, cl
0x804a3f3:   89 f0                           	mov eax, esi
0x804a3f5:   0f b6 c0                        	movzx eax, al
0x804a3f8:   29 c2                           	sub edx, eax
0x804a3fa:   89 d0                           	mov eax, edx
0x804a3fc:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x804a402:   0f 9f c0                        	setg al
0x804a405:   0f b6 c0                        	movzx eax, al
0x804a408:   89 c2                           	mov edx, eax
0x804a40a:   0f b6 85 80 fe ff ff            	movzx eax, byte ptr [ebp - 0x180]
0x804a411:   0f af c2                        	imul eax, edx
0x804a414:   0f be c8                        	movsx ecx, al
0x804a417:   89 d8                           	mov eax, ebx
0x804a419:   99                              	cdq 
0x804a41a:   f7 f9                           	idiv ecx
0x804a41c:   89 d0                           	mov eax, edx
0x804a41e:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a421:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a425:   83 e8 01                        	sub eax, 1
0x804a428:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x804a42b:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a432:   e9 67 04 00 00                  	jmp 0x804a89e <func_1+0x10a0>
0x804a437:   c6 85 cf fe ff ff ff            	mov byte ptr [ebp - 0x131], 0xff
0x804a43e:   c7 85 c8 fe ff ff 12 1c 84 40   	mov dword ptr [ebp - 0x138], 0x40841c12
0x804a448:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x804a44f:   74 24                           	je 0x804a475 <func_1+0xc77>
0x804a451:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a457:   3b 85 d4 fe ff ff               	cmp eax, dword ptr [ebp - 0x12c]
0x804a45d:   0f 92 c0                        	setb al
0x804a460:   0f b6 c0                        	movzx eax, al
0x804a463:   23 85 d4 fe ff ff               	and eax, dword ptr [ebp - 0x12c]
0x804a469:   83 f8 2e                        	cmp eax, 0x2e
0x804a46c:   76 07                           	jbe 0x804a475 <func_1+0xc77>
0x804a46e:   b8 01 00 00 00                  	mov eax, 1
0x804a473:   eb 05                           	jmp 0x804a47a <func_1+0xc7c>
0x804a475:   b8 00 00 00 00                  	mov eax, 0
0x804a47a:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a480:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a483:   83 f0 2a                        	xor eax, 0x2a
0x804a486:   0f b6 d0                        	movzx edx, al
0x804a489:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a48c:   0f b6 c0                        	movzx eax, al
0x804a48f:   89 c1                           	mov ecx, eax
0x804a491:   d3 fa                           	sar edx, cl
0x804a493:   89 d0                           	mov eax, edx
0x804a495:   0f b6 d0                        	movzx edx, al
0x804a498:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a49c:   29 c2                           	sub edx, eax
0x804a49e:   89 d0                           	mov eax, edx
0x804a4a0:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804a4a3:   85 c0                           	test eax, eax
0x804a4a5:   74 10                           	je 0x804a4b7 <func_1+0xcb9>
0x804a4a7:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x804a4ae:   74 07                           	je 0x804a4b7 <func_1+0xcb9>
0x804a4b0:   b8 01 00 00 00                  	mov eax, 1
0x804a4b5:   eb 05                           	jmp 0x804a4bc <func_1+0xcbe>
0x804a4b7:   b8 00 00 00 00                  	mov eax, 0
0x804a4bc:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a4c2:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a4c8:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a4cb:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804a4d2:   0f bf 95 6c ff ff ff            	movsx edx, word ptr [ebp - 0x94]
0x804a4d9:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804a4dd:   0f bf 9d 6e ff ff ff            	movsx ebx, word ptr [ebp - 0x92]
0x804a4e4:   0f b6 75 b7                     	movzx esi, byte ptr [ebp - 0x49]
0x804a4e8:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804a4ec:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a4f2:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a4f6:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a4fc:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x804a500:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a506:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a50a:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a510:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a514:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a51a:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x804a51e:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x804a524:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x804a528:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a52e:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a532:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a538:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a53e:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a544:   50                              	push eax
0x804a545:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a54b:   52                              	push edx
0x804a54c:   51                              	push ecx
0x804a54d:   53                              	push ebx
0x804a54e:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a554:   56                              	push esi
0x804a555:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a558:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a55b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a561:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a567:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a56a:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a56d:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a573:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a576:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a57c:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a582:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a588:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a58b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a58e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a591:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a597:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a59d:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a5a3:   57                              	push edi
0x804a5a4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5a7:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5aa:   e8 77 f0 ff ff                  	call 0x8049626 <set_var>
0x804a5af:   83 c4 78                        	add esp, 0x78
0x804a5b2:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a5b5:   e9 71 06 00 00                  	jmp 0x804ac2b <func_1+0x142d>
0x804a5ba:   c7 85 d8 fe ff ff a6 06 d2 f7   	mov dword ptr [ebp - 0x128], 0xf7d206a6
0x804a5c4:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x804a5cb:   e9 8b 00 00 00                  	jmp 0x804a65b <func_1+0xe5d>
0x804a5d0:   66 0f be 45 d4                  	movsx ax, byte ptr [ebp - 0x2c]
0x804a5d5:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a5d9:   81 65 bc c2 1f 00 00            	and dword ptr [ebp - 0x44], 0x1fc2
0x804a5e0:   c6 45 eb 00                     	mov byte ptr [ebp - 0x15], 0
0x804a5e4:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a5e8:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a5ee:   0f b6 c0                        	movzx eax, al
0x804a5f1:   29 c2                           	sub edx, eax
0x804a5f3:   89 d0                           	mov eax, edx
0x804a5f5:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x804a5f8:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a5fb:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a5fe:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a602:   74 05                           	je 0x804a609 <func_1+0xe0b>
0x804a604:   e9 de fb ff ff                  	jmp 0x804a1e7 <func_1+0x9e9>
0x804a609:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804a60d:   75 47                           	jne 0x804a656 <func_1+0xe58>
0x804a60f:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a615:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a618:   8b 4d bc                        	mov ecx, dword ptr [ebp - 0x44]
0x804a61b:   b8 f9 ff ff ff                  	mov eax, 0xfffffff9
0x804a620:   99                              	cdq 
0x804a621:   f7 f9                           	idiv ecx
0x804a623:   89 d0                           	mov eax, edx
0x804a625:   3d cb 1e 00 00                  	cmp eax, 0x1ecb
0x804a62a:   0f 95 c0                        	setne al
0x804a62d:   0f b6 c0                        	movzx eax, al
0x804a630:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a633:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a636:   89 c2                           	mov edx, eax
0x804a638:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a63b:   01 d0                           	add eax, edx
0x804a63d:   0f be d0                        	movsx edx, al
0x804a640:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a643:   0f be c0                        	movsx eax, al
0x804a646:   89 c1                           	mov ecx, eax
0x804a648:   d3 e2                           	shl edx, cl
0x804a64a:   89 d0                           	mov eax, edx
0x804a64c:   f7 d8                           	neg eax
0x804a64e:   83 f0 08                        	xor eax, 8
0x804a651:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a654:   eb 01                           	jmp 0x804a657 <func_1+0xe59>
0x804a656:   90                              	nop 
0x804a657:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a65b:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a65f:   0f 8f 6b ff ff ff               	jg 0x804a5d0 <func_1+0xdd2>
0x804a665:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a66c:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a672:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804a679:   0f bf 95 6c ff ff ff            	movsx edx, word ptr [ebp - 0x94]
0x804a680:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804a684:   0f bf 9d 6e ff ff ff            	movsx ebx, word ptr [ebp - 0x92]
0x804a68b:   0f b6 75 b7                     	movzx esi, byte ptr [ebp - 0x49]
0x804a68f:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804a693:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a699:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a69d:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a6a3:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x804a6a7:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a6ad:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a6b1:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a6b7:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a6bb:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a6c1:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x804a6c5:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x804a6cb:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x804a6cf:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a6d5:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a6d9:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a6df:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a6e5:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a6eb:   50                              	push eax
0x804a6ec:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a6f2:   52                              	push edx
0x804a6f3:   51                              	push ecx
0x804a6f4:   53                              	push ebx
0x804a6f5:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a6fb:   56                              	push esi
0x804a6fc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a6ff:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a702:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a708:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a70e:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a711:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a714:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a71a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a71d:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a723:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a729:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a72f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a732:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a735:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a738:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a73e:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a744:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a74a:   57                              	push edi
0x804a74b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a74e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a751:   e8 d0 ee ff ff                  	call 0x8049626 <set_var>
0x804a756:   83 c4 78                        	add esp, 0x78
0x804a759:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a75c:   e9 ca 04 00 00                  	jmp 0x804ac2b <func_1+0x142d>
0x804a761:   c6 85 c3 fe ff ff fe            	mov byte ptr [ebp - 0x13d], 0xfe
0x804a768:   c7 85 bc fe ff ff f2 22 d4 e3   	mov dword ptr [ebp - 0x144], 0xe3d422f2
0x804a772:   c6 85 bb fe ff ff ff            	mov byte ptr [ebp - 0x145], 0xff
0x804a779:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x804a77f:   eb 16                           	jmp 0x804a797 <func_1+0xf99>
0x804a781:   c7 45 f0 73 00 00 00            	mov dword ptr [ebp - 0x10], 0x73
0x804a788:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a78c:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a790:   83 c0 01                        	add eax, 1
0x804a793:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a797:   66 83 7d e6 14                  	cmp word ptr [ebp - 0x1a], 0x14
0x804a79c:   7f e3                           	jg 0x804a781 <func_1+0xf83>
0x804a79e:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x804a7a2:   80 7d eb 01                     	cmp byte ptr [ebp - 0x15], 1
0x804a7a6:   75 07                           	jne 0x804a7af <func_1+0xfb1>
0x804a7a8:   b8 00 00 00 00                  	mov eax, 0
0x804a7ad:   eb 05                           	jmp 0x804a7b4 <func_1+0xfb6>
0x804a7af:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a7b4:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a7b7:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a7ba:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a7bd:   0f 97 c0                        	seta al
0x804a7c0:   0f b6 c0                        	movzx eax, al
0x804a7c3:   66 89 85 0e ff ff ff            	mov word ptr [ebp - 0xf2], ax
0x804a7ca:   0f bf 85 0e ff ff ff            	movsx eax, word ptr [ebp - 0xf2]
0x804a7d1:   23 85 10 ff ff ff               	and eax, dword ptr [ebp - 0xf0]
0x804a7d7:   89 c2                           	mov edx, eax
0x804a7d9:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a7dc:   39 c2                           	cmp edx, eax
0x804a7de:   0f 93 c0                        	setae al
0x804a7e1:   88 85 bb fe ff ff               	mov byte ptr [ebp - 0x145], al
0x804a7e7:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x804a7ee:   74 7e                           	je 0x804a86e <func_1+0x1070>
0x804a7f0:   66 c7 85 b8 fe ff ff 01 00      	mov word ptr [ebp - 0x148], 1
0x804a7f9:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a800:   66 31 85 b8 fe ff ff            	xor word ptr [ebp - 0x148], ax
0x804a807:   66 83 bd b8 fe ff ff 00         	cmp word ptr [ebp - 0x148], 0
0x804a80f:   75 06                           	jne 0x804a817 <func_1+0x1019>
0x804a811:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a815:   74 07                           	je 0x804a81e <func_1+0x1020>
0x804a817:   b8 01 00 00 00                  	mov eax, 1
0x804a81c:   eb 05                           	jmp 0x804a823 <func_1+0x1025>
0x804a81e:   b8 00 00 00 00                  	mov eax, 0
0x804a823:   85 c0                           	test eax, eax
0x804a825:   74 07                           	je 0x804a82e <func_1+0x1030>
0x804a827:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a82e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a831:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a834:   0f 97 c0                        	seta al
0x804a837:   0f b6 d0                        	movzx edx, al
0x804a83a:   0f be 85 bb fe ff ff            	movsx eax, byte ptr [ebp - 0x145]
0x804a841:   21 d0                           	and eax, edx
0x804a843:   33 45 ac                        	xor eax, dword ptr [ebp - 0x54]
0x804a846:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a849:   74 08                           	je 0x804a853 <func_1+0x1055>
0x804a84b:   66 83 bd b8 fe ff ff 00         	cmp word ptr [ebp - 0x148], 0
0x804a853:   8b 95 10 ff ff ff               	mov edx, dword ptr [ebp - 0xf0]
0x804a859:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a85c:   01 d0                           	add eax, edx
0x804a85e:   3d 7f ba 00 00                  	cmp eax, 0xba7f
0x804a863:   0f 9f c0                        	setg al
0x804a866:   0f b6 c0                        	movzx eax, al
0x804a869:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a86c:   eb 2c                           	jmp 0x804a89a <func_1+0x109c>
0x804a86e:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a872:   75 09                           	jne 0x804a87d <func_1+0x107f>
0x804a874:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804a87b:   74 07                           	je 0x804a884 <func_1+0x1086>
0x804a87d:   b8 01 00 00 00                  	mov eax, 1
0x804a882:   eb 05                           	jmp 0x804a889 <func_1+0x108b>
0x804a884:   b8 00 00 00 00                  	mov eax, 0
0x804a889:   85 c0                           	test eax, eax
0x804a88b:   0f 94 c0                        	sete al
0x804a88e:   0f b6 c0                        	movzx eax, al
0x804a891:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a894:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a897:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a89a:   83 45 90 09                     	add dword ptr [ebp - 0x70], 9
0x804a89e:   83 7d 90 19                     	cmp dword ptr [ebp - 0x70], 0x19
0x804a8a2:   0f 87 b9 fe ff ff               	ja 0x804a761 <func_1+0xf63>
0x804a8a8:   8b 8d 10 ff ff ff               	mov ecx, dword ptr [ebp - 0xf0]
0x804a8ae:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a8b1:   99                              	cdq 
0x804a8b2:   f7 f9                           	idiv ecx
0x804a8b4:   89 d0                           	mov eax, edx
0x804a8b6:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x804a8b9:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a8bc:   89 c2                           	mov edx, eax
0x804a8be:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a8c2:   09 d0                           	or eax, edx
0x804a8c4:   89 c2                           	mov edx, eax
0x804a8c6:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a8cc:   31 d0                           	xor eax, edx
0x804a8ce:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a8d1:   80 7d eb 05                     	cmp byte ptr [ebp - 0x15], 5
0x804a8d5:   0f 97 c0                        	seta al
0x804a8d8:   0f b6 d0                        	movzx edx, al
0x804a8db:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804a8df:   39 c2                           	cmp edx, eax
0x804a8e1:   0f 9f c0                        	setg al
0x804a8e4:   0f b6 c0                        	movzx eax, al
0x804a8e7:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a8ea:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a8f0:   0f b6 d0                        	movzx edx, al
0x804a8f3:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a8f7:   0f b6 c0                        	movzx eax, al
0x804a8fa:   0f af c2                        	imul eax, edx
0x804a8fd:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a900:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a906:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a909:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a90c:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x804a90f:   0f 95 c0                        	setne al
0x804a912:   0f b6 c0                        	movzx eax, al
0x804a915:   8b b5 04 ff ff ff               	mov esi, dword ptr [ebp - 0xfc]
0x804a91b:   99                              	cdq 
0x804a91c:   f7 fe                           	idiv esi
0x804a91e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a921:   66 83 bd e8 fe ff ff 00         	cmp word ptr [ebp - 0x118], 0
0x804a929:   0f 95 c0                        	setne al
0x804a92c:   0f b6 c0                        	movzx eax, al
0x804a92f:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a932:   0f 94 c0                        	sete al
0x804a935:   0f b6 c0                        	movzx eax, al
0x804a938:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x804a93e:   0f 96 c0                        	setbe al
0x804a941:   0f b6 c0                        	movzx eax, al
0x804a944:   33 85 04 ff ff ff               	xor eax, dword ptr [ebp - 0xfc]
0x804a94a:   89 c2                           	mov edx, eax
0x804a94c:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a950:   39 c2                           	cmp edx, eax
0x804a952:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804a959:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a95c:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a95f:   0b 45 e0                        	or eax, dword ptr [ebp - 0x20]
0x804a962:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a965:   c7 85 a8 fe ff ff 09 a5 48 b1   	mov dword ptr [ebp - 0x158], 0xb148a509
0x804a96f:   c7 85 a4 fe ff ff 7d 42 e2 d8   	mov dword ptr [ebp - 0x15c], 0xd8e2427d
0x804a979:   c7 45 80 f6 ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffff6
0x804a980:   c7 85 a0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x160], 1
0x804a98a:   80 6d b7 01                     	sub byte ptr [ebp - 0x49], 1
0x804a98e:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a992:   83 e8 01                        	sub eax, 1
0x804a995:   88 45 b6                        	mov byte ptr [ebp - 0x4a], al
0x804a998:   66 c7 85 9e fe ff ff 9c 87      	mov word ptr [ebp - 0x162], 0x879c
0x804a9a1:   c7 85 98 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x168], 0
0x804a9ab:   c7 85 7c ff ff ff b7 ec ec 1d   	mov dword ptr [ebp - 0x84], 0x1dececb7
0x804a9b5:   0f b7 85 9e fe ff ff            	movzx eax, word ptr [ebp - 0x162]
0x804a9bc:   83 e8 01                        	sub eax, 1
0x804a9bf:   66 89 85 9e fe ff ff            	mov word ptr [ebp - 0x162], ax
0x804a9c6:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a9ca:   34 f8                           	xor al, 0xf8
0x804a9cc:   0f b7 d0                        	movzx edx, ax
0x804a9cf:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a9d3:   09 d0                           	or eax, edx
0x804a9d5:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a9db:   b8 a9 b5 2a 6e                  	mov eax, 0x6e2ab5a9
0x804a9e0:   31 85 7c ff ff ff               	xor dword ptr [ebp - 0x84], eax
0x804a9e6:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a9e9:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x804a9ec:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a9ef:   c7 85 7c ff ff ff 0f 00 00 00   	mov dword ptr [ebp - 0x84], 0xf
0x804a9f9:   e9 c8 00 00 00                  	jmp 0x804aac6 <func_1+0x12c8>
0x804a9fe:   c7 85 94 fe ff ff 20 43 e3 ed   	mov dword ptr [ebp - 0x16c], 0xede34320
0x804aa08:   0f be 8d e7 fe ff ff            	movsx ecx, byte ptr [ebp - 0x119]
0x804aa0f:   c6 45 eb 64                     	mov byte ptr [ebp - 0x15], 0x64
0x804aa13:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804aa19:   89 c2                           	mov edx, eax
0x804aa1b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804aa1e:   31 d0                           	xor eax, edx
0x804aa20:   0f b6 c0                        	movzx eax, al
0x804aa23:   01 c0                           	add eax, eax
0x804aa25:   66 0f be d0                     	movsx dx, al
0x804aa29:   66 0f be 45 d4                  	movsx ax, byte ptr [ebp - 0x2c]
0x804aa2e:   0f af c2                        	imul eax, edx
0x804aa31:   98                              	cwde 
0x804aa32:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x804aa38:   0f bf da                        	movsx ebx, dx
0x804aa3b:   99                              	cdq 
0x804aa3c:   f7 fb                           	idiv ebx
0x804aa3e:   89 95 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edx
0x804aa44:   b8 01 00 00 00                  	mov eax, 1
0x804aa49:   0f bf d0                        	movsx edx, ax
0x804aa4c:   69 d2 37 9f ff ff               	imul edx, edx, 0xffff9f37
0x804aa52:   c1 ea 10                        	shr edx, 0x10
0x804aa55:   01 c2                           	add edx, eax
0x804aa57:   89 d3                           	mov ebx, edx
0x804aa59:   66 c1 fb 0c                     	sar bx, 0xc
0x804aa5d:   89 c2                           	mov edx, eax
0x804aa5f:   66 c1 fa 0f                     	sar dx, 0xf
0x804aa63:   29 d3                           	sub ebx, edx
0x804aa65:   89 da                           	mov edx, ebx
0x804aa67:   66 69 d2 ba 19                  	imul dx, dx, 0x19ba
0x804aa6c:   29 d0                           	sub eax, edx
0x804aa6e:   89 c2                           	mov edx, eax
0x804aa70:   0f bf c2                        	movsx eax, dx
0x804aa73:   0b 45 8c                        	or eax, dword ptr [ebp - 0x74]
0x804aa76:   83 f8 64                        	cmp eax, 0x64
0x804aa79:   0f 95 c0                        	setne al
0x804aa7c:   0f b6 c0                        	movzx eax, al
0x804aa7f:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804aa82:   75 10                           	jne 0x804aa94 <func_1+0x1296>
0x804aa84:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x804aa8b:   74 07                           	je 0x804aa94 <func_1+0x1296>
0x804aa8d:   b8 01 00 00 00                  	mov eax, 1
0x804aa92:   eb 05                           	jmp 0x804aa99 <func_1+0x129b>
0x804aa94:   b8 00 00 00 00                  	mov eax, 0
0x804aa99:   2b 45 d0                        	sub eax, dword ptr [ebp - 0x30]
0x804aa9c:   39 c1                           	cmp ecx, eax
0x804aa9e:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x804aaa5:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804aaa8:   c6 45 d4 f7                     	mov byte ptr [ebp - 0x2c], 0xf7
0x804aaac:   0f be 45 d4                     	movsx eax, byte ptr [ebp - 0x2c]
0x804aab0:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x804aab6:   0f 94 c0                        	sete al
0x804aab9:   0f b6 c0                        	movzx eax, al
0x804aabc:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804aabf:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x804aac6:   83 bd 7c ff ff ff f3            	cmp dword ptr [ebp - 0x84], -0xd
0x804aacd:   0f 85 2b ff ff ff               	jne 0x804a9fe <func_1+0x1200>
0x804aad3:   c7 45 94 ff ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffff
0x804aada:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804aadd:   88 45 b6                        	mov byte ptr [ebp - 0x4a], al
0x804aae0:   b8 01 00 00 00                  	mov eax, 1
0x804aae5:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x804aae8:   eb 49                           	jmp 0x804ab33 <func_1+0x1335>
0x804aaea:   c7 85 f0 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x110], 9
0x804aaf4:   c7 85 ec fe ff ff 1e fa 00 12   	mov dword ptr [ebp - 0x114], 0x1200fa1e
0x804aafe:   0f bf 95 66 ff ff ff            	movsx edx, word ptr [ebp - 0x9a]
0x804ab05:   0f bf 8d 6c ff ff ff            	movsx ecx, word ptr [ebp - 0x94]
0x804ab0c:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804ab0f:   0f b6 c0                        	movzx eax, al
0x804ab12:   83 c0 01                        	add eax, 1
0x804ab15:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804ab1b:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804ab21:   98                              	cwde 
0x804ab22:   0f af c1                        	imul eax, ecx
0x804ab25:   83 f8 7a                        	cmp eax, 0x7a
0x804ab28:   0f 9f c0                        	setg al
0x804ab2b:   0f b6 c0                        	movzx eax, al
0x804ab2e:   21 d0                           	and eax, edx
0x804ab30:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804ab33:   c7 85 38 ff ff ff 4b 67 00 00   	mov dword ptr [ebp - 0xc8], 0x674b
0x804ab3d:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804ab44:   0f bf 95 6c ff ff ff            	movsx edx, word ptr [ebp - 0x94]
0x804ab4b:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804ab4f:   0f bf 9d 6e ff ff ff            	movsx ebx, word ptr [ebp - 0x92]
0x804ab56:   0f b6 75 b7                     	movzx esi, byte ptr [ebp - 0x49]
0x804ab5a:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804ab5e:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804ab64:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804ab68:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804ab6e:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x804ab72:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804ab78:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804ab7c:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804ab82:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804ab86:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804ab8c:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x804ab90:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x804ab96:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x804ab9a:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804aba0:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804aba4:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804abaa:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804abb0:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804abb6:   50                              	push eax
0x804abb7:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804abbd:   52                              	push edx
0x804abbe:   51                              	push ecx
0x804abbf:   53                              	push ebx
0x804abc0:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804abc6:   56                              	push esi
0x804abc7:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804abca:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804abcd:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804abd3:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804abd9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804abdc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804abdf:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804abe5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804abe8:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804abee:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804abf4:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804abfa:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804abfd:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ac00:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ac03:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ac09:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ac0f:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ac15:   57                              	push edi
0x804ac16:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ac19:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ac1c:   e8 05 ea ff ff                  	call 0x8049626 <set_var>
0x804ac21:   83 c4 78                        	add esp, 0x78
0x804ac24:   0f be 85 41 ff ff ff            	movsx eax, byte ptr [ebp - 0xbf]
0x804ac2b:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ac2e:   5b                              	pop ebx
0x804ac2f:   5e                              	pop esi
0x804ac30:   5f                              	pop edi
0x804ac31:   5d                              	pop ebp
0x804ac32:   c3                              	ret 
; function: main at 0x804ac33 -- 0x804b03b
0x804ac33:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ac37:   83 e4 f0                        	and esp, 0xfffffff0
0x804ac3a:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ac3d:   55                              	push ebp
0x804ac3e:   89 e5                           	mov ebp, esp
0x804ac40:   53                              	push ebx
0x804ac41:   51                              	push ecx
0x804ac42:   83 ec 10                        	sub esp, 0x10
0x804ac45:   e8 46 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac4a:   81 c3 b6 33 00 00               	add ebx, 0x33b6
0x804ac50:   89 c8                           	mov eax, ecx
0x804ac52:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ac59:   83 38 02                        	cmp dword ptr [eax], 2
0x804ac5c:   75 26                           	jne 0x804ac84 <main+0x51>
0x804ac5e:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ac61:   83 c0 04                        	add eax, 4
0x804ac64:   8b 00                           	mov eax, dword ptr [eax]
0x804ac66:   83 ec 08                        	sub esp, 8
0x804ac69:   8d 93 28 d1 ff ff               	lea edx, [ebx - 0x2ed8]
0x804ac6f:   52                              	push edx
0x804ac70:   50                              	push eax
0x804ac71:   e8 8a d6 ff ff                  	call 0x8048300 <strcmp>
0x804ac76:   83 c4 10                        	add esp, 0x10
0x804ac79:   85 c0                           	test eax, eax
0x804ac7b:   75 07                           	jne 0x804ac84 <main+0x51>
0x804ac7d:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ac84:   e8 cd d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ac89:   e8 dd e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804ac8e:   e8 6b eb ff ff                  	call 0x80497fe <func_1>
0x804ac93:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804ac99:   89 c2                           	mov edx, eax
0x804ac9b:   83 ec 04                        	sub esp, 4
0x804ac9e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca1:   8d 83 2a d1 ff ff               	lea eax, [ebx - 0x2ed6]
0x804aca7:   50                              	push eax
0x804aca8:   52                              	push edx
0x804aca9:   e8 c9 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acae:   83 c4 10                        	add esp, 0x10
0x804acb1:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804acb7:   83 ec 04                        	sub esp, 4
0x804acba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acbd:   8d 93 2e d1 ff ff               	lea edx, [ebx - 0x2ed2]
0x804acc3:   52                              	push edx
0x804acc4:   50                              	push eax
0x804acc5:   e8 ad e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acca:   83 c4 10                        	add esp, 0x10
0x804accd:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804acd4:   0f b6 c0                        	movzx eax, al
0x804acd7:   83 ec 04                        	sub esp, 4
0x804acda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acdd:   8d 93 33 d1 ff ff               	lea edx, [ebx - 0x2ecd]
0x804ace3:   52                              	push edx
0x804ace4:   50                              	push eax
0x804ace5:   e8 8d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acea:   83 c4 10                        	add esp, 0x10
0x804aced:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804acf4:   98                              	cwde 
0x804acf5:   83 ec 04                        	sub esp, 4
0x804acf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acfb:   8d 93 38 d1 ff ff               	lea edx, [ebx - 0x2ec8]
0x804ad01:   52                              	push edx
0x804ad02:   50                              	push eax
0x804ad03:   e8 6f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad08:   83 c4 10                        	add esp, 0x10
0x804ad0b:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804ad12:   0f be c0                        	movsx eax, al
0x804ad15:   83 ec 04                        	sub esp, 4
0x804ad18:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad1b:   8d 93 3d d1 ff ff               	lea edx, [ebx - 0x2ec3]
0x804ad21:   52                              	push edx
0x804ad22:   50                              	push eax
0x804ad23:   e8 4f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad28:   83 c4 10                        	add esp, 0x10
0x804ad2b:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804ad32:   98                              	cwde 
0x804ad33:   83 ec 04                        	sub esp, 4
0x804ad36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad39:   8d 93 42 d1 ff ff               	lea edx, [ebx - 0x2ebe]
0x804ad3f:   52                              	push edx
0x804ad40:   50                              	push eax
0x804ad41:   e8 31 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad46:   83 c4 10                        	add esp, 0x10
0x804ad49:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ad4f:   83 ec 04                        	sub esp, 4
0x804ad52:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad55:   8d 93 47 d1 ff ff               	lea edx, [ebx - 0x2eb9]
0x804ad5b:   52                              	push edx
0x804ad5c:   50                              	push eax
0x804ad5d:   e8 15 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad62:   83 c4 10                        	add esp, 0x10
0x804ad65:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ad6b:   83 ec 04                        	sub esp, 4
0x804ad6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad71:   8d 93 4d d1 ff ff               	lea edx, [ebx - 0x2eb3]
0x804ad77:   52                              	push edx
0x804ad78:   50                              	push eax
0x804ad79:   e8 f9 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7e:   83 c4 10                        	add esp, 0x10
0x804ad81:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ad87:   83 ec 04                        	sub esp, 4
0x804ad8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8d:   8d 93 53 d1 ff ff               	lea edx, [ebx - 0x2ead]
0x804ad93:   52                              	push edx
0x804ad94:   50                              	push eax
0x804ad95:   e8 dd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9a:   83 c4 10                        	add esp, 0x10
0x804ad9d:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804ada4:   0f b7 c0                        	movzx eax, ax
0x804ada7:   83 ec 04                        	sub esp, 4
0x804adaa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adad:   8d 93 59 d1 ff ff               	lea edx, [ebx - 0x2ea7]
0x804adb3:   52                              	push edx
0x804adb4:   50                              	push eax
0x804adb5:   e8 bd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adba:   83 c4 10                        	add esp, 0x10
0x804adbd:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804adc3:   89 c2                           	mov edx, eax
0x804adc5:   83 ec 04                        	sub esp, 4
0x804adc8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcb:   8d 83 5f d1 ff ff               	lea eax, [ebx - 0x2ea1]
0x804add1:   50                              	push eax
0x804add2:   52                              	push edx
0x804add3:   e8 9f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add8:   83 c4 10                        	add esp, 0x10
0x804addb:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ade2:   0f be c0                        	movsx eax, al
0x804ade5:   83 ec 04                        	sub esp, 4
0x804ade8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adeb:   8d 93 65 d1 ff ff               	lea edx, [ebx - 0x2e9b]
0x804adf1:   52                              	push edx
0x804adf2:   50                              	push eax
0x804adf3:   e8 7f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf8:   83 c4 10                        	add esp, 0x10
0x804adfb:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ae01:   83 ec 04                        	sub esp, 4
0x804ae04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae07:   8d 93 6b d1 ff ff               	lea edx, [ebx - 0x2e95]
0x804ae0d:   52                              	push edx
0x804ae0e:   50                              	push eax
0x804ae0f:   e8 63 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae14:   83 c4 10                        	add esp, 0x10
0x804ae17:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804ae1e:   0f b7 c0                        	movzx eax, ax
0x804ae21:   83 ec 04                        	sub esp, 4
0x804ae24:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae27:   8d 93 71 d1 ff ff               	lea edx, [ebx - 0x2e8f]
0x804ae2d:   52                              	push edx
0x804ae2e:   50                              	push eax
0x804ae2f:   e8 43 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae34:   83 c4 10                        	add esp, 0x10
0x804ae37:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ae3d:   83 ec 04                        	sub esp, 4
0x804ae40:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae43:   8d 93 77 d1 ff ff               	lea edx, [ebx - 0x2e89]
0x804ae49:   52                              	push edx
0x804ae4a:   50                              	push eax
0x804ae4b:   e8 27 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae50:   83 c4 10                        	add esp, 0x10
0x804ae53:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ae59:   89 c2                           	mov edx, eax
0x804ae5b:   83 ec 04                        	sub esp, 4
0x804ae5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae61:   8d 83 7d d1 ff ff               	lea eax, [ebx - 0x2e83]
0x804ae67:   50                              	push eax
0x804ae68:   52                              	push edx
0x804ae69:   e8 09 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6e:   83 c4 10                        	add esp, 0x10
0x804ae71:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ae77:   89 c2                           	mov edx, eax
0x804ae79:   83 ec 04                        	sub esp, 4
0x804ae7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7f:   8d 83 83 d1 ff ff               	lea eax, [ebx - 0x2e7d]
0x804ae85:   50                              	push eax
0x804ae86:   52                              	push edx
0x804ae87:   e8 eb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8c:   83 c4 10                        	add esp, 0x10
0x804ae8f:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804ae96:   0f b6 c0                        	movzx eax, al
0x804ae99:   83 ec 04                        	sub esp, 4
0x804ae9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9f:   8d 93 89 d1 ff ff               	lea edx, [ebx - 0x2e77]
0x804aea5:   52                              	push edx
0x804aea6:   50                              	push eax
0x804aea7:   e8 cb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeac:   83 c4 10                        	add esp, 0x10
0x804aeaf:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aeb5:   83 ec 04                        	sub esp, 4
0x804aeb8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebb:   8d 93 8f d1 ff ff               	lea edx, [ebx - 0x2e71]
0x804aec1:   52                              	push edx
0x804aec2:   50                              	push eax
0x804aec3:   e8 af e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec8:   83 c4 10                        	add esp, 0x10
0x804aecb:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804aed1:   83 ec 04                        	sub esp, 4
0x804aed4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed7:   8d 93 95 d1 ff ff               	lea edx, [ebx - 0x2e6b]
0x804aedd:   52                              	push edx
0x804aede:   50                              	push eax
0x804aedf:   e8 93 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee4:   83 c4 10                        	add esp, 0x10
0x804aee7:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804aeee:   0f b6 c0                        	movzx eax, al
0x804aef1:   83 ec 04                        	sub esp, 4
0x804aef4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef7:   8d 93 9b d1 ff ff               	lea edx, [ebx - 0x2e65]
0x804aefd:   52                              	push edx
0x804aefe:   50                              	push eax
0x804aeff:   e8 73 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af04:   83 c4 10                        	add esp, 0x10
0x804af07:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804af0d:   89 c2                           	mov edx, eax
0x804af0f:   83 ec 04                        	sub esp, 4
0x804af12:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af15:   8d 83 a1 d1 ff ff               	lea eax, [ebx - 0x2e5f]
0x804af1b:   50                              	push eax
0x804af1c:   52                              	push edx
0x804af1d:   e8 55 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af22:   83 c4 10                        	add esp, 0x10
0x804af25:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804af2c:   98                              	cwde 
0x804af2d:   83 ec 04                        	sub esp, 4
0x804af30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af33:   8d 93 a7 d1 ff ff               	lea edx, [ebx - 0x2e59]
0x804af39:   52                              	push edx
0x804af3a:   50                              	push eax
0x804af3b:   e8 37 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af40:   83 c4 10                        	add esp, 0x10
0x804af43:   0f b6 83 6e 00 00 00            	movzx eax, byte ptr [ebx + 0x6e]
0x804af4a:   0f b6 c0                        	movzx eax, al
0x804af4d:   83 ec 04                        	sub esp, 4
0x804af50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af53:   8d 93 ad d1 ff ff               	lea edx, [ebx - 0x2e53]
0x804af59:   52                              	push edx
0x804af5a:   50                              	push eax
0x804af5b:   e8 17 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af60:   83 c4 10                        	add esp, 0x10
0x804af63:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804af6a:   98                              	cwde 
0x804af6b:   83 ec 04                        	sub esp, 4
0x804af6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af71:   8d 93 b3 d1 ff ff               	lea edx, [ebx - 0x2e4d]
0x804af77:   52                              	push edx
0x804af78:   50                              	push eax
0x804af79:   e8 f9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7e:   83 c4 10                        	add esp, 0x10
0x804af81:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804af87:   83 ec 04                        	sub esp, 4
0x804af8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8d:   8d 93 b9 d1 ff ff               	lea edx, [ebx - 0x2e47]
0x804af93:   52                              	push edx
0x804af94:   50                              	push eax
0x804af95:   e8 dd e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af9a:   83 c4 10                        	add esp, 0x10
0x804af9d:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804afa4:   98                              	cwde 
0x804afa5:   83 ec 04                        	sub esp, 4
0x804afa8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afab:   8d 93 bf d1 ff ff               	lea edx, [ebx - 0x2e41]
0x804afb1:   52                              	push edx
0x804afb2:   50                              	push eax
0x804afb3:   e8 bf e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb8:   83 c4 10                        	add esp, 0x10
0x804afbb:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804afc1:   89 c2                           	mov edx, eax
0x804afc3:   83 ec 04                        	sub esp, 4
0x804afc6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc9:   8d 83 c5 d1 ff ff               	lea eax, [ebx - 0x2e3b]
0x804afcf:   50                              	push eax
0x804afd0:   52                              	push edx
0x804afd1:   e8 a1 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd6:   83 c4 10                        	add esp, 0x10
0x804afd9:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804afdf:   89 c2                           	mov edx, eax
0x804afe1:   83 ec 04                        	sub esp, 4
0x804afe4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe7:   8d 83 cb d1 ff ff               	lea eax, [ebx - 0x2e35]
0x804afed:   50                              	push eax
0x804afee:   52                              	push edx
0x804afef:   e8 83 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804aff4:   83 c4 10                        	add esp, 0x10
0x804aff7:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804affd:   89 c2                           	mov edx, eax
0x804afff:   83 ec 04                        	sub esp, 4
0x804b002:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b005:   8d 83 d1 d1 ff ff               	lea eax, [ebx - 0x2e2f]
0x804b00b:   50                              	push eax
0x804b00c:   52                              	push edx
0x804b00d:   e8 65 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b012:   83 c4 10                        	add esp, 0x10
0x804b015:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b01b:   f7 d0                           	not eax
0x804b01d:   83 ec 08                        	sub esp, 8
0x804b020:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b023:   50                              	push eax
0x804b024:   e8 3d d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804b029:   83 c4 10                        	add esp, 0x10
0x804b02c:   b8 00 00 00 00                  	mov eax, 0
0x804b031:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b034:   59                              	pop ecx
0x804b035:   5b                              	pop ebx
0x804b036:   5d                              	pop ebp
0x804b037:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b03a:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b03b -- 0x804b03f
0x804b03b:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b03e:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b03f -- 0x804b043
0x804b03f:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b042:   c3                              	ret 
; data inside code section at 0x804b043 -- 0x804b050
0x804b043:   66 90 66 90 66 90 66 90  66 90 66 90 90            |f.f.f.f.f.f..   |
; function: __libc_csu_init at 0x804b050 -- 0x804b0ad
0x804b050:   55                              	push ebp
0x804b051:   57                              	push edi
0x804b052:   56                              	push esi
0x804b053:   53                              	push ebx
0x804b054:   e8 37 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b059:   81 c3 a7 2f 00 00               	add ebx, 0x2fa7
0x804b05f:   83 ec 0c                        	sub esp, 0xc
0x804b062:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b066:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b06c:   e8 5b d2 ff ff                  	call 0x80482cc <_init>
0x804b071:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b077:   29 c6                           	sub esi, eax
0x804b079:   c1 fe 02                        	sar esi, 2
0x804b07c:   85 f6                           	test esi, esi
0x804b07e:   74 25                           	je 0x804b0a5 <__libc_csu_init+0x55>
0x804b080:   31 ff                           	xor edi, edi
0x804b082:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b088:   83 ec 04                        	sub esp, 4
0x804b08b:   55                              	push ebp
0x804b08c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b090:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b094:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b09b:   83 c7 01                        	add edi, 1
0x804b09e:   83 c4 10                        	add esp, 0x10
0x804b0a1:   39 fe                           	cmp esi, edi
0x804b0a3:   75 e3                           	jne 0x804b088 <__libc_csu_init+0x38>
0x804b0a5:   83 c4 0c                        	add esp, 0xc
0x804b0a8:   5b                              	pop ebx
0x804b0a9:   5e                              	pop esi
0x804b0aa:   5f                              	pop edi
0x804b0ab:   5d                              	pop ebp
0x804b0ac:   c3                              	ret 
; data inside code section at 0x804b0ad -- 0x804b0b0
0x804b0ad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b0b0 -- 0x804b0b2
0x804b0b0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b0b4 -- 0x804b0c8
0x804b0b4:   53                              	push ebx
0x804b0b5:   83 ec 08                        	sub esp, 8
0x804b0b8:   e8 d3 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0bd:   81 c3 43 2f 00 00               	add ebx, 0x2f43
0x804b0c3:   83 c4 08                        	add esp, 8
0x804b0c6:   5b                              	pop ebx
0x804b0c7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b0c8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b0d8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b0e8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0f8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b108:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b118:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b128:   31 00 67 5f 36 00 67 5f  31 36 00 67 5f 33 35 00   |1.g_6.g_16.g_35.|
0x804b138:   67 5f 34 33 00 67 5f 34  34 00 67 5f 37 38 00 67   |g_43.g_44.g_78.g|
0x804b148:   5f 31 30 35 00 67 5f 31  33 34 00 67 5f 31 34 33   |_105.g_134.g_143|
0x804b158:   00 67 5f 31 37 38 00 67  5f 31 39 39 00 67 5f 32   |.g_178.g_199.g_2|
0x804b168:   30 30 00 67 5f 32 30 31  00 67 5f 32 30 36 00 67   |00.g_201.g_206.g|
0x804b178:   5f 32 32 32 00 67 5f 33  30 33 00 67 5f 33 30 34   |_222.g_303.g_304|
0x804b188:   00 67 5f 33 30 35 00 67  5f 33 32 30 00 67 5f 33   |.g_305.g_320.g_3|
0x804b198:   35 35 00 67 5f 33 39 33  00 67 5f 33 39 36 00 67   |55.g_393.g_396.g|
0x804b1a8:   5f 33 39 37 00 67 5f 33  39 38 00 67 5f 34 38 37   |_397.g_398.g_487|
0x804b1b8:   00 67 5f 34 38 38 00 67  5f 34 39 35 00 67 5f 34   |.g_488.g_495.g_4|
0x804b1c8:   39 36 00 67 5f 34 39 37  00 67 5f 34 39 38 00 00   |96.g_497.g_498..|
0x804b1d8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b1e8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b1f8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b208:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b218:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b228:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b238:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b240:   01 1b 03 3b b8 02 00 00  56 00 00 00 b0 d0 ff ff   |...;....V.......|
0x804b250:   e8 02 00 00 f0 d0 ff ff  0c 03 00 00 40 d1 ff ff   |............@...|
0x804b260:   d4 02 00 00 16 d2 ff ff  20 03 00 00 26 d2 ff ff   |........ ...&...|
0x804b270:   40 03 00 00 54 d2 ff ff  64 03 00 00 72 d2 ff ff   |@...T...d...r...|
0x804b280:   84 03 00 00 9a d2 ff ff  a4 03 00 00 c4 d2 ff ff   |................|
0x804b290:   c4 03 00 00 ed d2 ff ff  e4 03 00 00 30 d3 ff ff   |............0...|
0x804b2a0:   04 04 00 00 71 d3 ff ff  24 04 00 00 c9 d3 ff ff   |....q...$.......|
0x804b2b0:   48 04 00 00 1b d4 ff ff  6c 04 00 00 58 d4 ff ff   |H.......l...X...|
0x804b2c0:   8c 04 00 00 8f d4 ff ff  ac 04 00 00 ae d4 ff ff   |................|
0x804b2d0:   cc 04 00 00 d8 d4 ff ff  ec 04 00 00 04 d5 ff ff   |................|
0x804b2e0:   0c 05 00 00 2f d5 ff ff  2c 05 00 00 78 d5 ff ff   |..../...,...x...|
0x804b2f0:   4c 05 00 00 bf d5 ff ff  6c 05 00 00 19 d6 ff ff   |L.......l.......|
0x804b300:   90 05 00 00 6d d6 ff ff  b4 05 00 00 ac d6 ff ff   |....m...........|
0x804b310:   d4 05 00 00 e5 d6 ff ff  f4 05 00 00 07 d7 ff ff   |................|
0x804b320:   14 06 00 00 55 d7 ff ff  34 06 00 00 91 d7 ff ff   |....U...4.......|
0x804b330:   54 06 00 00 1a d8 ff ff  74 06 00 00 4c d8 ff ff   |T.......t...L...|
0x804b340:   94 06 00 00 7c d8 ff ff  b4 06 00 00 c1 d8 ff ff   |....|...........|
0x804b350:   d4 06 00 00 00 d9 ff ff  f4 06 00 00 32 d9 ff ff   |............2...|
0x804b360:   14 07 00 00 5e d9 ff ff  34 07 00 00 7c d9 ff ff   |....^...4...|...|
0x804b370:   54 07 00 00 a4 d9 ff ff  74 07 00 00 c9 d9 ff ff   |T.......t.......|
0x804b380:   94 07 00 00 ee d9 ff ff  b4 07 00 00 25 da ff ff   |............%...|
0x804b390:   d4 07 00 00 59 da ff ff  f4 07 00 00 ab da ff ff   |....Y...........|
0x804b3a0:   18 08 00 00 f7 da ff ff  3c 08 00 00 2e db ff ff   |........<.......|
0x804b3b0:   5c 08 00 00 5f db ff ff  7c 08 00 00 7e db ff ff   |\..._...|...~...|
0x804b3c0:   9c 08 00 00 a8 db ff ff  bc 08 00 00 d0 db ff ff   |................|
0x804b3d0:   dc 08 00 00 f9 db ff ff  fc 08 00 00 35 dc ff ff   |............5...|
0x804b3e0:   1c 09 00 00 6f dc ff ff  3c 09 00 00 c2 dc ff ff   |....o...<.......|
0x804b3f0:   60 09 00 00 0f dd ff ff  84 09 00 00 47 dd ff ff   |`...........G...|
0x804b400:   a4 09 00 00 79 dd ff ff  c4 09 00 00 8d dd ff ff   |....y...........|
0x804b410:   e4 09 00 00 a4 dd ff ff  04 0a 00 00 b9 dd ff ff   |................|
0x804b420:   24 0a 00 00 cf dd ff ff  44 0a 00 00 f6 dd ff ff   |$.......D.......|
0x804b430:   64 0a 00 00 1b de ff ff  84 0a 00 00 5a de ff ff   |d...........Z...|
0x804b440:   a4 0a 00 00 93 de ff ff  c4 0a 00 00 bf de ff ff   |................|
0x804b450:   e4 0a 00 00 e5 de ff ff  04 0b 00 00 27 df ff ff   |............'...|
0x804b460:   24 0b 00 00 69 df ff ff  44 0b 00 00 ab df ff ff   |$...i...D.......|
0x804b470:   64 0b 00 00 20 e0 ff ff  84 0b 00 00 7d e0 ff ff   |d... .......}...|
0x804b480:   a4 0b 00 00 da e0 ff ff  c4 0b 00 00 37 e1 ff ff   |............7...|
0x804b490:   e4 0b 00 00 c7 e1 ff ff  04 0c 00 00 2b e2 ff ff   |............+...|
0x804b4a0:   24 0c 00 00 9b e2 ff ff  44 0c 00 00 e2 e2 ff ff   |$.......D.......|
0x804b4b0:   68 0c 00 00 37 e3 ff ff  88 0c 00 00 7e e3 ff ff   |h...7.......~...|
0x804b4c0:   ac 0c 00 00 e6 e3 ff ff  d0 0c 00 00 be e5 ff ff   |................|
0x804b4d0:   00 0d 00 00 f3 f9 ff ff  30 0d 00 00 fb fd ff ff   |........0.......|
0x804b4e0:   68 0d 00 00 ff fd ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b4f0:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b4fc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b50c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b51c:   64 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |d........... ...|
0x804b52c:   30 00 00 00 c0 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b53c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b54c:   10 00 00 00 54 00 00 00  dc cd ff ff 08 00 00 00   |....T...........|
0x804b55c:   00 00 00 00 1c 00 00 00  68 00 00 00 ee ce ff ff   |........h.......|
0x804b56c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b57c:   04 04 00 00 20 00 00 00  88 00 00 00 de ce ff ff   |.... ...........|
0x804b58c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b59c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5ac:   e8 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5bc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b5cc:   e6 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5dc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b5ec:   ee ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b5fc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b60c:   f8 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b61c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b62c:   01 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b63c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b64c:   24 cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |$...A....A....B.|
0x804b65c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b66c:   45 cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |E...X....A....B.|
0x804b67c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b68c:   90 01 00 00 79 cf ff ff  52 00 00 00 00 41 0e 08   |....y...R....A..|
0x804b69c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6ac:   1c 00 00 00 b4 01 00 00  a7 cf ff ff 3d 00 00 00   |............=...|
0x804b6bc:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b6cc:   1c 00 00 00 d4 01 00 00  c4 cf ff ff 37 00 00 00   |............7...|
0x804b6dc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6ec:   1c 00 00 00 f4 01 00 00  db cf ff ff 1f 00 00 00   |................|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b70c:   1c 00 00 00 14 02 00 00  da cf ff ff 2a 00 00 00   |............*...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b72c:   1c 00 00 00 34 02 00 00  e4 cf ff ff 2c 00 00 00   |....4.......,...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b74c:   1c 00 00 00 54 02 00 00  f0 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b76c:   1c 00 00 00 74 02 00 00  fb cf ff ff 49 00 00 00   |....t.......I...|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b78c:   1c 00 00 00 94 02 00 00  24 d0 ff ff 47 00 00 00   |........$...G...|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7ac:   20 00 00 00 b4 02 00 00  4b d0 ff ff 5a 00 00 00   | .......K...Z...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b7cc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 81 d0 ff ff   |.... ...........|
0x804b7dc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b7ec:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b7fc:   b1 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b80c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b81c:   d0 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b82c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b83c:   e9 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b84c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b85c:   eb d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b86c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b87c:   19 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b88c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b89c:   35 d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804b8ac:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b8bc:   9e d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b8dc:   b0 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b8ec:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b8fc:   c0 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b90c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b91c:   e5 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b92c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b93c:   04 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b94c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b95c:   16 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b96c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b97c:   22 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |"........A....B.|
0x804b98c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b99c:   20 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   | ...(....A....B.|
0x804b9ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b9bc:   28 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |(...%....A....B.|
0x804b9cc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b9dc:   2d d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |-...%....A....B.|
0x804b9ec:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b9fc:   32 d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |2...7....A....B.|
0x804ba0c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba1c:   49 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |I...4....A....B.|
0x804ba2c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba3c:   5d d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |]...R....A....B.|
0x804ba4c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba5c:   60 05 00 00 8b d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ba6c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba7c:   1c 00 00 00 84 05 00 00  b3 d2 ff ff 37 00 00 00   |............7...|
0x804ba8c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba9c:   1c 00 00 00 a4 05 00 00  ca d2 ff ff 31 00 00 00   |............1...|
0x804baac:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804babc:   1c 00 00 00 c4 05 00 00  db d2 ff ff 1f 00 00 00   |................|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804badc:   1c 00 00 00 e4 05 00 00  da d2 ff ff 2a 00 00 00   |............*...|
0x804baec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bafc:   1c 00 00 00 04 06 00 00  e4 d2 ff ff 28 00 00 00   |............(...|
0x804bb0c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb1c:   1c 00 00 00 24 06 00 00  ec d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb2c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb3c:   1c 00 00 00 44 06 00 00  f5 d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb5c:   1c 00 00 00 64 06 00 00  11 d3 ff ff 3a 00 00 00   |....d.......:...|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb7c:   20 00 00 00 84 06 00 00  2b d3 ff ff 53 00 00 00   | .......+...S...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb9c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 5a d3 ff ff   |.... .......Z...|
0x804bbac:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bbbc:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bbcc:   83 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bbdc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bbec:   9b d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbfc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc0c:   ad d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc1c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc2c:   a1 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc3c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc4c:   98 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc5c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc6c:   8d d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc7c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc8c:   83 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc9c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcac:   8a d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bcbc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bccc:   8f d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bcdc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bcec:   ae d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bcfc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd0c:   c7 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd1c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd2c:   d3 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd3c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd4c:   d9 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd5c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd6c:   fb d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd7c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd8c:   1d d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd9c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdac:   3f d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |?...u....A....B.|
0x804bdbc:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bdcc:   94 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bddc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bdec:   d1 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bdfc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be0c:   0e d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be1c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be2c:   4b d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |K........A....B.|
0x804be3c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be4c:   bb d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be5c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be6c:   ff d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804be7c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be8c:   4f d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |O...G....A....B.|
0x804be9c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804beac:   b0 09 00 00 72 d6 ff ff  55 00 00 00 00 41 0e 08   |....r...U....A..|
0x804bebc:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804becc:   d0 09 00 00 a7 d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bedc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804beec:   20 00 00 00 f4 09 00 00  ca d6 ff ff 68 00 00 00   | ...........h...|
0x804befc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf0c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 0e d7 ff ff   |....,...........|
0x804bf1c:   d8 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf2c:   86 04 83 05 03 cb 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf3c:   04 00 00 00 2c 00 00 00  48 0a 00 00 b6 d8 ff ff   |....,...H.......|
0x804bf4c:   35 14 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |5....A....B..I..|
0x804bf5c:   86 04 83 05 03 25 14 c3  41 c6 41 c7 41 c5 0c 04   |.....%..A.A.A...|
0x804bf6c:   04 00 00 00 34 00 00 00  78 0a 00 00 bb ec ff ff   |....4...x.......|
0x804bf7c:   08 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bf8c:   0f 03 75 78 06 10 03 02  75 7c 03 f3 03 c1 0c 01   |..ux....u|......|
0x804bf9c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bfac:   b0 0a 00 00 8b f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bfbc:   10 00 00 00 c4 0a 00 00  7b f0 ff ff 04 00 00 00   |........{.......|
0x804bfcc:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804bfdc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bfec:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bffc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c00c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c01c:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804c02c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 b4 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 6b ed aa 49   |............k..I|
0x804e028:   ff 00 27 8d 02 00 ff ff  01 00 00 00 01 00 00 00   |..'.............|
0x804e038:   72 b6 c9 07 01 00 00 00  ff ff ff ff b0 00 00 00   |r...............|
0x804e048:   61 6f fa 2a fa ff 00 00  06 00 00 00 ff ff ff ff   |ao.*............|
0x804e058:   01 00 00 00 fe 00 00 00  01 00 00 00 a7 00 00 00   |................|
0x804e068:   fd ff ff ff ff ff ee 00  fc ff 00 00 ff ff ff ff   |................|
0x804e078:   f1 8d 00 00 6a 66 6b a7  01 00 00 00 e8 f9 72 fe   |....jfk.......r.|
0x804e088:   ??                                                 |?               |
