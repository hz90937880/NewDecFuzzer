;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:35:14
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 50 d5 ff ff               	lea eax, [ebx - 0x2ab0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 f0 d4 ff ff               	lea eax, [ebx - 0x2b10]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 5f b1 04 08               	mov eax, 0x804b15f
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483a5:   3d 6c e0 04 08                  	cmp eax, 0x804e06c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 6c e0 04 08                  	push 0x804e06c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483e5:   2d 6c e0 04 08                  	sub eax, 0x804e06c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 6c e0 04 08                  	push 0x804e06c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 85 30 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 71 30 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 70 d5 ff ff               	lea edx, [eax - 0x2a90]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 44 30 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 26 30 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 fe 2f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 d4 2f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ab 2f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 68 2f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 26 2f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ce 2e 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 7d 2e 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 40 2e 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 09 2e 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 ea 2d 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 c0 2d 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 94 2d 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 69 2d 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 20 2d 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 d8 2c 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 7e 2c 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 2b 2c 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 ec 2b 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 b6 2b 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 94 2b 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 46 2b 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 0a 2b 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 81 2a 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 4f 2a 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 1f 2a 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 da 29 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 9b 29 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 69 29 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 3a 29 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 1c 29 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 f4 28 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 cf 28 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 aa 28 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 73 28 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 3e 28 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 ec 27 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 a1 27 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 6a 27 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 39 27 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 1a 27 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 f0 26 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 c8 26 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 9f 26 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 63 26 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 28 26 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 d5 25 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 89 25 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 51 25 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 22 25 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 0e 25 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 f7 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 e2 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 cc 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 a5 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 80 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 41 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 08 24 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 dc 23 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 b6 23 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 58 d6 ff ff               	fld dword ptr [eax - 0x29a8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 58 d6 ff ff               	fld dword ptr [eax - 0x29a8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 5c d6 ff ff               	fld dword ptr [eax - 0x29a4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 74 23 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 58 d6 ff ff               	fld dword ptr [eax - 0x29a8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 58 d6 ff ff               	fld dword ptr [eax - 0x29a8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 5c d6 ff ff               	fld dword ptr [eax - 0x29a4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 32 23 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 60 d6 ff ff               	fld dword ptr [eax - 0x29a0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 64 d6 ff ff               	fld dword ptr [eax - 0x299c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 68 d6 ff ff               	fld dword ptr [eax - 0x2998]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 f0 22 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 6c d6 ff ff               	fld dword ptr [eax - 0x2994]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 70 d6 ff ff               	fld dword ptr [eax - 0x2990]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 74 d6 ff ff               	fld dword ptr [eax - 0x298c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 78 22 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 78 d6 ff ff               	fld qword ptr [eax - 0x2988]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 78 d6 ff ff               	fld qword ptr [eax - 0x2988]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 80 d6 ff ff               	fld qword ptr [eax - 0x2980]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 1b 22 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 78 d6 ff ff               	fld qword ptr [eax - 0x2988]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 78 d6 ff ff               	fld qword ptr [eax - 0x2988]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 80 d6 ff ff               	fld qword ptr [eax - 0x2980]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 be 21 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 88 d6 ff ff               	fld qword ptr [eax - 0x2978]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 90 d6 ff ff               	fld qword ptr [eax - 0x2970]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 98 d6 ff ff               	fld qword ptr [eax - 0x2968]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 61 21 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a0 d6 ff ff               	fld qword ptr [eax - 0x2960]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a8 d6 ff ff               	fld qword ptr [eax - 0x2958]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b0 d6 ff ff               	fld qword ptr [eax - 0x2950]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 d1 20 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b8 d6 ff ff               	fld dword ptr [eax - 0x2948]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 bc d6 ff ff               	fld dword ptr [eax - 0x2944]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 6d 20 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 fc 1f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 b9 1f 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 80 d5 ff ff               	lea eax, [ebx - 0x2a80]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 a4 d5 ff ff               	lea eax, [ebx - 0x2a5c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497db
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 b3 1e 00 00                  	call 0x804b4e7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049649:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804964c:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049686:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804968a:   89 c8                           	mov eax, ecx
0x804968c:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049694:   89 f0                           	mov eax, esi
0x8049696:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049699:   89 f8                           	mov eax, edi
0x804969b:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804969e:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a2:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496a5:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a9:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ac:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b0:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496b3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b7:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496ba:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496be:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496c2:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c6:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496ca:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496ce:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496d2:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d6:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496da:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496de:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496e2:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496e6:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x80496ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496f0:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496f6:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496fa:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049700:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049704:   88 82 2d 00 00 00               	mov byte ptr [edx + 0x2d], al
0x804970a:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804970e:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x8049714:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049717:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804971d:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049720:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049726:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049729:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804972f:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049732:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049738:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973b:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049741:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049745:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x804974b:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804974e:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049754:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049758:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x804975e:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049762:   88 82 4d 00 00 00               	mov byte ptr [edx + 0x4d], al
0x8049768:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804976c:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x8049772:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049775:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804977b:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804977e:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049784:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049788:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x804978e:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049792:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x8049799:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804979d:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x80497a4:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497a8:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x80497af:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497b2:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497b8:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497bc:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x80497c3:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497c7:   66 89 82 66 00 00 00            	mov word ptr [edx + 0x66], ax
0x80497ce:   b8 00 00 00 00                  	mov eax, 0
0x80497d3:   83 c4 60                        	add esp, 0x60
0x80497d6:   5b                              	pop ebx
0x80497d7:   5e                              	pop esi
0x80497d8:   5f                              	pop edi
0x80497d9:   5d                              	pop ebp
0x80497da:   c3                              	ret 
; function: func_1 at 0x80497db -- 0x804b15f
0x80497db:   55                              	push ebp
0x80497dc:   89 e5                           	mov ebp, esp
0x80497de:   57                              	push edi
0x80497df:   56                              	push esi
0x80497e0:   53                              	push ebx
0x80497e1:   81 ec b0 01 00 00               	sub esp, 0x1b0
0x80497e7:   e8 f7 1c 00 00                  	call 0x804b4e3 <__x86.get_pc_thunk.ax>
0x80497ec:   05 14 48 00 00                  	add eax, 0x4814
0x80497f1:   66 c7 45 ea 2b 53               	mov word ptr [ebp - 0x16], 0x532b
0x80497f7:   c7 45 e4 e4 5e 47 c4            	mov dword ptr [ebp - 0x1c], 0xc4475ee4
0x80497fe:   c6 45 e3 02                     	mov byte ptr [ebp - 0x1d], 2
0x8049802:   c6 45 f3 da                     	mov byte ptr [ebp - 0xd], 0xda
0x8049806:   c6 45 f2 ff                     	mov byte ptr [ebp - 0xe], 0xff
0x804980a:   c7 45 ec 07 00 00 00            	mov dword ptr [ebp - 0x14], 7
0x8049811:   c7 45 dc f5 de 87 a5            	mov dword ptr [ebp - 0x24], 0xa587def5
0x8049818:   c7 45 d8 03 2b b3 51            	mov dword ptr [ebp - 0x28], 0x51b32b03
0x804981f:   c7 85 70 ff ff ff 9a f5 95 6e   	mov dword ptr [ebp - 0x90], 0x6e95f59a
0x8049829:   c7 45 d4 43 94 b3 5b            	mov dword ptr [ebp - 0x2c], 0x5bb39443
0x8049830:   c6 45 d3 80                     	mov byte ptr [ebp - 0x2d], 0x80
0x8049834:   c7 85 6c ff ff ff 2c ff 08 29   	mov dword ptr [ebp - 0x94], 0x2908ff2c
0x804983e:   c6 45 d2 e1                     	mov byte ptr [ebp - 0x2e], 0xe1
0x8049842:   c6 45 d1 f6                     	mov byte ptr [ebp - 0x2f], 0xf6
0x8049846:   c6 85 6b ff ff ff 01            	mov byte ptr [ebp - 0x95], 1
0x804984d:   c7 45 cc 1a 68 31 b4            	mov dword ptr [ebp - 0x34], 0xb431681a
0x8049854:   c7 45 c8 ff ff ff ff            	mov dword ptr [ebp - 0x38], 0xffffffff
0x804985b:   c6 45 c7 ff                     	mov byte ptr [ebp - 0x39], 0xff
0x804985f:   66 c7 45 c4 fa 4c               	mov word ptr [ebp - 0x3c], 0x4cfa
0x8049865:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x804986b:   66 c7 45 c0 69 2d               	mov word ptr [ebp - 0x40], 0x2d69
0x8049871:   c7 45 bc 6c fd 38 e2            	mov dword ptr [ebp - 0x44], 0xe238fd6c
0x8049878:   66 c7 85 68 ff ff ff 01 00      	mov word ptr [ebp - 0x98], 1
0x8049881:   66 c7 45 ba 1b 10               	mov word ptr [ebp - 0x46], 0x101b
0x8049887:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049891:   c7 85 60 ff ff ff f3 94 0f 73   	mov dword ptr [ebp - 0xa0], 0x730f94f3
0x804989b:   c7 45 b4 9c a7 33 6e            	mov dword ptr [ebp - 0x4c], 0x6e33a79c
0x80498a2:   c7 45 b0 69 9e 30 13            	mov dword ptr [ebp - 0x50], 0x13309e69
0x80498a9:   c7 45 ac a1 d3 53 e6            	mov dword ptr [ebp - 0x54], 0xe653d3a1
0x80498b0:   c7 85 5c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa4], 0xffffffff
0x80498ba:   66 c7 45 aa ff ff               	mov word ptr [ebp - 0x56], 0xffff
0x80498c0:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x80498ca:   c7 45 a4 8b d7 ad f7            	mov dword ptr [ebp - 0x5c], 0xf7add78b
0x80498d1:   c6 85 57 ff ff ff 40            	mov byte ptr [ebp - 0xa9], 0x40
0x80498d8:   c6 45 a3 ff                     	mov byte ptr [ebp - 0x5d], 0xff
0x80498dc:   c7 45 9c 0c 23 a1 22            	mov dword ptr [ebp - 0x64], 0x22a1230c
0x80498e3:   c7 85 50 ff ff ff 38 a3 69 04   	mov dword ptr [ebp - 0xb0], 0x469a338
0x80498ed:   c7 85 4c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb4], 0
0x80498f7:   c7 85 48 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb8], 1
0x8049901:   c6 85 47 ff ff ff ff            	mov byte ptr [ebp - 0xb9], 0xff
0x8049908:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804990e:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049912:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049916:   0f b7 d0                        	movzx edx, ax
0x8049919:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804991d:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049923:   0f 9c c0                        	setl al
0x8049926:   0f b6 c0                        	movzx eax, al
0x8049929:   0f b7 c0                        	movzx eax, ax
0x804992c:   01 d0                           	add eax, edx
0x804992e:   89 c2                           	mov edx, eax
0x8049930:   81 fa b9 bd 82 83               	cmp edx, 0x8382bdb9
0x8049936:   0f 93 c0                        	setae al
0x8049939:   0f b6 c0                        	movzx eax, al
0x804993c:   69 c0 b9 bd 82 83               	imul eax, eax, 0x8382bdb9
0x8049942:   29 c2                           	sub edx, eax
0x8049944:   89 d0                           	mov eax, edx
0x8049946:   85 c0                           	test eax, eax
0x8049948:   0f 84 f5 10 00 00               	je 0x804aa43 <func_1+0x1268>
0x804994e:   66 c7 85 10 ff ff ff ff ff      	mov word ptr [ebp - 0xf0], 0xffff
0x8049957:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x804995e:   c7 45 94 29 e9 f9 65            	mov dword ptr [ebp - 0x6c], 0x65f9e929
0x8049965:   c7 45 90 09 db ad f6            	mov dword ptr [ebp - 0x70], 0xf6addb09
0x804996c:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x8049973:   66 c7 85 0e ff ff ff f9 ff      	mov word ptr [ebp - 0xf2], 0xfff9
0x804997c:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049982:   66 89 85 10 ff ff ff            	mov word ptr [ebp - 0xf0], ax
0x8049989:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804998d:   83 c0 01                        	add eax, 1
0x8049990:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049993:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049997:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804999a:   0f 95 c0                        	setne al
0x804999d:   0f b6 c0                        	movzx eax, al
0x80499a0:   89 c1                           	mov ecx, eax
0x80499a2:   66 83 bd 10 ff ff ff 00         	cmp word ptr [ebp - 0xf0], 0
0x80499aa:   0f 95 c0                        	setne al
0x80499ad:   0f b6 c0                        	movzx eax, al
0x80499b0:   66 0f be d0                     	movsx dx, al
0x80499b4:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499b7:   66 98                           	cbw 
0x80499b9:   01 d0                           	add eax, edx
0x80499bb:   89 c2                           	mov edx, eax
0x80499bd:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499c0:   89 c3                           	mov ebx, eax
0x80499c2:   89 d0                           	mov eax, edx
0x80499c4:   ba 00 00 00 00                  	mov edx, 0
0x80499c9:   66 f7 f3                        	div bx
0x80499cc:   89 d0                           	mov eax, edx
0x80499ce:   0f b7 c0                        	movzx eax, ax
0x80499d1:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x80499d4:   0f 9e c0                        	setle al
0x80499d7:   0f b6 c0                        	movzx eax, al
0x80499da:   89 c3                           	mov ebx, eax
0x80499dc:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x80499e0:   89 c2                           	mov edx, eax
0x80499e2:   89 d8                           	mov eax, ebx
0x80499e4:   0f af c2                        	imul eax, edx
0x80499e7:   89 c2                           	mov edx, eax
0x80499e9:   89 c8                           	mov eax, ecx
0x80499eb:   0f af c2                        	imul eax, edx
0x80499ee:   0f be d0                        	movsx edx, al
0x80499f1:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x80499f4:   0f be c0                        	movsx eax, al
0x80499f7:   29 c2                           	sub edx, eax
0x80499f9:   89 d0                           	mov eax, edx
0x80499fb:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x80499fe:   c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x8049a02:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x8049a09:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049a0c:   74 07                           	je 0x8049a15 <func_1+0x23a>
0x8049a0e:   b8 45 00 00 00                  	mov eax, 0x45
0x8049a13:   eb 05                           	jmp 0x8049a1a <func_1+0x23f>
0x8049a15:   b8 44 00 00 00                  	mov eax, 0x44
0x8049a1a:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049a1d:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049a21:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049a24:   0f 85 d9 00 00 00               	jne 0x8049b03 <func_1+0x328>
0x8049a2a:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049a2e:   0f bf 95 68 ff ff ff            	movsx edx, word ptr [ebp - 0x98]
0x8049a35:   0f b7 5d c0                     	movzx ebx, word ptr [ebp - 0x40]
0x8049a39:   0f bf 7d c2                     	movsx edi, word ptr [ebp - 0x3e]
0x8049a3d:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x8049a41:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049a47:   0f b6 4d c7                     	movzx ecx, byte ptr [ebp - 0x39]
0x8049a4b:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x8049a51:   0f be b5 6b ff ff ff            	movsx esi, byte ptr [ebp - 0x95]
0x8049a58:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049a5e:   0f be 4d d1                     	movsx ecx, byte ptr [ebp - 0x2f]
0x8049a62:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x8049a68:   0f b6 75 d2                     	movzx esi, byte ptr [ebp - 0x2e]
0x8049a6c:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x8049a72:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x8049a76:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x8049a7c:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x8049a80:   89 b5 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], esi
0x8049a86:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x8049a8a:   89 8d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ecx
0x8049a90:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x8049a94:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x8049a98:   50                              	push eax
0x8049a99:   52                              	push edx
0x8049a9a:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049a9d:   53                              	push ebx
0x8049a9e:   57                              	push edi
0x8049a9f:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049aa5:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049aab:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049aae:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ab1:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049ab7:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049abd:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049ac3:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ac9:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049acf:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ad2:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049ad8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049adb:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ade:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ae1:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049ae7:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049aed:   56                              	push esi
0x8049aee:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049af1:   51                              	push ecx
0x8049af2:   e8 2f fb ff ff                  	call 0x8049626 <set_var>
0x8049af7:   83 c4 60                        	add esp, 0x60
0x8049afa:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049afe:   e9 54 16 00 00                  	jmp 0x804b157 <func_1+0x197c>
0x8049b03:   c7 85 08 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf8], 0
0x8049b0d:   c6 85 07 ff ff ff 2e            	mov byte ptr [ebp - 0xf9], 0x2e
0x8049b14:   c7 45 88 73 cb fd a3            	mov dword ptr [ebp - 0x78], 0xa3fdcb73
0x8049b1b:   66 c7 85 04 ff ff ff 8c e2      	mov word ptr [ebp - 0xfc], 0xe28c
0x8049b24:   c7 85 00 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x100], 8
0x8049b2e:   c7 45 84 47 b6 31 80            	mov dword ptr [ebp - 0x7c], 0x8031b647
0x8049b35:   c7 45 80 8a 1d be e2            	mov dword ptr [ebp - 0x80], 0xe2be1d8a
0x8049b3c:   c7 85 fc fe ff ff 14 29 09 1c   	mov dword ptr [ebp - 0x104], 0x1c092914
0x8049b46:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049b4d:   0f 95 c0                        	setne al
0x8049b50:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049b53:   b8 05 00 00 00                  	mov eax, 5
0x8049b58:   21 45 b4                        	and dword ptr [ebp - 0x4c], eax
0x8049b5b:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049b5f:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x8049b62:   0f 9d c0                        	setge al
0x8049b65:   0f b6 d0                        	movzx edx, al
0x8049b68:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049b6e:   98                              	cwde 
0x8049b6f:   01 d0                           	add eax, edx
0x8049b71:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049b74:   b8 00 00 00 00                  	mov eax, 0
0x8049b79:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x8049b7c:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049b80:   0f 84 5b 02 00 00               	je 0x8049de1 <func_1+0x606>
0x8049b86:   c7 85 e4 fe ff ff 77 a5 d3 3b   	mov dword ptr [ebp - 0x11c], 0x3bd3a577
0x8049b90:   c7 85 e0 fe ff ff 2b 62 47 7a   	mov dword ptr [ebp - 0x120], 0x7a47622b
0x8049b9a:   c7 85 dc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x124], 1
0x8049ba4:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049ba8:   0f 95 c0                        	setne al
0x8049bab:   30 45 f2                        	xor byte ptr [ebp - 0xe], al
0x8049bae:   c7 85 d8 fe ff ff 94 e9 95 eb   	mov dword ptr [ebp - 0x128], 0xeb95e994
0x8049bb8:   c7 85 d4 fe ff ff 9e b9 0d d7   	mov dword ptr [ebp - 0x12c], 0xd70db99e
0x8049bc2:   66 c7 85 d2 fe ff ff 11 8e      	mov word ptr [ebp - 0x12e], 0x8e11
0x8049bcb:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x8049bcf:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049bd2:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049bd6:   0f 84 80 00 00 00               	je 0x8049c5c <func_1+0x481>
0x8049bdc:   c7 85 c8 fe ff ff b1 25 b0 01   	mov dword ptr [ebp - 0x138], 0x1b025b1
0x8049be6:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049bea:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x8049bed:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x8049bf0:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049bf3:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049bf6:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049bf9:   0f b7 c0                        	movzx eax, ax
0x8049bfc:   ba 14 18 00 00                  	mov edx, 0x1814
0x8049c01:   89 c1                           	mov ecx, eax
0x8049c03:   d3 e2                           	shl edx, cl
0x8049c05:   89 d0                           	mov eax, edx
0x8049c07:   85 c0                           	test eax, eax
0x8049c09:   0f 95 c0                        	setne al
0x8049c0c:   0f b6 d0                        	movzx edx, al
0x8049c0f:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049c13:   39 c2                           	cmp edx, eax
0x8049c15:   0f 9e c0                        	setle al
0x8049c18:   0f b6 c0                        	movzx eax, al
0x8049c1b:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x8049c1e:   85 c0                           	test eax, eax
0x8049c20:   75 07                           	jne 0x8049c29 <func_1+0x44e>
0x8049c22:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x8049c29:   c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x8049c2d:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049c31:   39 85 dc fe ff ff               	cmp dword ptr [ebp - 0x124], eax
0x8049c37:   0f 92 c0                        	setb al
0x8049c3a:   0f b6 c0                        	movzx eax, al
0x8049c3d:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x8049c43:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049c47:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049c4d:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x8049c54:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c57:   e9 42 01 00 00                  	jmp 0x8049d9e <func_1+0x5c3>
0x8049c5c:   c7 85 cc fe ff ff d9 e7 aa 0e   	mov dword ptr [ebp - 0x134], 0xeaae7d9
0x8049c66:   80 45 e3 01                     	add byte ptr [ebp - 0x1d], 1
0x8049c6a:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x8049c6e:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x8049c75:   74 37                           	je 0x8049cae <func_1+0x4d3>
0x8049c77:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049c7a:   f7 d8                           	neg eax
0x8049c7c:   0f b7 c0                        	movzx eax, ax
0x8049c7f:   ba f8 ff 00 00                  	mov edx, 0xfff8
0x8049c84:   29 c2                           	sub edx, eax
0x8049c86:   0f be 85 07 ff ff ff            	movsx eax, byte ptr [ebp - 0xf9]
0x8049c8d:   39 c2                           	cmp edx, eax
0x8049c8f:   0f 9f c0                        	setg al
0x8049c92:   0f b6 c0                        	movzx eax, al
0x8049c95:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x8049c98:   0f 9f c0                        	setg al
0x8049c9b:   0f b6 d0                        	movzx edx, al
0x8049c9e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ca1:   98                              	cwde 
0x8049ca2:   89 c1                           	mov ecx, eax
0x8049ca4:   d3 e2                           	shl edx, cl
0x8049ca6:   89 d0                           	mov eax, edx
0x8049ca8:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x8049cab:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049cae:   c7 45 88 f6 ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffff6
0x8049cb5:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049cb8:   0f be d0                        	movsx edx, al
0x8049cbb:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x8049cbf:   0f af c2                        	imul eax, edx
0x8049cc2:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049cc5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049cc8:   3b 45 b4                        	cmp eax, dword ptr [ebp - 0x4c]
0x8049ccb:   0f 94 c0                        	sete al
0x8049cce:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049cd1:   0f be 55 f2                     	movsx edx, byte ptr [ebp - 0xe]
0x8049cd5:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049cd9:   0f be c0                        	movsx eax, al
0x8049cdc:   89 c1                           	mov ecx, eax
0x8049cde:   d3 fa                           	sar edx, cl
0x8049ce0:   89 d0                           	mov eax, edx
0x8049ce2:   0f b7 8d d2 fe ff ff            	movzx ecx, word ptr [ebp - 0x12e]
0x8049ce9:   ba 00 00 00 00                  	mov edx, 0
0x8049cee:   f7 f1                           	div ecx
0x8049cf0:   89 d0                           	mov eax, edx
0x8049cf2:   0f be d0                        	movsx edx, al
0x8049cf5:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x8049cfb:   0f be c0                        	movsx eax, al
0x8049cfe:   29 c2                           	sub edx, eax
0x8049d00:   89 d0                           	mov eax, edx
0x8049d02:   3d f5 00 00 00                  	cmp eax, 0xf5
0x8049d07:   0f 97 c0                        	seta al
0x8049d0a:   0f b6 c0                        	movzx eax, al
0x8049d0d:   89 c1                           	mov ecx, eax
0x8049d0f:   d3 e3                           	shl ebx, cl
0x8049d11:   89 d8                           	mov eax, ebx
0x8049d13:   0f be c0                        	movsx eax, al
0x8049d16:   f7 d8                           	neg eax
0x8049d18:   85 c0                           	test eax, eax
0x8049d1a:   74 07                           	je 0x8049d23 <func_1+0x548>
0x8049d1c:   b8 01 00 00 00                  	mov eax, 1
0x8049d21:   eb 05                           	jmp 0x8049d28 <func_1+0x54d>
0x8049d23:   b8 00 00 00 00                  	mov eax, 0
0x8049d28:   0d ba 13 00 00                  	or eax, 0x13ba
0x8049d2d:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x8049d30:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x8049d37:   0f 95 c0                        	setne al
0x8049d3a:   0f b6 c0                        	movzx eax, al
0x8049d3d:   66 c1 f8 07                     	sar ax, 7
0x8049d41:   98                              	cwde 
0x8049d42:   39 85 cc fe ff ff               	cmp dword ptr [ebp - 0x134], eax
0x8049d48:   0f 95 c0                        	setne al
0x8049d4b:   0f b6 d0                        	movzx edx, al
0x8049d4e:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049d52:   39 c2                           	cmp edx, eax
0x8049d54:   0f 94 c0                        	sete al
0x8049d57:   0f b6 d0                        	movzx edx, al
0x8049d5a:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049d5e:   39 c2                           	cmp edx, eax
0x8049d60:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x8049d67:   74 07                           	je 0x8049d70 <func_1+0x595>
0x8049d69:   b8 01 00 00 00                  	mov eax, 1
0x8049d6e:   eb 05                           	jmp 0x8049d75 <func_1+0x59a>
0x8049d70:   b8 00 00 00 00                  	mov eax, 0
0x8049d75:   0f b7 c0                        	movzx eax, ax
0x8049d78:   c1 e0 0c                        	shl eax, 0xc
0x8049d7b:   85 c0                           	test eax, eax
0x8049d7d:   74 06                           	je 0x8049d85 <func_1+0x5aa>
0x8049d7f:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049d83:   75 0a                           	jne 0x8049d8f <func_1+0x5b4>
0x8049d85:   66 83 bd 10 ff ff ff 00         	cmp word ptr [ebp - 0xf0], 0
0x8049d8d:   74 07                           	je 0x8049d96 <func_1+0x5bb>
0x8049d8f:   b8 01 00 00 00                  	mov eax, 1
0x8049d94:   eb 05                           	jmp 0x8049d9b <func_1+0x5c0>
0x8049d96:   b8 00 00 00 00                  	mov eax, 0
0x8049d9b:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d9e:   83 bd e4 fe ff ff 01            	cmp dword ptr [ebp - 0x11c], 1
0x8049da5:   77 07                           	ja 0x8049dae <func_1+0x5d3>
0x8049da7:   b8 7e 00 00 00                  	mov eax, 0x7e
0x8049dac:   eb 05                           	jmp 0x8049db3 <func_1+0x5d8>
0x8049dae:   b8 7d 00 00 00                  	mov eax, 0x7d
0x8049db3:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x8049db6:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049dbd:   eb 17                           	jmp 0x8049dd6 <func_1+0x5fb>
0x8049dbf:   c7 85 e0 fe ff ff 33 a1 69 77   	mov dword ptr [ebp - 0x120], 0x7769a133
0x8049dc9:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049dcf:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049dd2:   83 45 ec 02                     	add dword ptr [ebp - 0x14], 2
0x8049dd6:   83 7d ec 1c                     	cmp dword ptr [ebp - 0x14], 0x1c
0x8049dda:   75 e3                           	jne 0x8049dbf <func_1+0x5e4>
0x8049ddc:   e9 71 03 00 00                  	jmp 0x804a152 <func_1+0x977>
0x8049de1:   c6 85 fb fe ff ff f7            	mov byte ptr [ebp - 0x105], 0xf7
0x8049de8:   c7 85 f4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x10c], 1
0x8049df2:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x8049dfc:   c7 45 dc 0d 00 00 00            	mov dword ptr [ebp - 0x24], 0xd
0x8049e03:   e9 e2 01 00 00                  	jmp 0x8049fea <func_1+0x80f>
0x8049e08:   c7 85 e8 fe ff ff 60 04 c7 1f   	mov dword ptr [ebp - 0x118], 0x1fc70460
0x8049e12:   c7 45 88 4d 00 00 00            	mov dword ptr [ebp - 0x78], 0x4d
0x8049e19:   80 6d f3 01                     	sub byte ptr [ebp - 0xd], 1
0x8049e1d:   80 7d f3 09                     	cmp byte ptr [ebp - 0xd], 9
0x8049e21:   74 13                           	je 0x8049e36 <func_1+0x65b>
0x8049e23:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049e27:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x8049e2d:   74 07                           	je 0x8049e36 <func_1+0x65b>
0x8049e2f:   b8 01 00 00 00                  	mov eax, 1
0x8049e34:   eb 05                           	jmp 0x8049e3b <func_1+0x660>
0x8049e36:   b8 00 00 00 00                  	mov eax, 0
0x8049e3b:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8049e3e:   0f 84 d9 00 00 00               	je 0x8049f1d <func_1+0x742>
0x8049e44:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049e48:   0f bf 95 68 ff ff ff            	movsx edx, word ptr [ebp - 0x98]
0x8049e4f:   0f b7 5d c0                     	movzx ebx, word ptr [ebp - 0x40]
0x8049e53:   0f bf 7d c2                     	movsx edi, word ptr [ebp - 0x3e]
0x8049e57:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x8049e5b:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049e61:   0f b6 4d c7                     	movzx ecx, byte ptr [ebp - 0x39]
0x8049e65:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x8049e6b:   0f be b5 6b ff ff ff            	movsx esi, byte ptr [ebp - 0x95]
0x8049e72:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049e78:   0f be 4d d1                     	movsx ecx, byte ptr [ebp - 0x2f]
0x8049e7c:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x8049e82:   0f b6 75 d2                     	movzx esi, byte ptr [ebp - 0x2e]
0x8049e86:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x8049e8c:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x8049e90:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x8049e96:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x8049e9a:   89 b5 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], esi
0x8049ea0:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x8049ea4:   89 8d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ecx
0x8049eaa:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x8049eae:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x8049eb2:   50                              	push eax
0x8049eb3:   52                              	push edx
0x8049eb4:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049eb7:   53                              	push ebx
0x8049eb8:   57                              	push edi
0x8049eb9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049ebf:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049ec5:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049ec8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ecb:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049ed1:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049ed7:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049edd:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ee3:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049ee9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049eec:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049ef2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ef5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ef8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049efb:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049f01:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049f07:   56                              	push esi
0x8049f08:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f0b:   51                              	push ecx
0x8049f0c:   e8 15 f7 ff ff                  	call 0x8049626 <set_var>
0x8049f11:   83 c4 60                        	add esp, 0x60
0x8049f14:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049f18:   e9 3a 12 00 00                  	jmp 0x804b157 <func_1+0x197c>
0x8049f1d:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049f21:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f25:   8d 50 ff                        	lea edx, [eax - 1]
0x8049f28:   88 55 f3                        	mov byte ptr [ebp - 0xd], dl
0x8049f2b:   0f b6 d0                        	movzx edx, al
0x8049f2e:   0f b6 85 fb fe ff ff            	movzx eax, byte ptr [ebp - 0x105]
0x8049f35:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049f38:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x8049f3c:   39 c2                           	cmp edx, eax
0x8049f3e:   0f 95 c0                        	setne al
0x8049f41:   0f b6 c0                        	movzx eax, al
0x8049f44:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049f47:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049f4a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f4d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f51:   0f 85 8e 00 00 00               	jne 0x8049fe5 <func_1+0x80a>
0x8049f57:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049f5b:   0f 85 a5 01 00 00               	jne 0x804a106 <func_1+0x92b>
0x8049f61:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049f64:   ba fc ff ff ff                  	mov edx, 0xfffffffc
0x8049f69:   29 c2                           	sub edx, eax
0x8049f6b:   89 d0                           	mov eax, edx
0x8049f6d:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f70:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049f74:   74 07                           	je 0x8049f7d <func_1+0x7a2>
0x8049f76:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x8049f7d:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049f81:   74 10                           	je 0x8049f93 <func_1+0x7b8>
0x8049f83:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x8049f8a:   74 07                           	je 0x8049f93 <func_1+0x7b8>
0x8049f8c:   b8 01 00 00 00                  	mov eax, 1
0x8049f91:   eb 05                           	jmp 0x8049f98 <func_1+0x7bd>
0x8049f93:   b8 00 00 00 00                  	mov eax, 0
0x8049f98:   0f be d0                        	movsx edx, al
0x8049f9b:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049f9f:   0f be c0                        	movsx eax, al
0x8049fa2:   0f af c2                        	imul eax, edx
0x8049fa5:   89 c2                           	mov edx, eax
0x8049fa7:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x8049fad:   f7 d0                           	not eax
0x8049faf:   21 c2                           	and edx, eax
0x8049fb1:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fb4:   09 d0                           	or eax, edx
0x8049fb6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049fb9:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049fc0:   0f 85 43 01 00 00               	jne 0x804a109 <func_1+0x92e>
0x8049fc6:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049fca:   0f 95 c0                        	setne al
0x8049fcd:   0f b6 c0                        	movzx eax, al
0x8049fd0:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049fd3:   0f 9c c0                        	setl al
0x8049fd6:   0f b6 c0                        	movzx eax, al
0x8049fd9:   21 45 b4                        	and dword ptr [ebp - 0x4c], eax
0x8049fdc:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049fe3:   eb 01                           	jmp 0x8049fe6 <func_1+0x80b>
0x8049fe5:   90                              	nop 
0x8049fe6:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x8049fea:   83 7d dc e7                     	cmp dword ptr [ebp - 0x24], -0x19
0x8049fee:   0f 85 14 fe ff ff               	jne 0x8049e08 <func_1+0x62d>
0x8049ff4:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049ff7:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049ffa:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804a001:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a007:   0f b6 d0                        	movzx edx, al
0x804a00a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a00d:   89 c1                           	mov ecx, eax
0x804a00f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a012:   01 c8                           	add eax, ecx
0x804a014:   89 c1                           	mov ecx, eax
0x804a016:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a019:   21 c1                           	and ecx, eax
0x804a01b:   0f b7 85 04 ff ff ff            	movzx eax, word ptr [ebp - 0xfc]
0x804a022:   31 c8                           	xor eax, ecx
0x804a024:   0f b6 c0                        	movzx eax, al
0x804a027:   89 c1                           	mov ecx, eax
0x804a029:   d3 fa                           	sar edx, cl
0x804a02b:   89 d0                           	mov eax, edx
0x804a02d:   c0 f8 06                        	sar al, 6
0x804a030:   0f be c0                        	movsx eax, al
0x804a033:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a036:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a039:   8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x804a03c:   8d 41 01                        	lea eax, [ecx + 1]
0x804a03f:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a042:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a046:   89 c3                           	mov ebx, eax
0x804a048:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a04c:   75 07                           	jne 0x804a055 <func_1+0x87a>
0x804a04e:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x804a053:   74 07                           	je 0x804a05c <func_1+0x881>
0x804a055:   b8 01 00 00 00                  	mov eax, 1
0x804a05a:   eb 05                           	jmp 0x804a061 <func_1+0x886>
0x804a05c:   b8 00 00 00 00                  	mov eax, 0
0x804a061:   89 c7                           	mov edi, eax
0x804a063:   b8 82 64 00 00                  	mov eax, 0x6482
0x804a068:   ba 00 00 00 00                  	mov edx, 0
0x804a06d:   66 f7 f7                        	div di
0x804a070:   01 d8                           	add eax, ebx
0x804a072:   c0 e8 05                        	shr al, 5
0x804a075:   83 f0 05                        	xor eax, 5
0x804a078:   0f b6 c0                        	movzx eax, al
0x804a07b:   29 c1                           	sub ecx, eax
0x804a07d:   89 ca                           	mov edx, ecx
0x804a07f:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a083:   21 c2                           	and edx, eax
0x804a085:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a088:   31 d0                           	xor eax, edx
0x804a08a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a08d:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804a094:   74 76                           	je 0x804a10c <func_1+0x931>
0x804a096:   c6 85 ef fe ff ff 19            	mov byte ptr [ebp - 0x111], 0x19
0x804a09d:   80 bd fb fe ff ff 00            	cmp byte ptr [ebp - 0x105], 0
0x804a0a4:   75 07                           	jne 0x804a0ad <func_1+0x8d2>
0x804a0a6:   80 bd ef fe ff ff 00            	cmp byte ptr [ebp - 0x111], 0
0x804a0ad:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0b0:   3d fe 00 00 00                  	cmp eax, 0xfe
0x804a0b5:   0f 97 c0                        	seta al
0x804a0b8:   0f b6 c0                        	movzx eax, al
0x804a0bb:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a0be:   0f 9d c0                        	setge al
0x804a0c1:   0f b6 d0                        	movzx edx, al
0x804a0c4:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a0c7:   0f b7 c0                        	movzx eax, ax
0x804a0ca:   89 c1                           	mov ecx, eax
0x804a0cc:   d3 fa                           	sar edx, cl
0x804a0ce:   89 d0                           	mov eax, edx
0x804a0d0:   66 05 0c 6d                     	add ax, 0x6d0c
0x804a0d4:   0f bf d0                        	movsx edx, ax
0x804a0d7:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a0db:   89 c1                           	mov ecx, eax
0x804a0dd:   d3 e2                           	shl edx, cl
0x804a0df:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a0e3:   31 d0                           	xor eax, edx
0x804a0e5:   09 85 f4 fe ff ff               	or dword ptr [ebp - 0x10c], eax
0x804a0eb:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a0ef:   83 e8 01                        	sub eax, 1
0x804a0f2:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804a0f6:   80 45 d3 01                     	add byte ptr [ebp - 0x2d], 1
0x804a0fa:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804a0fe:   83 c0 01                        	add eax, 1
0x804a101:   88 45 d2                        	mov byte ptr [ebp - 0x2e], al
0x804a104:   eb 4c                           	jmp 0x804a152 <func_1+0x977>
0x804a106:   90                              	nop 
0x804a107:   eb 04                           	jmp 0x804a10d <func_1+0x932>
0x804a109:   90                              	nop 
0x804a10a:   eb 01                           	jmp 0x804a10d <func_1+0x932>
0x804a10c:   90                              	nop 
0x804a10d:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a111:   80 4d d1 84                     	or byte ptr [ebp - 0x2f], 0x84
0x804a115:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a119:   74 19                           	je 0x804a134 <func_1+0x959>
0x804a11b:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a11f:   0f 94 c0                        	sete al
0x804a122:   0f b6 d0                        	movzx edx, al
0x804a125:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a129:   39 c2                           	cmp edx, eax
0x804a12b:   7f 07                           	jg 0x804a134 <func_1+0x959>
0x804a12d:   b8 01 00 00 00                  	mov eax, 1
0x804a132:   eb 05                           	jmp 0x804a139 <func_1+0x95e>
0x804a134:   b8 00 00 00 00                  	mov eax, 0
0x804a139:   89 c2                           	mov edx, eax
0x804a13b:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a13e:   29 c2                           	sub edx, eax
0x804a140:   89 d0                           	mov eax, edx
0x804a142:   98                              	cwde 
0x804a143:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x804a149:   0f bf ca                        	movsx ecx, dx
0x804a14c:   99                              	cdq 
0x804a14d:   f7 f9                           	idiv ecx
0x804a14f:   89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x804a152:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a158:   0f b6 c0                        	movzx eax, al
0x804a15b:   83 c0 07                        	add eax, 7
0x804a15e:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a165:   81 7d d4 68 53 df 04            	cmp dword ptr [ebp - 0x2c], 0x4df5368
0x804a16c:   75 11                           	jne 0x804a17f <func_1+0x9a4>
0x804a16e:   66 83 bd 04 ff ff ff 00         	cmp word ptr [ebp - 0xfc], 0
0x804a176:   74 07                           	je 0x804a17f <func_1+0x9a4>
0x804a178:   ba 01 00 00 00                  	mov edx, 1
0x804a17d:   eb 05                           	jmp 0x804a184 <func_1+0x9a9>
0x804a17f:   ba 00 00 00 00                  	mov edx, 0
0x804a184:   89 d7                           	mov edi, edx
0x804a186:   ba 00 00 00 00                  	mov edx, 0
0x804a18b:   f7 f7                           	div edi
0x804a18d:   0f b6 d0                        	movzx edx, al
0x804a190:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a196:   0f b6 c0                        	movzx eax, al
0x804a199:   89 c1                           	mov ecx, eax
0x804a19b:   d3 fa                           	sar edx, cl
0x804a19d:   89 d0                           	mov eax, edx
0x804a19f:   85 c0                           	test eax, eax
0x804a1a1:   0f 84 37 01 00 00               	je 0x804a2de <func_1+0xb03>
0x804a1a7:   c6 85 86 fe ff ff 8c            	mov byte ptr [ebp - 0x17a], 0x8c
0x804a1ae:   c7 85 80 fe ff ff ef ec ae 23   	mov dword ptr [ebp - 0x180], 0x23aeecef
0x804a1b8:   c7 85 7c fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x184], 2
0x804a1c2:   c6 45 f2 fe                     	mov byte ptr [ebp - 0xe], 0xfe
0x804a1c6:   e9 04 01 00 00                  	jmp 0x804a2cf <func_1+0xaf4>
0x804a1cb:   c6 85 7b fe ff ff d6            	mov byte ptr [ebp - 0x185], 0xd6
0x804a1d2:   c7 85 74 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x18c], 0xfffffff6
0x804a1dc:   c7 85 70 fe ff ff 6b cd b6 f2   	mov dword ptr [ebp - 0x190], 0xf2b6cd6b
0x804a1e6:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x804a1eb:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a1ee:   89 d7                           	mov edi, edx
0x804a1f0:   ba 00 00 00 00                  	mov edx, 0
0x804a1f5:   66 f7 f7                        	div di
0x804a1f8:   0f b7 c0                        	movzx eax, ax
0x804a1fb:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a1fe:   0f 94 c0                        	sete al
0x804a201:   0f b6 d0                        	movzx edx, al
0x804a204:   0f be 85 86 fe ff ff            	movsx eax, byte ptr [ebp - 0x17a]
0x804a20b:   0f af c2                        	imul eax, edx
0x804a20e:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x804a211:   89 c2                           	mov edx, eax
0x804a213:   0f be 85 7b fe ff ff            	movsx eax, byte ptr [ebp - 0x185]
0x804a21a:   39 c2                           	cmp edx, eax
0x804a21c:   0f 94 c0                        	sete al
0x804a21f:   0f b6 d0                        	movzx edx, al
0x804a222:   0f be 85 86 fe ff ff            	movsx eax, byte ptr [ebp - 0x17a]
0x804a229:   39 c2                           	cmp edx, eax
0x804a22b:   75 11                           	jne 0x804a23e <func_1+0xa63>
0x804a22d:   c6 85 6f fe ff ff ff            	mov byte ptr [ebp - 0x191], 0xff
0x804a234:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x804a238:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a23c:   eb 2b                           	jmp 0x804a269 <func_1+0xa8e>
0x804a23e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a241:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a244:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a247:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a24a:   09 d0                           	or eax, edx
0x804a24c:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a24f:   66 0f be 85 86 fe ff ff         	movsx ax, byte ptr [ebp - 0x17a]
0x804a257:   0f b7 d0                        	movzx edx, ax
0x804a25a:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a25e:   0f 95 c0                        	setne al
0x804a261:   0f b6 c0                        	movzx eax, al
0x804a264:   01 d0                           	add eax, edx
0x804a266:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x804a269:   80 6d a3 01                     	sub byte ptr [ebp - 0x5d], 1
0x804a26d:   8b 85 74 fe ff ff               	mov eax, dword ptr [ebp - 0x18c]
0x804a273:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a276:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804a27a:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x804a27e:   74 11                           	je 0x804a291 <func_1+0xab6>
0x804a280:   83 6d d4 01                     	sub dword ptr [ebp - 0x2c], 1
0x804a284:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a288:   74 07                           	je 0x804a291 <func_1+0xab6>
0x804a28a:   b8 01 00 00 00                  	mov eax, 1
0x804a28f:   eb 05                           	jmp 0x804a296 <func_1+0xabb>
0x804a291:   b8 00 00 00 00                  	mov eax, 0
0x804a296:   89 c2                           	mov edx, eax
0x804a298:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a29c:   21 d0                           	and eax, edx
0x804a29e:   0f be c0                        	movsx eax, al
0x804a2a1:   8b 95 70 ff ff ff               	mov edx, dword ptr [ebp - 0x90]
0x804a2a7:   0f be fa                        	movsx edi, dl
0x804a2aa:   99                              	cdq 
0x804a2ab:   f7 ff                           	idiv edi
0x804a2ad:   66 39 85 04 ff ff ff            	cmp word ptr [ebp - 0xfc], ax
0x804a2b4:   0f 9d c0                        	setge al
0x804a2b7:   0f b6 c0                        	movzx eax, al
0x804a2ba:   39 c1                           	cmp ecx, eax
0x804a2bc:   0f 95 c0                        	setne al
0x804a2bf:   0f b6 c0                        	movzx eax, al
0x804a2c2:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x804a2c5:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a2c9:   83 c0 06                        	add eax, 6
0x804a2cc:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804a2cf:   80 7d f2 19                     	cmp byte ptr [ebp - 0xe], 0x19
0x804a2d3:   0f 8f f2 fe ff ff               	jg 0x804a1cb <func_1+0x9f0>
0x804a2d9:   e9 2b 0d 00 00                  	jmp 0x804b009 <func_1+0x182e>
0x804a2de:   c7 85 c4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x13c], 1
0x804a2e8:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x804a2f2:   66 c7 85 c2 fe ff ff 96 53      	mov word ptr [ebp - 0x13e], 0x5396
0x804a2fb:   c7 85 bc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x144], 0xffffffff
0x804a305:   c6 45 d3 00                     	mov byte ptr [ebp - 0x2d], 0
0x804a309:   eb 0e                           	jmp 0x804a319 <func_1+0xb3e>
0x804a30b:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a30f:   83 c0 01                        	add eax, 1
0x804a312:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a315:   80 45 d3 07                     	add byte ptr [ebp - 0x2d], 7
0x804a319:   80 7d d3 23                     	cmp byte ptr [ebp - 0x2d], 0x23
0x804a31d:   75 ec                           	jne 0x804a30b <func_1+0xb30>
0x804a31f:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a326:   e9 fe 01 00 00                  	jmp 0x804a529 <func_1+0xd4e>
0x804a32b:   c7 85 9c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x164], 0xffffffff
0x804a335:   c7 85 98 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x168], 0xffffffff
0x804a33f:   c7 85 94 fe ff ff 54 32 43 96   	mov dword ptr [ebp - 0x16c], 0x96433254
0x804a349:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a34c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a34f:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a353:   74 0d                           	je 0x804a362 <func_1+0xb87>
0x804a355:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x804a359:   74 07                           	je 0x804a362 <func_1+0xb87>
0x804a35b:   b8 01 00 00 00                  	mov eax, 1
0x804a360:   eb 05                           	jmp 0x804a367 <func_1+0xb8c>
0x804a362:   b8 00 00 00 00                  	mov eax, 0
0x804a367:   66 21 45 ea                     	and word ptr [ebp - 0x16], ax
0x804a36b:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a36f:   66 83 65 ea 02                  	and word ptr [ebp - 0x16], 2
0x804a374:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804a378:   c1 e2 07                        	shl edx, 7
0x804a37b:   39 d0                           	cmp eax, edx
0x804a37d:   0f 9c c0                        	setl al
0x804a380:   0f b6 d0                        	movzx edx, al
0x804a383:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a387:   39 c2                           	cmp edx, eax
0x804a389:   0f 9c c0                        	setl al
0x804a38c:   0f b6 c0                        	movzx eax, al
0x804a38f:   ba 00 00 00 00                  	mov edx, 0
0x804a394:   f7 b5 9c fe ff ff               	div dword ptr [ebp - 0x164]
0x804a39a:   85 c0                           	test eax, eax
0x804a39c:   0f 94 c0                        	sete al
0x804a39f:   0f b6 c0                        	movzx eax, al
0x804a3a2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a3a5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a3a8:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a3ab:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a3af:   74 6c                           	je 0x804a41d <func_1+0xc42>
0x804a3b1:   c6 85 87 fe ff ff 4c            	mov byte ptr [ebp - 0x179], 0x4c
0x804a3b8:   c6 45 f2 ff                     	mov byte ptr [ebp - 0xe], 0xff
0x804a3bc:   0f b6 85 87 fe ff ff            	movzx eax, byte ptr [ebp - 0x179]
0x804a3c3:   c1 e0 0c                        	shl eax, 0xc
0x804a3c6:   89 c1                           	mov ecx, eax
0x804a3c8:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a3ce:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x804a3d1:   80 7d d1 ff                     	cmp byte ptr [ebp - 0x2f], 0xff
0x804a3d5:   0f 9d c0                        	setge al
0x804a3d8:   0f b6 c0                        	movzx eax, al
0x804a3db:   f7 d8                           	neg eax
0x804a3dd:   89 c2                           	mov edx, eax
0x804a3df:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a3e3:   39 c2                           	cmp edx, eax
0x804a3e5:   0f 9f c0                        	setg al
0x804a3e8:   0f b6 c0                        	movzx eax, al
0x804a3eb:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a3ee:   0f 9f c0                        	setg al
0x804a3f1:   0f b6 c0                        	movzx eax, al
0x804a3f4:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a3f7:   0f be fa                        	movsx edi, dl
0x804a3fa:   99                              	cdq 
0x804a3fb:   f7 ff                           	idiv edi
0x804a3fd:   31 c8                           	xor eax, ecx
0x804a3ff:   31 85 7c ff ff ff               	xor dword ptr [ebp - 0x84], eax
0x804a405:   0f bf 85 04 ff ff ff            	movsx eax, word ptr [ebp - 0xfc]
0x804a40c:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x804a40f:   0f bf ca                        	movsx ecx, dx
0x804a412:   99                              	cdq 
0x804a413:   f7 f9                           	idiv ecx
0x804a415:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x804a418:   e9 08 01 00 00                  	jmp 0x804a525 <func_1+0xd4a>
0x804a41d:   c7 85 90 fe ff ff 48 32 a9 67   	mov dword ptr [ebp - 0x170], 0x67a93248
0x804a427:   c7 85 8c fe ff ff 95 70 e1 53   	mov dword ptr [ebp - 0x174], 0x53e17095
0x804a431:   c7 85 88 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x178], 0
0x804a43b:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a43f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a442:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x804a447:   74 07                           	je 0x804a450 <func_1+0xc75>
0x804a449:   b8 01 00 00 00                  	mov eax, 1
0x804a44e:   eb 05                           	jmp 0x804a455 <func_1+0xc7a>
0x804a450:   b8 00 00 00 00                  	mov eax, 0
0x804a455:   83 f8 37                        	cmp eax, 0x37
0x804a458:   7f 06                           	jg 0x804a460 <func_1+0xc85>
0x804a45a:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x804a45e:   74 07                           	je 0x804a467 <func_1+0xc8c>
0x804a460:   b8 01 00 00 00                  	mov eax, 1
0x804a465:   eb 05                           	jmp 0x804a46c <func_1+0xc91>
0x804a467:   b8 00 00 00 00                  	mov eax, 0
0x804a46c:   3d 98 e9 00 00                  	cmp eax, 0xe998
0x804a471:   7e 07                           	jle 0x804a47a <func_1+0xc9f>
0x804a473:   b8 09 00 00 00                  	mov eax, 9
0x804a478:   eb 05                           	jmp 0x804a47f <func_1+0xca4>
0x804a47a:   b8 08 00 00 00                  	mov eax, 8
0x804a47f:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804a482:   0f be 55 f2                     	movsx edx, byte ptr [ebp - 0xe]
0x804a486:   89 d0                           	mov eax, edx
0x804a488:   c1 e0 02                        	shl eax, 2
0x804a48b:   01 d0                           	add eax, edx
0x804a48d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a490:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804a496:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a499:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a49f:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a4a5:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x804a4ab:   3b 85 60 ff ff ff               	cmp eax, dword ptr [ebp - 0xa0]
0x804a4b1:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a4b5:   0b 85 08 ff ff ff               	or eax, dword ptr [ebp - 0xf8]
0x804a4bb:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a4be:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a4c2:   83 f0 45                        	xor eax, 0x45
0x804a4c5:   0f be c0                        	movsx eax, al
0x804a4c8:   8b 95 9c fe ff ff               	mov edx, dword ptr [ebp - 0x164]
0x804a4ce:   0f be ca                        	movsx ecx, dl
0x804a4d1:   99                              	cdq 
0x804a4d2:   f7 f9                           	idiv ecx
0x804a4d4:   89 d0                           	mov eax, edx
0x804a4d6:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a4d9:   0f 94 c0                        	sete al
0x804a4dc:   0f b6 c0                        	movzx eax, al
0x804a4df:   89 c2                           	mov edx, eax
0x804a4e1:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a4e5:   0f af c2                        	imul eax, edx
0x804a4e8:   0f bf d0                        	movsx edx, ax
0x804a4eb:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a4ee:   98                              	cwde 
0x804a4ef:   89 c1                           	mov ecx, eax
0x804a4f1:   d3 fa                           	sar edx, cl
0x804a4f3:   89 d0                           	mov eax, edx
0x804a4f5:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a4f8:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a4fe:   3b 85 9c fe ff ff               	cmp eax, dword ptr [ebp - 0x164]
0x804a504:   0f 96 c0                        	setbe al
0x804a507:   0f b6 c0                        	movzx eax, al
0x804a50a:   39 85 90 fe ff ff               	cmp dword ptr [ebp - 0x170], eax
0x804a510:   0f 97 c0                        	seta al
0x804a513:   0f b6 d0                        	movzx edx, al
0x804a516:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a51a:   0f af c2                        	imul eax, edx
0x804a51d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a520:   66 83 6d c4 01                  	sub word ptr [ebp - 0x3c], 1
0x804a525:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x804a529:   83 7d c8 1d                     	cmp dword ptr [ebp - 0x38], 0x1d
0x804a52d:   0f 8e f8 fd ff ff               	jle 0x804a32b <func_1+0xb50>
0x804a533:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a53d:   e9 ef 04 00 00                  	jmp 0x804aa31 <func_1+0x1256>
0x804a542:   c7 85 b8 fe ff ff 1b 16 69 e2   	mov dword ptr [ebp - 0x148], 0xe269161b
0x804a54c:   c7 85 78 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x88], 1
0x804a556:   c7 85 b4 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x14c], 0xfffffff8
0x804a560:   c7 85 74 ff ff ff b9 bb 01 98   	mov dword ptr [ebp - 0x8c], 0x9801bbb9
0x804a56a:   80 7d d3 00                     	cmp byte ptr [ebp - 0x2d], 0
0x804a56e:   74 44                           	je 0x804a5b4 <func_1+0xdd9>
0x804a570:   0f be 55 d1                     	movsx edx, byte ptr [ebp - 0x2f]
0x804a574:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a578:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x804a57e:   0f 9e c0                        	setle al
0x804a581:   0f b6 c0                        	movzx eax, al
0x804a584:   39 c2                           	cmp edx, eax
0x804a586:   7c 07                           	jl 0x804a58f <func_1+0xdb4>
0x804a588:   66 83 7d c4 00                  	cmp word ptr [ebp - 0x3c], 0
0x804a58d:   74 07                           	je 0x804a596 <func_1+0xdbb>
0x804a58f:   b8 01 00 00 00                  	mov eax, 1
0x804a594:   eb 05                           	jmp 0x804a59b <func_1+0xdc0>
0x804a596:   b8 00 00 00 00                  	mov eax, 0
0x804a59b:   0f b7 d0                        	movzx edx, ax
0x804a59e:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x804a5a3:   0f b7 c0                        	movzx eax, ax
0x804a5a6:   89 c1                           	mov ecx, eax
0x804a5a8:   d3 fa                           	sar edx, cl
0x804a5aa:   89 d0                           	mov eax, edx
0x804a5ac:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a5af:   e9 e9 00 00 00                  	jmp 0x804a69d <func_1+0xec2>
0x804a5b4:   c7 85 b0 fe ff ff 8e 1b 48 47   	mov dword ptr [ebp - 0x150], 0x47481b8e
0x804a5be:   66 c7 85 ae fe ff ff 3a 92      	mov word ptr [ebp - 0x152], 0x923a
0x804a5c7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5ca:   34 bb                           	xor al, 0xbb
0x804a5cc:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a5cf:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a5d3:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a5d6:   0f 9d c0                        	setge al
0x804a5d9:   0f b6 c0                        	movzx eax, al
0x804a5dc:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a5df:   0f 9e c0                        	setle al
0x804a5e2:   0f b6 d0                        	movzx edx, al
0x804a5e5:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a5eb:   0f b6 c0                        	movzx eax, al
0x804a5ee:   01 d0                           	add eax, edx
0x804a5f0:   85 c0                           	test eax, eax
0x804a5f2:   c7 45 8c 52 c1 64 ac            	mov dword ptr [ebp - 0x74], 0xac64c152
0x804a5f9:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a5fd:   74 05                           	je 0x804a604 <func_1+0xe29>
0x804a5ff:   e9 78 f3 ff ff                  	jmp 0x804997c <func_1+0x1a1>
0x804a604:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x804a609:   0f 84 80 00 00 00               	je 0x804a68f <func_1+0xeb4>
0x804a60f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a612:   0f bf d8                        	movsx ebx, ax
0x804a615:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a61b:   0f bf d0                        	movsx edx, ax
0x804a61e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a621:   98                              	cwde 
0x804a622:   01 d0                           	add eax, edx
0x804a624:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a627:   0f 9e c0                        	setle al
0x804a62a:   0f b6 d0                        	movzx edx, al
0x804a62d:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x804a631:   39 c2                           	cmp edx, eax
0x804a633:   0f 94 c0                        	sete al
0x804a636:   0f b6 c0                        	movzx eax, al
0x804a639:   99                              	cdq 
0x804a63a:   f7 7d ec                        	idiv dword ptr [ebp - 0x14]
0x804a63d:   98                              	cwde 
0x804a63e:   89 c1                           	mov ecx, eax
0x804a640:   d3 e3                           	shl ebx, cl
0x804a642:   89 da                           	mov edx, ebx
0x804a644:   0f b7 85 ae fe ff ff            	movzx eax, word ptr [ebp - 0x152]
0x804a64b:   39 c2                           	cmp edx, eax
0x804a64d:   0f 9d c0                        	setge al
0x804a650:   0f b6 c0                        	movzx eax, al
0x804a653:   8b 95 b8 fe ff ff               	mov edx, dword ptr [ebp - 0x148]
0x804a659:   0f b6 ca                        	movzx ecx, dl
0x804a65c:   99                              	cdq 
0x804a65d:   f7 f9                           	idiv ecx
0x804a65f:   89 d0                           	mov eax, edx
0x804a661:   83 e8 07                        	sub eax, 7
0x804a664:   0f b6 c0                        	movzx eax, al
0x804a667:   c1 e0 06                        	shl eax, 6
0x804a66a:   85 c0                           	test eax, eax
0x804a66c:   75 10                           	jne 0x804a67e <func_1+0xea3>
0x804a66e:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a675:   75 07                           	jne 0x804a67e <func_1+0xea3>
0x804a677:   b8 01 00 00 00                  	mov eax, 1
0x804a67c:   eb 05                           	jmp 0x804a683 <func_1+0xea8>
0x804a67e:   b8 00 00 00 00                  	mov eax, 0
0x804a683:   66 85 c0                        	test ax, ax
0x804a686:   75 07                           	jne 0x804a68f <func_1+0xeb4>
0x804a688:   b8 01 00 00 00                  	mov eax, 1
0x804a68d:   eb 05                           	jmp 0x804a694 <func_1+0xeb9>
0x804a68f:   b8 00 00 00 00                  	mov eax, 0
0x804a694:   33 45 e4                        	xor eax, dword ptr [ebp - 0x1c]
0x804a697:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a69d:   c7 45 b0 f2 ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffff2
0x804a6a4:   e9 37 01 00 00                  	jmp 0x804a7e0 <func_1+0x1005>
0x804a6a9:   c7 85 a0 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x160], 5
0x804a6b3:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a6b6:   31 85 a0 fe ff ff               	xor dword ptr [ebp - 0x160], eax
0x804a6bc:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a6c3:   f7 d0                           	not eax
0x804a6c5:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a6cb:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x804a6d2:   75 04                           	jne 0x804a6d8 <func_1+0xefd>
0x804a6d4:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a6d8:   b9 fa ff ff ff                  	mov ecx, 0xfffffffa
0x804a6dd:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a6e0:   0b 45 d4                        	or eax, dword ptr [ebp - 0x2c]
0x804a6e3:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a6e6:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a6e9:   31 8d 78 ff ff ff               	xor dword ptr [ebp - 0x88], ecx
0x804a6ef:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a6f5:   89 c1                           	mov ecx, eax
0x804a6f7:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a6fd:   01 c8                           	add eax, ecx
0x804a6ff:   0f be c8                        	movsx ecx, al
0x804a702:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a706:   0f be c0                        	movsx eax, al
0x804a709:   29 c1                           	sub ecx, eax
0x804a70b:   89 c8                           	mov eax, ecx
0x804a70d:   0b 85 00 ff ff ff               	or eax, dword ptr [ebp - 0x100]
0x804a713:   39 c2                           	cmp edx, eax
0x804a715:   75 06                           	jne 0x804a71d <func_1+0xf42>
0x804a717:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a71b:   74 07                           	je 0x804a724 <func_1+0xf49>
0x804a71d:   b8 01 00 00 00                  	mov eax, 1
0x804a722:   eb 05                           	jmp 0x804a729 <func_1+0xf4e>
0x804a724:   b8 00 00 00 00                  	mov eax, 0
0x804a729:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a72f:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a735:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a739:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a73d:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804a743:   0f 94 c0                        	sete al
0x804a746:   0f b6 c8                        	movzx ecx, al
0x804a749:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a74c:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x804a752:   89 d3                           	mov ebx, edx
0x804a754:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x804a758:   21 da                           	and edx, ebx
0x804a75a:   66 89 55 c0                     	mov word ptr [ebp - 0x40], dx
0x804a75e:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804a762:   ba 00 00 00 00                  	mov edx, 0
0x804a767:   f7 f7                           	div edi
0x804a769:   89 c2                           	mov edx, eax
0x804a76b:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a771:   09 d0                           	or eax, edx
0x804a773:   3d e2 fa 00 00                  	cmp eax, 0xfae2
0x804a778:   0f 96 c0                        	setbe al
0x804a77b:   0f b6 c0                        	movzx eax, al
0x804a77e:   01 c8                           	add eax, ecx
0x804a780:   31 85 74 ff ff ff               	xor dword ptr [ebp - 0x8c], eax
0x804a786:   81 bd 70 ff ff ff 90 00 00 00   	cmp dword ptr [ebp - 0x90], 0x90
0x804a790:   0f 9e c0                        	setle al
0x804a793:   0f b6 c0                        	movzx eax, al
0x804a796:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a79c:   0f 94 c0                        	sete al
0x804a79f:   0f b6 d0                        	movzx edx, al
0x804a7a2:   0f b7 85 c2 fe ff ff            	movzx eax, word ptr [ebp - 0x13e]
0x804a7a9:   39 c2                           	cmp edx, eax
0x804a7ab:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a7b1:   0f b7 c0                        	movzx eax, ax
0x804a7b4:   ba bf 3e 00 00                  	mov edx, 0x3ebf
0x804a7b9:   89 c1                           	mov ecx, eax
0x804a7bb:   d3 fa                           	sar edx, cl
0x804a7bd:   89 d0                           	mov eax, edx
0x804a7bf:   85 c0                           	test eax, eax
0x804a7c1:   74 11                           	je 0x804a7d4 <func_1+0xff9>
0x804a7c3:   66 83 bd 04 ff ff ff 00         	cmp word ptr [ebp - 0xfc], 0
0x804a7cb:   74 07                           	je 0x804a7d4 <func_1+0xff9>
0x804a7cd:   b8 01 00 00 00                  	mov eax, 1
0x804a7d2:   eb 05                           	jmp 0x804a7d9 <func_1+0xffe>
0x804a7d4:   b8 00 00 00 00                  	mov eax, 0
0x804a7d9:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a7dc:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a7e0:   83 7d b0 13                     	cmp dword ptr [ebp - 0x50], 0x13
0x804a7e4:   0f 84 bf fe ff ff               	je 0x804a6a9 <func_1+0xece>
0x804a7ea:   0f be 85 6b ff ff ff            	movsx eax, byte ptr [ebp - 0x95]
0x804a7f1:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x804a7f7:   0f 9e c0                        	setle al
0x804a7fa:   0f b6 c0                        	movzx eax, al
0x804a7fd:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804a801:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a805:   0f be c0                        	movsx eax, al
0x804a808:   66 83 bd 0e ff ff ff 00         	cmp word ptr [ebp - 0xf2], 0
0x804a810:   0f 95 c2                        	setne dl
0x804a813:   0f b6 d2                        	movzx edx, dl
0x804a816:   0f be ca                        	movsx ecx, dl
0x804a819:   99                              	cdq 
0x804a81a:   f7 f9                           	idiv ecx
0x804a81c:   89 d0                           	mov eax, edx
0x804a81e:   89 c1                           	mov ecx, eax
0x804a820:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a824:   ba 00 00 00 00                  	mov edx, 0
0x804a829:   66 f7 f1                        	div cx
0x804a82c:   89 d0                           	mov eax, edx
0x804a82e:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804a831:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a835:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a838:   c6 85 ad fe ff ff 68            	mov byte ptr [ebp - 0x153], 0x68
0x804a83f:   c7 85 a8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x158], 1
0x804a849:   c7 85 a4 fe ff ff b2 1b 4e 0b   	mov dword ptr [ebp - 0x15c], 0xb4e1bb2
0x804a853:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a859:   0f b6 d0                        	movzx edx, al
0x804a85c:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a85f:   0f b6 c0                        	movzx eax, al
0x804a862:   01 c2                           	add edx, eax
0x804a864:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a868:   39 c2                           	cmp edx, eax
0x804a86a:   0f 9c c0                        	setl al
0x804a86d:   0f b6 c0                        	movzx eax, al
0x804a870:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a873:   0f b6 85 ad fe ff ff            	movzx eax, byte ptr [ebp - 0x153]
0x804a87a:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a87d:   0f 95 c0                        	setne al
0x804a880:   0f b6 c0                        	movzx eax, al
0x804a883:   89 c2                           	mov edx, eax
0x804a885:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a889:   09 d0                           	or eax, edx
0x804a88b:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a88e:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a892:   6b c0 2e                        	imul eax, eax, 0x2e
0x804a895:   3d b6 ef 00 00                  	cmp eax, 0xefb6
0x804a89a:   0f 9e c0                        	setle al
0x804a89d:   0f b6 d0                        	movzx edx, al
0x804a8a0:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a8a4:   39 c2                           	cmp edx, eax
0x804a8a6:   7d 07                           	jge 0x804a8af <func_1+0x10d4>
0x804a8a8:   b8 33 00 00 00                  	mov eax, 0x33
0x804a8ad:   eb 05                           	jmp 0x804a8b4 <func_1+0x10d9>
0x804a8af:   b8 32 00 00 00                  	mov eax, 0x32
0x804a8b4:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a8b7:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a8bb:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a8be:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x804a8c3:   74 07                           	je 0x804a8cc <func_1+0x10f1>
0x804a8c5:   b8 01 00 00 00                  	mov eax, 1
0x804a8ca:   eb 05                           	jmp 0x804a8d1 <func_1+0x10f6>
0x804a8cc:   b8 00 00 00 00                  	mov eax, 0
0x804a8d1:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a8d4:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a8d8:   83 e8 01                        	sub eax, 1
0x804a8db:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x804a8df:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804a8e3:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a8e7:   66 0b 85 c2 fe ff ff            	or ax, word ptr [ebp - 0x13e]
0x804a8ee:   89 c3                           	mov ebx, eax
0x804a8f0:   b8 01 0d 00 00                  	mov eax, 0xd01
0x804a8f5:   ba 00 00 00 00                  	mov edx, 0
0x804a8fa:   66 f7 f3                        	div bx
0x804a8fd:   89 d0                           	mov eax, edx
0x804a8ff:   66 39 c1                        	cmp cx, ax
0x804a902:   0f 93 c0                        	setae al
0x804a905:   0f b6 c0                        	movzx eax, al
0x804a908:   0b 45 8c                        	or eax, dword ptr [ebp - 0x74]
0x804a90b:   3d c4 22 43 69                  	cmp eax, 0x694322c4
0x804a910:   0f 94 c0                        	sete al
0x804a913:   0f b6 c0                        	movzx eax, al
0x804a916:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a91a:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a91e:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a921:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a924:   0f b7 d0                        	movzx edx, ax
0x804a927:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a92d:   0f b7 c0                        	movzx eax, ax
0x804a930:   89 c1                           	mov ecx, eax
0x804a932:   d3 fa                           	sar edx, cl
0x804a934:   89 d0                           	mov eax, edx
0x804a936:   3d d8 22 00 00                  	cmp eax, 0x22d8
0x804a93b:   0f 94 c0                        	sete al
0x804a93e:   0f b6 c0                        	movzx eax, al
0x804a941:   0b 45 d8                        	or eax, dword ptr [ebp - 0x28]
0x804a944:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a94a:   0f be 95 07 ff ff ff            	movsx edx, byte ptr [ebp - 0xf9]
0x804a951:   0f bf 5d c2                     	movsx ebx, word ptr [ebp - 0x3e]
0x804a955:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a958:   0f b7 f0                        	movzx esi, ax
0x804a95b:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a95f:   83 c8 54                        	or eax, 0x54
0x804a962:   0f b6 c0                        	movzx eax, al
0x804a965:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x804a96b:   0f 9f c0                        	setg al
0x804a96e:   0f b6 c0                        	movzx eax, al
0x804a971:   89 c1                           	mov ecx, eax
0x804a973:   d3 fe                           	sar esi, cl
0x804a975:   89 f0                           	mov eax, esi
0x804a977:   66 d1 f8                        	sar ax, 1
0x804a97a:   66 85 c0                        	test ax, ax
0x804a97d:   0f 95 c0                        	setne al
0x804a980:   0f b6 c0                        	movzx eax, al
0x804a983:   0f b6 c0                        	movzx eax, al
0x804a986:   c1 e0 03                        	shl eax, 3
0x804a989:   89 c1                           	mov ecx, eax
0x804a98b:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a991:   09 c8                           	or eax, ecx
0x804a993:   3c 6b                           	cmp al, 0x6b
0x804a995:   76 0d                           	jbe 0x804a9a4 <func_1+0x11c9>
0x804a997:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a99b:   74 07                           	je 0x804a9a4 <func_1+0x11c9>
0x804a99d:   b8 01 00 00 00                  	mov eax, 1
0x804a9a2:   eb 05                           	jmp 0x804a9a9 <func_1+0x11ce>
0x804a9a4:   b8 00 00 00 00                  	mov eax, 0
0x804a9a9:   83 f8 01                        	cmp eax, 1
0x804a9ac:   0f 95 c0                        	setne al
0x804a9af:   0f b6 c0                        	movzx eax, al
0x804a9b2:   39 c3                           	cmp ebx, eax
0x804a9b4:   7d 10                           	jge 0x804a9c6 <func_1+0x11eb>
0x804a9b6:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a9bd:   74 07                           	je 0x804a9c6 <func_1+0x11eb>
0x804a9bf:   b8 01 00 00 00                  	mov eax, 1
0x804a9c4:   eb 05                           	jmp 0x804a9cb <func_1+0x11f0>
0x804a9c6:   b8 00 00 00 00                  	mov eax, 0
0x804a9cb:   09 c2                           	or edx, eax
0x804a9cd:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a9d1:   39 c2                           	cmp edx, eax
0x804a9d3:   0f 9c c0                        	setl al
0x804a9d6:   0f b6 d0                        	movzx edx, al
0x804a9d9:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a9df:   0f be c0                        	movsx eax, al
0x804a9e2:   89 c1                           	mov ecx, eax
0x804a9e4:   d3 fa                           	sar edx, cl
0x804a9e6:   89 d0                           	mov eax, edx
0x804a9e8:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a9eb:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a9ee:   0f b6 d0                        	movzx edx, al
0x804a9f1:   89 d0                           	mov eax, edx
0x804a9f3:   c1 e0 03                        	shl eax, 3
0x804a9f6:   29 d0                           	sub eax, edx
0x804a9f8:   c1 e0 04                        	shl eax, 4
0x804a9fb:   29 d0                           	sub eax, edx
0x804a9fd:   66 c1 e8 08                     	shr ax, 8
0x804aa01:   c0 e8 04                        	shr al, 4
0x804aa04:   0f b6 d0                        	movzx edx, al
0x804aa07:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804aa0e:   98                              	cwde 
0x804aa0f:   01 d0                           	add eax, edx
0x804aa11:   f7 d0                           	not eax
0x804aa13:   89 c2                           	mov edx, eax
0x804aa15:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804aa19:   39 c2                           	cmp edx, eax
0x804aa1b:   0f 95 c0                        	setne al
0x804aa1e:   0f b6 c0                        	movzx eax, al
0x804aa21:   09 45 80                        	or dword ptr [ebp - 0x80], eax
0x804aa24:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804aa27:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804aa2a:   83 85 7c ff ff ff 01            	add dword ptr [ebp - 0x84], 1
0x804aa31:   83 bd 7c ff ff ff 0d            	cmp dword ptr [ebp - 0x84], 0xd
0x804aa38:   0f 8f 04 fb ff ff               	jg 0x804a542 <func_1+0xd67>
0x804aa3e:   e9 c6 05 00 00                  	jmp 0x804b009 <func_1+0x182e>
0x804aa43:   c7 85 40 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc0], 1
0x804aa4d:   66 c7 85 3e ff ff ff 13 20      	mov word ptr [ebp - 0xc2], 0x2013
0x804aa56:   66 c7 85 3c ff ff ff 3c 3a      	mov word ptr [ebp - 0xc4], 0x3a3c
0x804aa5f:   c6 85 3b ff ff ff e5            	mov byte ptr [ebp - 0xc5], 0xe5
0x804aa66:   c6 85 3a ff ff ff 04            	mov byte ptr [ebp - 0xc6], 4
0x804aa6d:   c7 85 34 ff ff ff 63 bf a9 8b   	mov dword ptr [ebp - 0xcc], 0x8ba9bf63
0x804aa77:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804aa7b:   0f b7 95 3e ff ff ff            	movzx edx, word ptr [ebp - 0xc2]
0x804aa82:   0f b6 d2                        	movzx edx, dl
0x804aa85:   b9 f7 00 00 00                  	mov ecx, 0xf7
0x804aa8a:   29 d1                           	sub ecx, edx
0x804aa8c:   0f bf 95 3c ff ff ff            	movsx edx, word ptr [ebp - 0xc4]
0x804aa93:   21 ca                           	and edx, ecx
0x804aa95:   39 d0                           	cmp eax, edx
0x804aa97:   0f 9e c0                        	setle al
0x804aa9a:   89 c2                           	mov edx, eax
0x804aa9c:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804aaa0:   09 d0                           	or eax, edx
0x804aaa2:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804aaa5:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804aaa9:   0f be c0                        	movsx eax, al
0x804aaac:   83 e8 01                        	sub eax, 1
0x804aaaf:   89 c2                           	mov edx, eax
0x804aab1:   81 fa 6a ff 73 c3               	cmp edx, 0xc373ff6a
0x804aab7:   0f 93 c0                        	setae al
0x804aaba:   0f b6 c0                        	movzx eax, al
0x804aabd:   69 c0 6a ff 73 c3               	imul eax, eax, 0xc373ff6a
0x804aac3:   29 c2                           	sub edx, eax
0x804aac5:   89 d0                           	mov eax, edx
0x804aac7:   85 c0                           	test eax, eax
0x804aac9:   74 10                           	je 0x804aadb <func_1+0x1300>
0x804aacb:   80 bd 3b ff ff ff 00            	cmp byte ptr [ebp - 0xc5], 0
0x804aad2:   74 07                           	je 0x804aadb <func_1+0x1300>
0x804aad4:   b8 01 00 00 00                  	mov eax, 1
0x804aad9:   eb 05                           	jmp 0x804aae0 <func_1+0x1305>
0x804aadb:   b8 00 00 00 00                  	mov eax, 0
0x804aae0:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x804aae3:   89 c2                           	mov edx, eax
0x804aae5:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804aae9:   39 c2                           	cmp edx, eax
0x804aaeb:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x804aaf2:   0f b6 c8                        	movzx ecx, al
0x804aaf5:   b8 01 00 00 00                  	mov eax, 1
0x804aafa:   99                              	cdq 
0x804aafb:   f7 f9                           	idiv ecx
0x804aafd:   89 d0                           	mov eax, edx
0x804aaff:   89 c2                           	mov edx, eax
0x804ab01:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804ab05:   09 d0                           	or eax, edx
0x804ab07:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804ab0b:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804ab0f:   8b 95 40 ff ff ff               	mov edx, dword ptr [ebp - 0xc0]
0x804ab15:   0f b7 fa                        	movzx edi, dx
0x804ab18:   99                              	cdq 
0x804ab19:   f7 ff                           	idiv edi
0x804ab1b:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804ab1e:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804ab25:   0f 84 cb 00 00 00               	je 0x804abf6 <func_1+0x141b>
0x804ab2b:   c6 85 13 ff ff ff ff            	mov byte ptr [ebp - 0xed], 0xff
0x804ab32:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x804ab39:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804ab3c:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804ab40:   74 1e                           	je 0x804ab60 <func_1+0x1385>
0x804ab42:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804ab46:   74 10                           	je 0x804ab58 <func_1+0x137d>
0x804ab48:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804ab4f:   74 07                           	je 0x804ab58 <func_1+0x137d>
0x804ab51:   b8 01 00 00 00                  	mov eax, 1
0x804ab56:   eb 05                           	jmp 0x804ab5d <func_1+0x1382>
0x804ab58:   b8 00 00 00 00                  	mov eax, 0
0x804ab5d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804ab60:   b8 00 00 00 00                  	mov eax, 0
0x804ab65:   83 f8 ff                        	cmp eax, -1
0x804ab68:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804ab70:   0f 94 c0                        	sete al
0x804ab73:   0f b6 d0                        	movzx edx, al
0x804ab76:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804ab7a:   09 d0                           	or eax, edx
0x804ab7c:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804ab7f:   0f be 95 13 ff ff ff            	movsx edx, byte ptr [ebp - 0xed]
0x804ab86:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804ab8a:   39 c2                           	cmp edx, eax
0x804ab8c:   0f 94 c0                        	sete al
0x804ab8f:   0f b6 d0                        	movzx edx, al
0x804ab92:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804ab95:   0f b7 d8                        	movzx ebx, ax
0x804ab98:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x804ab9f:   0f be c0                        	movsx eax, al
0x804aba2:   b9 fb ff ff ff                  	mov ecx, 0xfffffffb
0x804aba7:   29 c1                           	sub ecx, eax
0x804aba9:   89 c8                           	mov eax, ecx
0x804abab:   35 23 53 00 00                  	xor eax, 0x5323
0x804abb0:   33 45 c8                        	xor eax, dword ptr [ebp - 0x38]
0x804abb3:   89 c1                           	mov ecx, eax
0x804abb5:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804abb9:   39 c1                           	cmp ecx, eax
0x804abbb:   0f 9c c0                        	setl al
0x804abbe:   0f b6 c0                        	movzx eax, al
0x804abc1:   89 c1                           	mov ecx, eax
0x804abc3:   d3 e3                           	shl ebx, cl
0x804abc5:   89 d8                           	mov eax, ebx
0x804abc7:   0f be c0                        	movsx eax, al
0x804abca:   29 c2                           	sub edx, eax
0x804abcc:   89 d0                           	mov eax, edx
0x804abce:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804abd1:   0f 97 c0                        	seta al
0x804abd4:   0f b6 d0                        	movzx edx, al
0x804abd7:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804abdd:   0f b6 c0                        	movzx eax, al
0x804abe0:   0f af c2                        	imul eax, edx
0x804abe3:   3d f8 ff 00 00                  	cmp eax, 0xfff8
0x804abe8:   0f 96 c0                        	setbe al
0x804abeb:   0f b6 c0                        	movzx eax, al
0x804abee:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804abf1:   e9 08 04 00 00                  	jmp 0x804affe <func_1+0x1823>
0x804abf6:   c6 85 33 ff ff ff d2            	mov byte ptr [ebp - 0xcd], 0xd2
0x804abfd:   c7 85 2c ff ff ff ea 35 4b 1c   	mov dword ptr [ebp - 0xd4], 0x1c4b35ea
0x804ac07:   c7 85 28 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd8], 1
0x804ac11:   c6 85 27 ff ff ff ff            	mov byte ptr [ebp - 0xd9], 0xff
0x804ac18:   c7 85 20 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xe0], 4
0x804ac22:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x804ac29:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x804ac33:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804ac3a:   eb 55                           	jmp 0x804ac91 <func_1+0x14b6>
0x804ac3c:   0f b6 55 d2                     	movzx edx, byte ptr [ebp - 0x2e]
0x804ac40:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804ac44:   89 c1                           	mov ecx, eax
0x804ac46:   d3 e2                           	shl edx, cl
0x804ac48:   89 d0                           	mov eax, edx
0x804ac4a:   0f be c0                        	movsx eax, al
0x804ac4d:   0f be 8d 27 ff ff ff            	movsx ecx, byte ptr [ebp - 0xd9]
0x804ac54:   99                              	cdq 
0x804ac55:   f7 f9                           	idiv ecx
0x804ac57:   89 d0                           	mov eax, edx
0x804ac59:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804ac5d:   ba 00 00 00 00                  	mov edx, 0
0x804ac62:   f7 f1                           	div ecx
0x804ac64:   89 d0                           	mov eax, edx
0x804ac66:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x804ac69:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804ac6d:   23 45 a4                        	and eax, dword ptr [ebp - 0x5c]
0x804ac70:   66 21 45 c0                     	and word ptr [ebp - 0x40], ax
0x804ac74:   66 83 7d c0 05                  	cmp word ptr [ebp - 0x40], 5
0x804ac79:   0f 96 c0                        	setbe al
0x804ac7c:   0f b6 c0                        	movzx eax, al
0x804ac7f:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804ac82:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804ac89:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804ac8d:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804ac91:   83 7d d4 14                     	cmp dword ptr [ebp - 0x2c], 0x14
0x804ac95:   77 a5                           	ja 0x804ac3c <func_1+0x1461>
0x804ac97:   0f be 8d 33 ff ff ff            	movsx ecx, byte ptr [ebp - 0xcd]
0x804ac9e:   80 7d d1 ff                     	cmp byte ptr [ebp - 0x2f], 0xff
0x804aca2:   0f 94 c0                        	sete al
0x804aca5:   0f b6 c0                        	movzx eax, al
0x804aca8:   f7 d0                           	not eax
0x804acaa:   89 c2                           	mov edx, eax
0x804acac:   66 0f be 85 6b ff ff ff         	movsx ax, byte ptr [ebp - 0x95]
0x804acb4:   66 c1 e8 0a                     	shr ax, 0xa
0x804acb8:   89 c3                           	mov ebx, eax
0x804acba:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804acbe:   66 39 c3                        	cmp bx, ax
0x804acc1:   0f 92 c0                        	setb al
0x804acc4:   0f b6 c0                        	movzx eax, al
0x804acc7:   39 c2                           	cmp edx, eax
0x804acc9:   0f 9e c0                        	setle al
0x804accc:   0f b6 d0                        	movzx edx, al
0x804accf:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x804acd3:   39 c2                           	cmp edx, eax
0x804acd5:   0f 9f c0                        	setg al
0x804acd8:   0f b6 c0                        	movzx eax, al
0x804acdb:   0f b6 5d d2                     	movzx ebx, byte ptr [ebp - 0x2e]
0x804acdf:   ba 00 00 00 00                  	mov edx, 0
0x804ace4:   f7 f3                           	div ebx
0x804ace6:   89 d0                           	mov eax, edx
0x804ace8:   39 c1                           	cmp ecx, eax
0x804acea:   0f 97 c0                        	seta al
0x804aced:   89 c2                           	mov edx, eax
0x804acef:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804acf3:   31 d0                           	xor eax, edx
0x804acf5:   83 c0 4c                        	add eax, 0x4c
0x804acf8:   0f be d0                        	movsx edx, al
0x804acfb:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804ad02:   0f af c2                        	imul eax, edx
0x804ad05:   85 c0                           	test eax, eax
0x804ad07:   0f 84 77 02 00 00               	je 0x804af84 <func_1+0x17a9>
0x804ad0d:   c7 85 1c ff ff ff d0 17 d5 a7   	mov dword ptr [ebp - 0xe4], 0xa7d517d0
0x804ad17:   80 bd 6b ff ff ff 00            	cmp byte ptr [ebp - 0x95], 0
0x804ad1e:   0f 84 3e 01 00 00               	je 0x804ae62 <func_1+0x1687>
0x804ad24:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804ad2b:   0f 84 eb 00 00 00               	je 0x804ae1c <func_1+0x1641>
0x804ad31:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x804ad3b:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804ad41:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804ad44:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804ad48:   0f bf 95 68 ff ff ff            	movsx edx, word ptr [ebp - 0x98]
0x804ad4f:   0f b7 5d c0                     	movzx ebx, word ptr [ebp - 0x40]
0x804ad53:   0f bf 7d c2                     	movsx edi, word ptr [ebp - 0x3e]
0x804ad57:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804ad5b:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804ad61:   0f b6 4d c7                     	movzx ecx, byte ptr [ebp - 0x39]
0x804ad65:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804ad6b:   0f be b5 6b ff ff ff            	movsx esi, byte ptr [ebp - 0x95]
0x804ad72:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804ad78:   0f be 4d d1                     	movsx ecx, byte ptr [ebp - 0x2f]
0x804ad7c:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x804ad82:   0f b6 75 d2                     	movzx esi, byte ptr [ebp - 0x2e]
0x804ad86:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804ad8c:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804ad90:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x804ad96:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x804ad9a:   89 b5 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], esi
0x804ada0:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804ada4:   89 8d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ecx
0x804adaa:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x804adae:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x804adb2:   50                              	push eax
0x804adb3:   52                              	push edx
0x804adb4:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804adb7:   53                              	push ebx
0x804adb8:   57                              	push edi
0x804adb9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804adbf:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804adc5:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804adc8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804adcb:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804add1:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804add7:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804addd:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ade3:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ade9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804adec:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804adf2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804adf5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804adf8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804adfb:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804ae01:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804ae07:   56                              	push esi
0x804ae08:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ae0b:   51                              	push ecx
0x804ae0c:   e8 15 e8 ff ff                  	call 0x8049626 <set_var>
0x804ae11:   83 c4 60                        	add esp, 0x60
0x804ae14:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804ae17:   e9 3b 03 00 00                  	jmp 0x804b157 <func_1+0x197c>
0x804ae1c:   66 c7 85 1a ff ff ff 02 00      	mov word ptr [ebp - 0xe6], 2
0x804ae25:   0f be 85 33 ff ff ff            	movsx eax, byte ptr [ebp - 0xcd]
0x804ae2c:   39 85 2c ff ff ff               	cmp dword ptr [ebp - 0xd4], eax
0x804ae32:   0f 9c c0                        	setl al
0x804ae35:   0f b6 c0                        	movzx eax, al
0x804ae38:   31 85 20 ff ff ff               	xor dword ptr [ebp - 0xe0], eax
0x804ae3e:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x804ae45:   83 e8 01                        	sub eax, 1
0x804ae48:   66 89 85 1a ff ff ff            	mov word ptr [ebp - 0xe6], ax
0x804ae4f:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804ae56:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804ae59:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804ae60:   eb 49                           	jmp 0x804aeab <func_1+0x16d0>
0x804ae62:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804ae66:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804ae6a:   0f bf 85 3c ff ff ff            	movsx eax, word ptr [ebp - 0xc4]
0x804ae71:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804ae77:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804ae7b:   f7 d0                           	not eax
0x804ae7d:   98                              	cwde 
0x804ae7e:   c1 f8 0e                        	sar eax, 0xe
0x804ae81:   85 c0                           	test eax, eax
0x804ae83:   75 07                           	jne 0x804ae8c <func_1+0x16b1>
0x804ae85:   80 bd 33 ff ff ff 00            	cmp byte ptr [ebp - 0xcd], 0
0x804ae8c:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x804ae93:   83 c8 01                        	or eax, 1
0x804ae96:   0f bf d0                        	movsx edx, ax
0x804ae99:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804ae9d:   39 c2                           	cmp edx, eax
0x804ae9f:   0f 9c c0                        	setl al
0x804aea2:   0f b6 c0                        	movzx eax, al
0x804aea5:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804aeab:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804aeaf:   0f bf 95 68 ff ff ff            	movsx edx, word ptr [ebp - 0x98]
0x804aeb6:   0f b7 5d c0                     	movzx ebx, word ptr [ebp - 0x40]
0x804aeba:   0f bf 7d c2                     	movsx edi, word ptr [ebp - 0x3e]
0x804aebe:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804aec2:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804aec8:   0f b6 4d c7                     	movzx ecx, byte ptr [ebp - 0x39]
0x804aecc:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804aed2:   0f be b5 6b ff ff ff            	movsx esi, byte ptr [ebp - 0x95]
0x804aed9:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804aedf:   0f be 4d d1                     	movsx ecx, byte ptr [ebp - 0x2f]
0x804aee3:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x804aee9:   0f b6 75 d2                     	movzx esi, byte ptr [ebp - 0x2e]
0x804aeed:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804aef3:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804aef7:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x804aefd:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x804af01:   89 b5 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], esi
0x804af07:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804af0b:   89 8d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ecx
0x804af11:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x804af15:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x804af19:   50                              	push eax
0x804af1a:   52                              	push edx
0x804af1b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804af1e:   53                              	push ebx
0x804af1f:   57                              	push edi
0x804af20:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804af26:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804af2c:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804af2f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804af32:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804af38:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804af3e:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804af44:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804af4a:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804af50:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804af53:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804af59:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804af5c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804af5f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804af62:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804af68:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804af6e:   56                              	push esi
0x804af6f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804af72:   51                              	push ecx
0x804af73:   e8 ae e6 ff ff                  	call 0x8049626 <set_var>
0x804af78:   83 c4 60                        	add esp, 0x60
0x804af7b:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804af7f:   e9 d3 01 00 00                  	jmp 0x804b157 <func_1+0x197c>
0x804af84:   0f be 95 27 ff ff ff            	movsx edx, byte ptr [ebp - 0xd9]
0x804af8b:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804af8f:   0f b6 4d d1                     	movzx ecx, byte ptr [ebp - 0x2f]
0x804af93:   0f b6 c0                        	movzx eax, al
0x804af96:   f6 f1                           	div cl
0x804af98:   0f b6 c4                        	movzx eax, ah
0x804af9b:   0f b6 c0                        	movzx eax, al
0x804af9e:   39 c2                           	cmp edx, eax
0x804afa0:   0f 94 c0                        	sete al
0x804afa3:   0f b6 d0                        	movzx edx, al
0x804afa6:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804afaa:   39 c2                           	cmp edx, eax
0x804afac:   0f 9d c0                        	setge al
0x804afaf:   0f b6 c0                        	movzx eax, al
0x804afb2:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804afb8:   0f bf 95 3e ff ff ff            	movsx edx, word ptr [ebp - 0xc2]
0x804afbf:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804afc3:   29 c2                           	sub edx, eax
0x804afc5:   89 d0                           	mov eax, edx
0x804afc7:   3d dd 00 00 00                  	cmp eax, 0xdd
0x804afcc:   0f 9e c2                        	setle dl
0x804afcf:   80 7d d1 01                     	cmp byte ptr [ebp - 0x2f], 1
0x804afd3:   75 10                           	jne 0x804afe5 <func_1+0x180a>
0x804afd5:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804afdc:   74 07                           	je 0x804afe5 <func_1+0x180a>
0x804afde:   b8 01 00 00 00                  	mov eax, 1
0x804afe3:   eb 05                           	jmp 0x804afea <func_1+0x180f>
0x804afe5:   b8 00 00 00 00                  	mov eax, 0
0x804afea:   83 e0 01                        	and eax, 1
0x804afed:   21 d0                           	and eax, edx
0x804afef:   0f b6 c0                        	movzx eax, al
0x804aff2:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804aff5:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804aff8:   09 85 34 ff ff ff               	or dword ptr [ebp - 0xcc], eax
0x804affe:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804b002:   83 c8 01                        	or eax, 1
0x804b005:   98                              	cwde 
0x804b006:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804b009:   c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0x804b013:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804b016:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804b01c:   0f 92 c0                        	setb al
0x804b01f:   0f b6 d0                        	movzx edx, al
0x804b022:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x804b027:   0f b7 c0                        	movzx eax, ax
0x804b02a:   01 d0                           	add eax, edx
0x804b02c:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804b02f:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804b033:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804b036:   0f 9e c0                        	setle al
0x804b039:   0f b6 c0                        	movzx eax, al
0x804b03c:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804b03f:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804b045:   0f 9d c0                        	setge al
0x804b048:   0f b6 c0                        	movzx eax, al
0x804b04b:   23 45 dc                        	and eax, dword ptr [ebp - 0x24]
0x804b04e:   89 c2                           	mov edx, eax
0x804b050:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x804b054:   39 c2                           	cmp edx, eax
0x804b056:   0f 9c c0                        	setl al
0x804b059:   0f b6 d0                        	movzx edx, al
0x804b05c:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804b060:   39 c2                           	cmp edx, eax
0x804b062:   75 13                           	jne 0x804b077 <func_1+0x189c>
0x804b064:   66 c7 85 6c fe ff ff 03 00      	mov word ptr [ebp - 0x194], 3
0x804b06d:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804b070:   66 89 85 6c fe ff ff            	mov word ptr [ebp - 0x194], ax
0x804b077:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804b07b:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804b07e:   01 d0                           	add eax, edx
0x804b080:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804b083:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804b087:   0f bf 95 68 ff ff ff            	movsx edx, word ptr [ebp - 0x98]
0x804b08e:   0f b7 5d c0                     	movzx ebx, word ptr [ebp - 0x40]
0x804b092:   0f bf 7d c2                     	movsx edi, word ptr [ebp - 0x3e]
0x804b096:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804b09a:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804b0a0:   0f b6 4d c7                     	movzx ecx, byte ptr [ebp - 0x39]
0x804b0a4:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804b0aa:   0f be b5 6b ff ff ff            	movsx esi, byte ptr [ebp - 0x95]
0x804b0b1:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804b0b7:   0f be 4d d1                     	movsx ecx, byte ptr [ebp - 0x2f]
0x804b0bb:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x804b0c1:   0f b6 75 d2                     	movzx esi, byte ptr [ebp - 0x2e]
0x804b0c5:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804b0cb:   0f b6 4d d3                     	movzx ecx, byte ptr [ebp - 0x2d]
0x804b0cf:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x804b0d5:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x804b0d9:   89 b5 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], esi
0x804b0df:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804b0e3:   89 8d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ecx
0x804b0e9:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x804b0ed:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x804b0f1:   50                              	push eax
0x804b0f2:   52                              	push edx
0x804b0f3:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804b0f6:   53                              	push ebx
0x804b0f7:   57                              	push edi
0x804b0f8:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804b0fe:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804b104:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804b107:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804b10a:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804b110:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804b116:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804b11c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804b122:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804b128:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804b12b:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804b131:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804b134:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804b137:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804b13a:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804b140:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804b146:   56                              	push esi
0x804b147:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804b14a:   51                              	push ecx
0x804b14b:   e8 d6 e4 ff ff                  	call 0x8049626 <set_var>
0x804b150:   83 c4 60                        	add esp, 0x60
0x804b153:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804b157:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804b15a:   5b                              	pop ebx
0x804b15b:   5e                              	pop esi
0x804b15c:   5f                              	pop edi
0x804b15d:   5d                              	pop ebp
0x804b15e:   c3                              	ret 
; function: main at 0x804b15f -- 0x804b4e3
0x804b15f:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804b163:   83 e4 f0                        	and esp, 0xfffffff0
0x804b166:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804b169:   55                              	push ebp
0x804b16a:   89 e5                           	mov ebp, esp
0x804b16c:   53                              	push ebx
0x804b16d:   51                              	push ecx
0x804b16e:   83 ec 10                        	sub esp, 0x10
0x804b171:   e8 1a d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b176:   81 c3 8a 2e 00 00               	add ebx, 0x2e8a
0x804b17c:   89 c8                           	mov eax, ecx
0x804b17e:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804b185:   83 38 02                        	cmp dword ptr [eax], 2
0x804b188:   75 26                           	jne 0x804b1b0 <main+0x51>
0x804b18a:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804b18d:   83 c0 04                        	add eax, 4
0x804b190:   8b 00                           	mov eax, dword ptr [eax]
0x804b192:   83 ec 08                        	sub esp, 8
0x804b195:   8d 93 c8 d5 ff ff               	lea edx, [ebx - 0x2a38]
0x804b19b:   52                              	push edx
0x804b19c:   50                              	push eax
0x804b19d:   e8 5e d1 ff ff                  	call 0x8048300 <strcmp>
0x804b1a2:   83 c4 10                        	add esp, 0x10
0x804b1a5:   85 c0                           	test eax, eax
0x804b1a7:   75 07                           	jne 0x804b1b0 <main+0x51>
0x804b1a9:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804b1b0:   e8 a1 d2 ff ff                  	call 0x8048456 <platform_main_begin>
0x804b1b5:   e8 b1 e2 ff ff                  	call 0x804946b <crc32_gentab>
0x804b1ba:   e8 1c e6 ff ff                  	call 0x80497db <func_1>
0x804b1bf:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804b1c6:   98                              	cwde 
0x804b1c7:   83 ec 04                        	sub esp, 4
0x804b1ca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1cd:   8d 93 ca d5 ff ff               	lea edx, [ebx - 0x2a36]
0x804b1d3:   52                              	push edx
0x804b1d4:   50                              	push eax
0x804b1d5:   e8 9d e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1da:   83 c4 10                        	add esp, 0x10
0x804b1dd:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804b1e3:   89 c2                           	mov edx, eax
0x804b1e5:   83 ec 04                        	sub esp, 4
0x804b1e8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1eb:   8d 83 ce d5 ff ff               	lea eax, [ebx - 0x2a32]
0x804b1f1:   50                              	push eax
0x804b1f2:   52                              	push edx
0x804b1f3:   e8 7f e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1f8:   83 c4 10                        	add esp, 0x10
0x804b1fb:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804b202:   0f b6 c0                        	movzx eax, al
0x804b205:   83 ec 04                        	sub esp, 4
0x804b208:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b20b:   8d 93 d3 d5 ff ff               	lea edx, [ebx - 0x2a2d]
0x804b211:   52                              	push edx
0x804b212:   50                              	push eax
0x804b213:   e8 5f e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b218:   83 c4 10                        	add esp, 0x10
0x804b21b:   0f b6 83 2d 00 00 00            	movzx eax, byte ptr [ebx + 0x2d]
0x804b222:   0f b6 c0                        	movzx eax, al
0x804b225:   83 ec 04                        	sub esp, 4
0x804b228:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b22b:   8d 93 d8 d5 ff ff               	lea edx, [ebx - 0x2a28]
0x804b231:   52                              	push edx
0x804b232:   50                              	push eax
0x804b233:   e8 3f e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b238:   83 c4 10                        	add esp, 0x10
0x804b23b:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804b242:   0f be c0                        	movsx eax, al
0x804b245:   83 ec 04                        	sub esp, 4
0x804b248:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b24b:   8d 93 dd d5 ff ff               	lea edx, [ebx - 0x2a23]
0x804b251:   52                              	push edx
0x804b252:   50                              	push eax
0x804b253:   e8 1f e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b258:   83 c4 10                        	add esp, 0x10
0x804b25b:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804b261:   89 c2                           	mov edx, eax
0x804b263:   83 ec 04                        	sub esp, 4
0x804b266:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b269:   8d 83 e2 d5 ff ff               	lea eax, [ebx - 0x2a1e]
0x804b26f:   50                              	push eax
0x804b270:   52                              	push edx
0x804b271:   e8 01 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b276:   83 c4 10                        	add esp, 0x10
0x804b279:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804b27f:   89 c2                           	mov edx, eax
0x804b281:   83 ec 04                        	sub esp, 4
0x804b284:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b287:   8d 83 e7 d5 ff ff               	lea eax, [ebx - 0x2a19]
0x804b28d:   50                              	push eax
0x804b28e:   52                              	push edx
0x804b28f:   e8 e3 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b294:   83 c4 10                        	add esp, 0x10
0x804b297:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804b29d:   89 c2                           	mov edx, eax
0x804b29f:   83 ec 04                        	sub esp, 4
0x804b2a2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2a5:   8d 83 ec d5 ff ff               	lea eax, [ebx - 0x2a14]
0x804b2ab:   50                              	push eax
0x804b2ac:   52                              	push edx
0x804b2ad:   e8 c5 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2b2:   83 c4 10                        	add esp, 0x10
0x804b2b5:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804b2bb:   89 c2                           	mov edx, eax
0x804b2bd:   83 ec 04                        	sub esp, 4
0x804b2c0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2c3:   8d 83 f2 d5 ff ff               	lea eax, [ebx - 0x2a0e]
0x804b2c9:   50                              	push eax
0x804b2ca:   52                              	push edx
0x804b2cb:   e8 a7 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2d0:   83 c4 10                        	add esp, 0x10
0x804b2d3:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804b2d9:   83 ec 04                        	sub esp, 4
0x804b2dc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2df:   8d 93 f8 d5 ff ff               	lea edx, [ebx - 0x2a08]
0x804b2e5:   52                              	push edx
0x804b2e6:   50                              	push eax
0x804b2e7:   e8 8b e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2ec:   83 c4 10                        	add esp, 0x10
0x804b2ef:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804b2f6:   0f b6 c0                        	movzx eax, al
0x804b2f9:   83 ec 04                        	sub esp, 4
0x804b2fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2ff:   8d 93 fe d5 ff ff               	lea edx, [ebx - 0x2a02]
0x804b305:   52                              	push edx
0x804b306:   50                              	push eax
0x804b307:   e8 6b e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b30c:   83 c4 10                        	add esp, 0x10
0x804b30f:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b315:   89 c2                           	mov edx, eax
0x804b317:   83 ec 04                        	sub esp, 4
0x804b31a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b31d:   8d 83 04 d6 ff ff               	lea eax, [ebx - 0x29fc]
0x804b323:   50                              	push eax
0x804b324:   52                              	push edx
0x804b325:   e8 4d e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b32a:   83 c4 10                        	add esp, 0x10
0x804b32d:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804b334:   0f b6 c0                        	movzx eax, al
0x804b337:   83 ec 04                        	sub esp, 4
0x804b33a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b33d:   8d 93 0a d6 ff ff               	lea edx, [ebx - 0x29f6]
0x804b343:   52                              	push edx
0x804b344:   50                              	push eax
0x804b345:   e8 2d e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b34a:   83 c4 10                        	add esp, 0x10
0x804b34d:   0f b6 83 4d 00 00 00            	movzx eax, byte ptr [ebx + 0x4d]
0x804b354:   0f be c0                        	movsx eax, al
0x804b357:   83 ec 04                        	sub esp, 4
0x804b35a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b35d:   8d 93 10 d6 ff ff               	lea edx, [ebx - 0x29f0]
0x804b363:   52                              	push edx
0x804b364:   50                              	push eax
0x804b365:   e8 0d e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b36a:   83 c4 10                        	add esp, 0x10
0x804b36d:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804b374:   0f be c0                        	movsx eax, al
0x804b377:   83 ec 04                        	sub esp, 4
0x804b37a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b37d:   8d 93 16 d6 ff ff               	lea edx, [ebx - 0x29ea]
0x804b383:   52                              	push edx
0x804b384:   50                              	push eax
0x804b385:   e8 ed e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b38a:   83 c4 10                        	add esp, 0x10
0x804b38d:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b393:   83 ec 04                        	sub esp, 4
0x804b396:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b399:   8d 93 1c d6 ff ff               	lea edx, [ebx - 0x29e4]
0x804b39f:   52                              	push edx
0x804b3a0:   50                              	push eax
0x804b3a1:   e8 d1 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3a6:   83 c4 10                        	add esp, 0x10
0x804b3a9:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b3af:   89 c2                           	mov edx, eax
0x804b3b1:   83 ec 04                        	sub esp, 4
0x804b3b4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3b7:   8d 83 22 d6 ff ff               	lea eax, [ebx - 0x29de]
0x804b3bd:   50                              	push eax
0x804b3be:   52                              	push edx
0x804b3bf:   e8 b3 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3c4:   83 c4 10                        	add esp, 0x10
0x804b3c7:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804b3ce:   0f b6 c0                        	movzx eax, al
0x804b3d1:   83 ec 04                        	sub esp, 4
0x804b3d4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3d7:   8d 93 28 d6 ff ff               	lea edx, [ebx - 0x29d8]
0x804b3dd:   52                              	push edx
0x804b3de:   50                              	push eax
0x804b3df:   e8 93 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3e4:   83 c4 10                        	add esp, 0x10
0x804b3e7:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804b3ee:   0f b7 c0                        	movzx eax, ax
0x804b3f1:   83 ec 04                        	sub esp, 4
0x804b3f4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3f7:   8d 93 2e d6 ff ff               	lea edx, [ebx - 0x29d2]
0x804b3fd:   52                              	push edx
0x804b3fe:   50                              	push eax
0x804b3ff:   e8 73 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b404:   83 c4 10                        	add esp, 0x10
0x804b407:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804b40e:   98                              	cwde 
0x804b40f:   83 ec 04                        	sub esp, 4
0x804b412:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b415:   8d 93 34 d6 ff ff               	lea edx, [ebx - 0x29cc]
0x804b41b:   52                              	push edx
0x804b41c:   50                              	push eax
0x804b41d:   e8 55 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b422:   83 c4 10                        	add esp, 0x10
0x804b425:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804b42c:   0f b7 c0                        	movzx eax, ax
0x804b42f:   83 ec 04                        	sub esp, 4
0x804b432:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b435:   8d 93 3a d6 ff ff               	lea edx, [ebx - 0x29c6]
0x804b43b:   52                              	push edx
0x804b43c:   50                              	push eax
0x804b43d:   e8 35 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b442:   83 c4 10                        	add esp, 0x10
0x804b445:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b44b:   89 c2                           	mov edx, eax
0x804b44d:   83 ec 04                        	sub esp, 4
0x804b450:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b453:   8d 83 40 d6 ff ff               	lea eax, [ebx - 0x29c0]
0x804b459:   50                              	push eax
0x804b45a:   52                              	push edx
0x804b45b:   e8 17 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b460:   83 c4 10                        	add esp, 0x10
0x804b463:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804b46a:   98                              	cwde 
0x804b46b:   83 ec 04                        	sub esp, 4
0x804b46e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b471:   8d 93 46 d6 ff ff               	lea edx, [ebx - 0x29ba]
0x804b477:   52                              	push edx
0x804b478:   50                              	push eax
0x804b479:   e8 f9 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b47e:   83 c4 10                        	add esp, 0x10
0x804b481:   0f b7 83 66 00 00 00            	movzx eax, word ptr [ebx + 0x66]
0x804b488:   0f b7 c0                        	movzx eax, ax
0x804b48b:   83 ec 04                        	sub esp, 4
0x804b48e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b491:   8d 93 4c d6 ff ff               	lea edx, [ebx - 0x29b4]
0x804b497:   52                              	push edx
0x804b498:   50                              	push eax
0x804b499:   e8 d9 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b49e:   83 c4 10                        	add esp, 0x10
0x804b4a1:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b4a7:   83 ec 04                        	sub esp, 4
0x804b4aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4ad:   8d 93 52 d6 ff ff               	lea edx, [ebx - 0x29ae]
0x804b4b3:   52                              	push edx
0x804b4b4:   50                              	push eax
0x804b4b5:   e8 bd e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4ba:   83 c4 10                        	add esp, 0x10
0x804b4bd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b4c3:   f7 d0                           	not eax
0x804b4c5:   83 ec 08                        	sub esp, 8
0x804b4c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4cb:   50                              	push eax
0x804b4cc:   e8 95 cf ff ff                  	call 0x8048466 <platform_main_end>
0x804b4d1:   83 c4 10                        	add esp, 0x10
0x804b4d4:   b8 00 00 00 00                  	mov eax, 0
0x804b4d9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b4dc:   59                              	pop ecx
0x804b4dd:   5b                              	pop ebx
0x804b4de:   5d                              	pop ebp
0x804b4df:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b4e2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b4e3 -- 0x804b4e7
0x804b4e3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b4e6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b4e7 -- 0x804b4eb
0x804b4e7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b4ea:   c3                              	ret 
; data inside code section at 0x804b4eb -- 0x804b4f0
0x804b4eb:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804b4f0 -- 0x804b54d
0x804b4f0:   55                              	push ebp
0x804b4f1:   57                              	push edi
0x804b4f2:   56                              	push esi
0x804b4f3:   53                              	push ebx
0x804b4f4:   e8 97 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b4f9:   81 c3 07 2b 00 00               	add ebx, 0x2b07
0x804b4ff:   83 ec 0c                        	sub esp, 0xc
0x804b502:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b506:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b50c:   e8 bb cd ff ff                  	call 0x80482cc <_init>
0x804b511:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b517:   29 c6                           	sub esi, eax
0x804b519:   c1 fe 02                        	sar esi, 2
0x804b51c:   85 f6                           	test esi, esi
0x804b51e:   74 25                           	je 0x804b545 <__libc_csu_init+0x55>
0x804b520:   31 ff                           	xor edi, edi
0x804b522:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b528:   83 ec 04                        	sub esp, 4
0x804b52b:   55                              	push ebp
0x804b52c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b530:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b534:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b53b:   83 c7 01                        	add edi, 1
0x804b53e:   83 c4 10                        	add esp, 0x10
0x804b541:   39 fe                           	cmp esi, edi
0x804b543:   75 e3                           	jne 0x804b528 <__libc_csu_init+0x38>
0x804b545:   83 c4 0c                        	add esp, 0xc
0x804b548:   5b                              	pop ebx
0x804b549:   5e                              	pop esi
0x804b54a:   5f                              	pop edi
0x804b54b:   5d                              	pop ebp
0x804b54c:   c3                              	ret 
; data inside code section at 0x804b54d -- 0x804b550
0x804b54d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b550 -- 0x804b552
0x804b550:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b554 -- 0x804b568
0x804b554:   53                              	push ebx
0x804b555:   83 ec 08                        	sub esp, 8
0x804b558:   e8 33 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b55d:   81 c3 a3 2a 00 00               	add ebx, 0x2aa3
0x804b563:   83 c4 08                        	add esp, 8
0x804b566:   5b                              	pop ebx
0x804b567:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 6c b5 04 08  04 00 00 00 11 00 10 00   |....l...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b568:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b578:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b588:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b598:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b5a8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b5b8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b5c8:   31 00 67 5f 34 00 67 5f  31 32 00 67 5f 31 35 00   |1.g_4.g_12.g_15.|
0x804b5d8:   67 5f 33 35 00 67 5f 33  38 00 67 5f 35 39 00 67   |g_35.g_38.g_59.g|
0x804b5e8:   5f 36 34 00 67 5f 31 32  39 00 67 5f 31 33 37 00   |_64.g_129.g_137.|
0x804b5f8:   67 5f 31 33 38 00 67 5f  32 30 30 00 67 5f 32 30   |g_138.g_200.g_20|
0x804b608:   33 00 67 5f 32 30 34 00  67 5f 32 31 35 00 67 5f   |3.g_204.g_215.g_|
0x804b618:   32 34 31 00 67 5f 32 34  35 00 67 5f 32 36 37 00   |241.g_245.g_267.|
0x804b628:   67 5f 32 36 38 00 67 5f  33 31 32 00 67 5f 33 37   |g_268.g_312.g_37|
0x804b638:   32 00 67 5f 33 37 39 00  67 5f 34 30 39 00 67 5f   |2.g_379.g_409.g_|
0x804b648:   34 31 31 00 67 5f 34 31  33 00 67 5f 35 38 37 00   |411.g_413.g_587.|
0x804b658:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b668:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b678:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b688:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b698:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b6a8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b6b8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b6c0:   01 1b 03 3b b8 02 00 00  56 00 00 00 30 cc ff ff   |...;....V...0...|
0x804b6d0:   e8 02 00 00 70 cc ff ff  0c 03 00 00 c0 cc ff ff   |....p...........|
0x804b6e0:   d4 02 00 00 96 cd ff ff  20 03 00 00 a6 cd ff ff   |........ .......|
0x804b6f0:   40 03 00 00 d4 cd ff ff  64 03 00 00 f2 cd ff ff   |@.......d.......|
0x804b700:   84 03 00 00 1a ce ff ff  a4 03 00 00 44 ce ff ff   |............D...|
0x804b710:   c4 03 00 00 6d ce ff ff  e4 03 00 00 b0 ce ff ff   |....m...........|
0x804b720:   04 04 00 00 f1 ce ff ff  24 04 00 00 49 cf ff ff   |........$...I...|
0x804b730:   48 04 00 00 9b cf ff ff  6c 04 00 00 d8 cf ff ff   |H.......l.......|
0x804b740:   8c 04 00 00 0f d0 ff ff  ac 04 00 00 2e d0 ff ff   |................|
0x804b750:   cc 04 00 00 58 d0 ff ff  ec 04 00 00 84 d0 ff ff   |....X...........|
0x804b760:   0c 05 00 00 af d0 ff ff  2c 05 00 00 f8 d0 ff ff   |........,.......|
0x804b770:   4c 05 00 00 3f d1 ff ff  6c 05 00 00 99 d1 ff ff   |L...?...l.......|
0x804b780:   90 05 00 00 ed d1 ff ff  b4 05 00 00 2c d2 ff ff   |............,...|
0x804b790:   d4 05 00 00 65 d2 ff ff  f4 05 00 00 87 d2 ff ff   |....e...........|
0x804b7a0:   14 06 00 00 d5 d2 ff ff  34 06 00 00 11 d3 ff ff   |........4.......|
0x804b7b0:   54 06 00 00 9a d3 ff ff  74 06 00 00 cc d3 ff ff   |T.......t.......|
0x804b7c0:   94 06 00 00 fc d3 ff ff  b4 06 00 00 41 d4 ff ff   |............A...|
0x804b7d0:   d4 06 00 00 80 d4 ff ff  f4 06 00 00 b2 d4 ff ff   |................|
0x804b7e0:   14 07 00 00 de d4 ff ff  34 07 00 00 fc d4 ff ff   |........4.......|
0x804b7f0:   54 07 00 00 24 d5 ff ff  74 07 00 00 49 d5 ff ff   |T...$...t...I...|
0x804b800:   94 07 00 00 6e d5 ff ff  b4 07 00 00 a5 d5 ff ff   |....n...........|
0x804b810:   d4 07 00 00 d9 d5 ff ff  f4 07 00 00 2b d6 ff ff   |............+...|
0x804b820:   18 08 00 00 77 d6 ff ff  3c 08 00 00 ae d6 ff ff   |....w...<.......|
0x804b830:   5c 08 00 00 df d6 ff ff  7c 08 00 00 fe d6 ff ff   |\.......|.......|
0x804b840:   9c 08 00 00 28 d7 ff ff  bc 08 00 00 50 d7 ff ff   |....(.......P...|
0x804b850:   dc 08 00 00 79 d7 ff ff  fc 08 00 00 b5 d7 ff ff   |....y...........|
0x804b860:   1c 09 00 00 ef d7 ff ff  3c 09 00 00 42 d8 ff ff   |........<...B...|
0x804b870:   60 09 00 00 8f d8 ff ff  84 09 00 00 c7 d8 ff ff   |`...............|
0x804b880:   a4 09 00 00 f9 d8 ff ff  c4 09 00 00 0d d9 ff ff   |................|
0x804b890:   e4 09 00 00 24 d9 ff ff  04 0a 00 00 39 d9 ff ff   |....$.......9...|
0x804b8a0:   24 0a 00 00 4f d9 ff ff  44 0a 00 00 76 d9 ff ff   |$...O...D...v...|
0x804b8b0:   64 0a 00 00 9b d9 ff ff  84 0a 00 00 da d9 ff ff   |d...............|
0x804b8c0:   a4 0a 00 00 13 da ff ff  c4 0a 00 00 3f da ff ff   |............?...|
0x804b8d0:   e4 0a 00 00 65 da ff ff  04 0b 00 00 a7 da ff ff   |....e...........|
0x804b8e0:   24 0b 00 00 e9 da ff ff  44 0b 00 00 2b db ff ff   |$.......D...+...|
0x804b8f0:   64 0b 00 00 a0 db ff ff  84 0b 00 00 fd db ff ff   |d...............|
0x804b900:   a4 0b 00 00 5a dc ff ff  c4 0b 00 00 b7 dc ff ff   |....Z...........|
0x804b910:   e4 0b 00 00 47 dd ff ff  04 0c 00 00 ab dd ff ff   |....G...........|
0x804b920:   24 0c 00 00 1b de ff ff  44 0c 00 00 62 de ff ff   |$.......D...b...|
0x804b930:   68 0c 00 00 b7 de ff ff  88 0c 00 00 fe de ff ff   |h...............|
0x804b940:   ac 0c 00 00 66 df ff ff  d0 0c 00 00 1b e1 ff ff   |....f...........|
0x804b950:   00 0d 00 00 9f fa ff ff  30 0d 00 00 23 fe ff ff   |........0...#...|
0x804b960:   68 0d 00 00 27 fe ff ff  7c 0d 00 00 30 fe ff ff   |h...'...|...0...|
0x804b970:   90 0d 00 00 90 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b97c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b98c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b99c:   e4 c9 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b9ac:   30 00 00 00 40 c9 ff ff  40 00 00 00 00 0e 08 46   |0...@...@......F|
0x804b9bc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b9cc:   10 00 00 00 54 00 00 00  5c c9 ff ff 08 00 00 00   |....T...\.......|
0x804b9dc:   00 00 00 00 1c 00 00 00  68 00 00 00 6e ca ff ff   |........h...n...|
0x804b9ec:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b9fc:   04 04 00 00 20 00 00 00  88 00 00 00 5e ca ff ff   |.... .......^...|
0x804ba0c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ba1c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ba2c:   68 ca ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804ba3c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ba4c:   66 ca ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |f...(....A....B.|
0x804ba5c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ba6c:   6e ca ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |n...*....A....B.|
0x804ba7c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ba8c:   78 ca ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |x...)....A....B.|
0x804ba9c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804baac:   81 ca ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804babc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804bacc:   a4 ca ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804badc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804baec:   c5 ca ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804bafc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804bb0c:   90 01 00 00 f9 ca ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804bb1c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804bb2c:   1c 00 00 00 b4 01 00 00  27 cb ff ff 3d 00 00 00   |........'...=...|
0x804bb3c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804bb4c:   1c 00 00 00 d4 01 00 00  44 cb ff ff 37 00 00 00   |........D...7...|
0x804bb5c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb6c:   1c 00 00 00 f4 01 00 00  5b cb ff ff 1f 00 00 00   |........[.......|
0x804bb7c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb8c:   1c 00 00 00 14 02 00 00  5a cb ff ff 2a 00 00 00   |........Z...*...|
0x804bb9c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bbac:   1c 00 00 00 34 02 00 00  64 cb ff ff 2c 00 00 00   |....4...d...,...|
0x804bbbc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804bbcc:   1c 00 00 00 54 02 00 00  70 cb ff ff 2b 00 00 00   |....T...p...+...|
0x804bbdc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804bbec:   1c 00 00 00 74 02 00 00  7b cb ff ff 49 00 00 00   |....t...{...I...|
0x804bbfc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804bc0c:   1c 00 00 00 94 02 00 00  a4 cb ff ff 47 00 00 00   |............G...|
0x804bc1c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804bc2c:   20 00 00 00 b4 02 00 00  cb cb ff ff 5a 00 00 00   | ...........Z...|
0x804bc3c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bc4c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 01 cc ff ff   |.... ...........|
0x804bc5c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bc6c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bc7c:   31 cc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |1...?....A....B.|
0x804bc8c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bc9c:   50 cc ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |P...9....A....B.|
0x804bcac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bcbc:   69 cc ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |i..."....A....B.|
0x804bccc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bcdc:   6b cc ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |k...N....A....B.|
0x804bcec:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bcfc:   99 cc ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804bd0c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bd1c:   b5 cc ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd2c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bd3c:   1e cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bd4c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bd5c:   30 cd ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |0...0....A....B.|
0x804bd6c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bd7c:   40 cd ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |@...E....A....B.|
0x804bd8c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bd9c:   65 cd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |e...?....A....B.|
0x804bdac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bdbc:   84 cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bdcc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bddc:   96 cd ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bdec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bdfc:   a2 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be0c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804be1c:   a0 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804be2c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804be3c:   a8 cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be4c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804be5c:   ad cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804be7c:   b2 cd ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804be8c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804be9c:   c9 cd ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804beac:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bebc:   dd cd ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804becc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bedc:   60 05 00 00 0b ce ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804beec:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804befc:   1c 00 00 00 84 05 00 00  33 ce ff ff 37 00 00 00   |........3...7...|
0x804bf0c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bf1c:   1c 00 00 00 a4 05 00 00  4a ce ff ff 31 00 00 00   |........J...1...|
0x804bf2c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bf3c:   1c 00 00 00 c4 05 00 00  5b ce ff ff 1f 00 00 00   |........[.......|
0x804bf4c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bf5c:   1c 00 00 00 e4 05 00 00  5a ce ff ff 2a 00 00 00   |........Z...*...|
0x804bf6c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bf7c:   1c 00 00 00 04 06 00 00  64 ce ff ff 28 00 00 00   |........d...(...|
0x804bf8c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bf9c:   1c 00 00 00 24 06 00 00  6c ce ff ff 29 00 00 00   |....$...l...)...|
0x804bfac:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bfbc:   1c 00 00 00 44 06 00 00  75 ce ff ff 3c 00 00 00   |....D...u...<...|
0x804bfcc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bfdc:   1c 00 00 00 64 06 00 00  91 ce ff ff 3a 00 00 00   |....d.......:...|
0x804bfec:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bffc:   20 00 00 00 84 06 00 00  ab ce ff ff 53 00 00 00   | ...........S...|
0x804c00c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804c01c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 da ce ff ff   |.... ...........|
0x804c02c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804c03c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804c04c:   03 cf ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804c05c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804c06c:   1b cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c07c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804c08c:   2d cf ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804c09c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804c0ac:   21 cf ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |!........A....B.|
0x804c0bc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804c0cc:   18 cf ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0dc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804c0ec:   0d cf ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0fc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804c10c:   03 cf ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804c11c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c12c:   0a cf ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804c13c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c14c:   0f cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c15c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c16c:   2e cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c17c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c18c:   47 cf ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |G...,....A....B.|
0x804c19c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c1ac:   53 cf ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |S...&....A....B.|
0x804c1bc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c1cc:   59 cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Y...B....A....B.|
0x804c1dc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c1ec:   7b cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |{...B....A....B.|
0x804c1fc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c20c:   9d cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c21c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c22c:   bf cf ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c23c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c24c:   14 d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c25c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c26c:   51 d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Q...]....A....B.|
0x804c27c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c28c:   8e d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c29c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c2ac:   cb d0 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c2bc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c2cc:   3b d1 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |;...d....A....B.|
0x804c2dc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c2ec:   7f d1 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c2fc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c30c:   cf d1 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c31c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c32c:   b0 09 00 00 f2 d1 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c33c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c34c:   d0 09 00 00 27 d2 ff ff  47 00 00 00 00 41 0e 08   |....'...G....A..|
0x804c35c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c36c:   20 00 00 00 f4 09 00 00  4a d2 ff ff 68 00 00 00   | .......J...h...|
0x804c37c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c38c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 8e d2 ff ff   |....,...........|
0x804c39c:   b5 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804c3ac:   86 04 83 05 03 a8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c3bc:   04 00 00 00 2c 00 00 00  48 0a 00 00 13 d4 ff ff   |....,...H.......|
0x804c3cc:   84 19 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c3dc:   86 04 83 05 03 74 19 c3  41 c6 41 c7 41 c5 0c 04   |.....t..A.A.A...|
0x804c3ec:   04 00 00 00 34 00 00 00  78 0a 00 00 67 ed ff ff   |....4...x...g...|
0x804c3fc:   84 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c40c:   0f 03 75 78 06 10 03 02  75 7c 03 6f 03 c1 0c 01   |..ux....u|.o....|
0x804c41c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c42c:   b0 0a 00 00 b3 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c43c:   10 00 00 00 c4 0a 00 00  a3 f0 ff ff 04 00 00 00   |................|
0x804c44c:   00 00 00 00 48 00 00 00  d8 0a 00 00 98 f0 ff ff   |....H...........|
0x804c45c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c46c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c47c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c48c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c49c:   10 00 00 00 24 0b 00 00  ac f0 ff ff 02 00 00 00   |....$...........|
0x804c4ac:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 54 b5 04 08  19 00 00 00 0c df 04 08   |....T...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 2b 53 00 00   |............+S..|
0x804e028:   e4 5e 47 c4 02 da ff 00  07 00 00 00 f5 de 87 a5   |.^G.............|
0x804e038:   03 2b b3 51 9a f5 95 6e  43 94 b3 5b 80 00 00 00   |.+.Q...nC..[....|
0x804e048:   2c ff 08 29 e1 f6 01 00  1a 68 31 b4 ff ff ff ff   |,..).....h1.....|
0x804e058:   ff 00 fa 4c 69 2d 00 00  6c fd 38 e2 01 00 1b 10   |...Li-..l.8.....|
0x804e068:   01 00 00 00 ??                                     |....?           |
